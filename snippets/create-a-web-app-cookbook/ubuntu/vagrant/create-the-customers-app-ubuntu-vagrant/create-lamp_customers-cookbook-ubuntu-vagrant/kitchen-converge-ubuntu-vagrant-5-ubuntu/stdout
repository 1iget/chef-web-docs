-----> Starting Kitchen (v1.16.0)
-----> Creating <default-ubuntu-1404>...
       Bringing machine 'default' up with 'virtualbox' provider...
       ==> default: Importing base box 'bento/ubuntu-14.04'...
       ==> default: Checking if box 'bento/ubuntu-14.04' is up to date...
       ==> default: Setting the name of the VM: kitchen-lamp_customers-default-ubuntu-1404_default_1491924168105_74842
       ==> default: Clearing any previously set network interfaces...
       ==> default: Preparing network interfaces based on configuration...
           default: Adapter 1: nat
           default: Adapter 2: hostonly
       ==> default: Forwarding ports...
           default: 22 (guest) => 2222 (host) (adapter 1)
       ==> default: Booting VM...
       ==> default: Waiting for machine to boot. This may take a few minutes...
           default: SSH address: 127.0.0.1:2222
           default: SSH username: vagrant
           default: SSH auth method: private key
           default: 
           default: Vagrant insecure key detected. Vagrant will automatically replace
           default: this with a newly generated keypair for better security.
           default: 
           default: Inserting generated public key within guest...
           default: Removing insecure key from the guest if it's present...
           default: Key inserted! Disconnecting and reconnecting using new SSH key...
       ==> default: Machine booted and ready!
       ==> default: Checking for guest additions in VM...
       ==> default: Setting hostname...
       ==> default: Configuring and enabling network interfaces...
       ==> default: Mounting shared folders...
           default: /tmp/omnibus/cache => /root/.kitchen/cache
       ==> default: Machine not provisioned because `--no-provision` is specified.
       [SSH] Established
       Vagrant instance <default-ubuntu-1404> created.
       Finished creating <default-ubuntu-1404> (0m39.79s).
-----> Converging <default-ubuntu-1404>...
       Preparing files for transfer
       Preparing dna.json
       Resolving cookbook dependencies with Berkshelf 5.6.4...
       Removing non-cookbook files before transfer
       Preparing data_bags
       Preparing validation.pem
       Preparing client.rb
-----> Installing Chef Omnibus (install only if missing)
       Downloading https://omnitruck.chef.io/install.sh to file /tmp/install.sh
       Trying wget...
       Download complete.
       ubuntu 14.04 x86_64
       Getting information for chef stable  for ubuntu...
       downloading https://omnitruck.chef.io/stable/chef/metadata?v=&p=ubuntu&pv=14.04&m=x86_64
         to file /tmp/install.sh.1622/metadata.txt
       trying wget...
       sha1	ca05a74077a8a91d7b1dd6d7d335aa77c985f3e7
       sha256	3793f783ed7d134968f36063062398faf147edab7a1e88a1131deea730ced0d5
       url	https://packages.chef.io/files/stable/chef/13.0.113/ubuntu/14.04/chef_13.0.113-1_amd64.deb
       version	13.0.113
       downloaded metadata file looks valid...
       /tmp/omnibus/cache/chef_13.0.113-1_amd64.deb already exists, verifiying checksum...
       Comparing checksum with sha256sum...
       checksum compare succeeded, using existing file!
       
       WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
       
       You are installing an omnibus package without a version pin.  If you are installing
       on production servers via an automated process this is DANGEROUS and you will
       be upgraded without warning on new releases, even to new major releases.
       Letting the version float is only appropriate in desktop, test, development or
       CI/CD environments.
       
       WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
[...]
        +        fi
        +        # exit codes 1, 11 (EXIT_CANNOT_CONNECT_TO_SERVICE) are expected,
        +        # anything else suggests a configuration error
        +        if [ $mret -ne 1 -a $mret -ne 11 ]; then
        +            ret=1
        +            break
        +        fi
        +        # "Access denied" also means the server is alive
        +        echo "$RESPONSE" | grep -q "Access denied for user" && break
        +        sleep 1
        +done
        +
        +exit $ret
        - change mode from '' to '0755'
        - change owner from '' to 'root'
        - change group from '' to 'root'
             * template[/etc/init/mysql-default.conf] action create
        - create new file /etc/init/mysql-default.conf
        - update content in file /etc/init/mysql-default.conf from none to b6b61d
        --- /etc/init/mysql-default.conf	2017-04-11 15:24:49.452940263 +0000
        +++ /etc/init/.chef-mysql-default20170411-1724-1ugicza.conf	2017-04-11 15:24:49.452940263 +0000
        @@ -1 +1,27 @@
        +# mysql-default Service
        +
        +description     "MySQL service mysql-default"
        +author          "chef-client"
        +
        +start on runlevel [2345]
        +stop on starting rc RUNLEVEL=[016]
        +
        +respawn
        +respawn limit 2 5
        +
        +env HOME=/etc/mysql-default
        +umask 007
        +
        +kill timeout 300
        +
        +pre-start script
        +[ -d /run/mysql-default ] || install -m 755 -o mysql -g mysql -d /run/mysql-default
        +[ -d /run/mysql-default ] || install -m 755 -o mysql -g mysql -d /run/mysql-default
        +end script
        +
        +exec /usr/sbin/mysqld --defaults-file=/etc/mysql-default/my.cnf
        +
        +post-start script
        +/usr/sbin/mysql-default-wait-ready
        +end script
        - change mode from '' to '0644'
        - change owner from '' to 'root'
        - change group from '' to 'root'
             * service[mysql-default] action start
        - start service service[mysql-default]
           
         
         * mysql2_chef_gem_mysql2_chef_gem_mysql[default] action install
         Recipe: build-essential::default
           * build_essential[install_packages] action install
             * apt_package[autoconf, binutils-doc, bison, build-essential, flex, gettext, ncurses-dev] action install
        - install version 2.69-6 of package autoconf
        - install version 2.24-5ubuntu14.1 of package binutils-doc
        - install version 2:3.0.2.dfsg-2 of package bison
        - install version 11.6ubuntu6 of package build-essential
        - install version 2.5.35-10.1ubuntu2 of package flex
        - install version 0.18.3.1-1ubuntu3 of package gettext
        - install version 5.9+20140118-1ubuntu1 of package ncurses-dev
           
           * mysql_client_installation_package[default] action create
             * apt_package[mysql-client-5.5, libmysqlclient-dev] action install (up to date)
       (up to date)
           * gem_package[mysql2] action install
             - install version 0.4.5 of package mysql2
         
       Recipe: lamp::database
         * mysql_database[my_company] action create
           - Creating schema 'my_company'
         * mysql_database_user[db_admin] action create
           - Creating user 'db_admin'@'127.0.0.1'
         * mysql_database_user[db_admin] action grant
           - Granting privs for 'db_admin'@'127.0.0.1'
       Recipe: lamp::web
         * httpd_service_debian_sysvinit[default] action restart
           * service[apache2-default] action restart
             - restart service service[apache2-default]
         
       
       Running handlers:
       Running handlers complete
       Chef Client finished, 133/213 resources updated in 07 minutes 43 seconds
       Finished converging <default-ubuntu-1404> (8m15.18s).
-----> Kitchen is finished. (8m55.86s)