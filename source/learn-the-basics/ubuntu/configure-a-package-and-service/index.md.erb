---
title: 'Configure a package and service'
order: 3
description: 'See why order matters by managing a package and its service.'
keywords: package, service, file, resource, Apache, apache2
layout: lesson
sections: [summary, exercises]
next: {heading: Next, partial: next}
time_to_complete: 15 minutes
---
[HEADLINE] Like files, packages and services are also types of resources. Chef applies resources in the order you specify.

Let's extend what you learned about file management in the previous lesson to manage the Apache HTTP Server package and its service.

Of course, you can set up one web server manually. But with Chef it'll be easier to manage your infrastructure as you scale, add complexity, and roll out new configuration policies.

[START_BOX]

## 1. Ensure the apt cache is up to date

In this part you'll configure Apache. Because we want to install the latest version of Apache, it's important to ensure that your system's package index contains the latest list of what packages are available.

You _could_ run the `apt-get update` command manually when you bring up your instance. But over time, you would need to remember to periodically update the `apt` cache to get the latest updates. Chef provides the [apt_update](https://docs.chef.io/resource_apt_update.html) resource to automate the process.

From your <code class="file-path">~/chef-repo</code> directory, add this code to a file named <code class="file-path">webserver.rb</code>.

```ruby
# ~/chef-repo/webserver.rb
apt_update 'Update the apt cache daily' do
  frequency 86_400
  action :periodic
end
```

In a production environment, you might run Chef periodically to ensure your systems are kept up to date. As an example, you might run Chef multiple times in a day. However, you likely don't need to update the `apt` cache every time you run Chef. The `frequency` property specifies how often to update the `apt` cache (in seconds.) Here, we specify 86,400 seconds to update the cache once every 24 hours. (The `_` notation is a Ruby convention that helps make numeric values more readable.)

The `:periodic` action means that the update occurs periodically. Another option would be to use the `:update` action to update the `apt` cache each time Chef runs.

[END_BOX]

[START_BOX]

## 2. Install the Apache package

Now let's install the Apache package, `apache2`. Modify <code class="file-path">webserver.rb</code> to look like this.

```ruby
# ~/chef-repo/webserver.rb
apt_update 'Update the apt cache daily' do
  frequency 86_400
  action :periodic
end

package 'apache2'
```

We don't need to specify an action because `:install` is the default.

Now run `chef-client` to apply the recipe.

```bash
# ~/chef-repo
$ sudo chef-client --local-mode webserver.rb
[2016-03-23T13:57:56+00:00] WARN: No config file found or specified on command line, using command line options.
[2016-03-23T13:57:56+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /home/vagrant/chef-repo.
Starting Chef Client, version 12.7.2
resolving cookbooks for run list: []
Synchronizing Cookbooks:
Compiling Cookbooks...
[2016-03-23T13:57:57+00:00] WARN: Node default-ubuntu-1404 has an empty run list.
Converging 2 resources
Recipe: @recipe_files::/home/vagrant/chef-repo/webserver.rb
  * apt_update[Update the apt cache daily] action periodic
    * directory[/var/lib/apt/periodic] action create (up to date)
    * directory[/etc/apt/apt.conf.d] action create (up to date)
    * file[/etc/apt/apt.conf.d/15update-stamp] action create_if_missing
      - create new file /etc/apt/apt.conf.d/15update-stamp
      - update content in file /etc/apt/apt.conf.d/15update-stamp from none to c399a7
      --- /etc/apt/apt.conf.d/15update-stamp	2016-03-23 13:57:57.621075991 +0000
      +++ /etc/apt/apt.conf.d/.15update-stamp20160323-6305-hwu0m9	2016-03-23 13:57:57.621075991 +0000
      @@ -1 +1,2 @@
      +APT::Update::Post-Invoke-Success {"touch /var/lib/apt/periodic/update-success-stamp 2>/dev/null || true";};
    - update new lists of packages
  * apt_package[apache2] action install
    - install version 2.4.7-1ubuntu4.9 of package apache2

Running handlers:
Running handlers complete
Chef Client finished, 3/5 resources updated in 16 seconds
```

[COMMENT] `sudo` is required because this command installs a package and therefore must be run with root privileges. If you're running as root on your own machine, you can omit `sudo` from the command.

Run the recipe a second time.

```bash
# ~/chef-repo
$ sudo chef-client --local-mode webserver.rb
[2016-03-23T13:58:16+00:00] WARN: No config file found or specified on command line, using command line options.
[2016-03-23T13:58:16+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /home/vagrant/chef-repo.
Starting Chef Client, version 12.7.2
resolving cookbooks for run list: []
Synchronizing Cookbooks:
Compiling Cookbooks...
[2016-03-23T13:58:17+00:00] WARN: Node default-ubuntu-1404 has an empty run list.
Converging 2 resources
Recipe: @recipe_files::/home/vagrant/chef-repo/webserver.rb
  * apt_update[Update the apt cache daily] action periodic (up to date)
  * apt_package[apache2] action install (up to date)

Running handlers:
Running handlers complete
Chef Client finished, 0/2 resources updated in 01 seconds
```

You see that Chef does no work because there's nothing to do &ndash; it's not yet time to update the `apt` cache and the Apache package is already installed.

[END_BOX]

[START_BOX]

## 3. Start and enable the Apache service

Now let's first enable the Apache service when the server boots and then start the service. Modify <code class="file-path">webserver.rb</code> to look like this.

```ruby
# ~/chef-repo/webserver.rb
apt_update 'Update the apt cache daily' do
  frequency 86_400
  action :periodic
end

package 'apache2'

service 'apache2' do
  supports :status => true
  action [:enable, :start]
end
```

This code declares multiple actions.

[LINUX] Ubuntu 14.04 provides two init systems. The `supports :status => true` part tells Chef that the `apache2` init script supports the `status` message. This information helps Chef use the appropriate strategy to determine if the `apache2` service is running. If you're interested, [read this blog post](https://www.chef.io/blog/2014/09/18/chef-where-is-my-ubuntu-14-04-service-support/) for more information.

Now apply it.

```bash
# ~/chef-repo
$ sudo chef-client --local-mode webserver.rb
[2016-03-23T13:58:19+00:00] WARN: No config file found or specified on command line, using command line options.
[2016-03-23T13:58:19+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /home/vagrant/chef-repo.
Starting Chef Client, version 12.7.2
resolving cookbooks for run list: []
Synchronizing Cookbooks:
Compiling Cookbooks...
[2016-03-23T13:58:20+00:00] WARN: Node default-ubuntu-1404 has an empty run list.
Converging 3 resources
Recipe: @recipe_files::/home/vagrant/chef-repo/webserver.rb
  * apt_update[Update the apt cache daily] action periodic (up to date)
  * apt_package[apache2] action install (up to date)
  * service[apache2] action enable (up to date)
  * service[apache2] action start (up to date)

Running handlers:
Running handlers complete
Chef Client finished, 0/4 resources updated in 01 seconds
```

The package is already installed, so there's nothing to do. Similarly, the service is already started and enabled. On some Linux distros, Apache is not started or enabled as it is installed. With Chef, this is easy to verify.

[END_BOX]

[START_BOX]

## 4. Add a home page

Let's spruce things up and add a custom home page.

You already know how to configure a `file` resource; append one that configures the default home page, <code class="file-path">/var/www/html/index.html</code>, to the end of <code class="file-path">webserver.rb</code>. The entire recipe now looks like this.

```ruby
# ~/chef-repo/webserver.rb
apt_update 'Update the apt cache daily' do
  frequency 86_400
  action :periodic
end

package 'apache2'

service 'apache2' do
  supports :status => true
  action [:enable, :start]
end

file '/var/www/html/index.html' do
  content '<html>
  <body>
    <h1>hello world</h1>
  </body>
</html>'
end
```

[LINUX] Versions of Ubuntu prior to 14.04 use <code class="file-path">/var/www/index.html</code> as the default home page, so adjust your recipe accordingly if your version of Ubuntu is prior to 14.04.

Now apply it.

```bash
# ~/chef-repo/
$ sudo chef-client --local-mode webserver.rb
[2016-03-23T13:58:22+00:00] WARN: No config file found or specified on command line, using command line options.
[2016-03-23T13:58:22+00:00] WARN: No cookbooks directory found at or above current directory.  Assuming /home/vagrant/chef-repo.
Starting Chef Client, version 12.7.2
resolving cookbooks for run list: []
Synchronizing Cookbooks:
Compiling Cookbooks...
[2016-03-23T13:58:23+00:00] WARN: Node default-ubuntu-1404 has an empty run list.
Converging 4 resources
Recipe: @recipe_files::/home/vagrant/chef-repo/webserver.rb
  * apt_update[Update the apt cache daily] action periodic (up to date)
  * apt_package[apache2] action install (up to date)
  * service[apache2] action enable (up to date)
  * service[apache2] action start (up to date)
  * file[/var/www/html/index.html] action create
    - update content in file /var/www/html/index.html from 538f31 to 2914aa
    --- /var/www/html/index.html	2016-03-23 13:58:10.130818445 +0000
    +++ /var/www/html/.index.html20160323-7927-1llskpd	2016-03-23 13:58:23.432164927 +0000
[...]
    +    <h1>hello world</h1>
       </body>
     </html>
    -

Running handlers:
Running handlers complete
Chef Client finished, 1/5 resources updated in 01 seconds
```

[END_BOX]

[START_BOX]

## 5. Confirm your web site is running

Run the `curl` command to confirm that your web page is available.

```bash
# ~/chef-repo
$ curl localhost
<html>
  <body>
    <h1>hello world</h1>
  </body>
</html>
```

The free trial virtual machine does not have a public IP address, but if you're working through this tutorial on your own VM, you can access your web server from a browser on another machine. You'll see something like this.

![The basic home page](misc/webserver-basic-remote.png)

[END_BOX]
