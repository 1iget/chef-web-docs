---
title: 'Appendix: Set up your own server to manage'
order: 5
description: "Set up your own environment for learning the Chef basics."
keywords: TODO
layout: lesson
time_to_complete: 30-60 minutes
---
Here are steps that are required to set up your own environment for use with this tutorial.

1. [Launch a Red Hat Enterprise Linux or CentOS instance](#step1)
1. [Install an SSH client if you're working from a Windows workstation](#step2)
1. [Connect to your instance from your workstation over SSH](#step3)
1. [Verify Internet access](#step4)
1. [Install the Chef DK on your server](#step5)
1. [Set up a text editor on your server](#step6)

Because you'll directly modify the state of your server, we strongly suggest that you work through this tutorial in a disposable environment such as a Red Hat Enterprise Linux or CentOS virtual machine or cloud instance. You can also use a spare physical machine that's running Red Hat Enterprise Linux or CentOS.

[START_BOX]

## 1. Launch a Red Hat Enterprise Linux 6.5 or CentOS 6.5 server

To ensure that the output you see matches the sample output that's shown, we recommend that you run Red Hat Enterprise Linux 6.5 or CentOS 6.5 on your server. Ensure that you have `sudo` or root access to the server.

If you don't have a preferred way to set up a server, here are some popular options.

<% accordion('vm-aws', 'Amazon Web Services') do %>

<% markdown do %>

AWS's [one-year free account](https://aws.amazon.com/free/?sc_channel=PS&sc_campaign=acquisition_US&sc_publisher=google&sc_medium=cloud_computing_b&sc_content=aws_free_e&sc_detail=aws%20free%20tier&sc_category=cloud_computing&sc_segment=73823473242&sc_matchtype=e&sc_country=US&s_kwcid=AL!4422!3!73823473242!e!!g!!aws%20free%20tier&ef_id=VV3lAgAAAHK07c0y:20151119221840:s) gives you 750 hours per month of usage on the t2.micro tier.

If you're new to AWS, their ["Launch a Linux Virtual Machine" tutorial](https://aws.amazon.com/getting-started/launch-a-virtual-machine/) walks you through the creation of your first Linux virtual machine.

When you're ready to continue with this tutorial, visit the [AWS Marketplace](https://aws.amazon.com/marketplace/pp/B00IOYDTV6) to create a CentOS 6.5 instance. Select t2.micro to take advantage of the free usage tier. When you create your security group, ensure that ports 22 (SSH), 80 (HTTP), and 443 (HTTPS) are open for inbound network traffic.

<% end %>

<% end %>

<% accordion('vm-azure', 'Microsoft Azure') do %>

<% markdown do %>

Microsoft Azure is offering a [30-day free trial](https://azure.microsoft.com/en-us/free/) for up to $200 of usage.

When you're ready to continue with this tutorial, [go to the "Create a Virtual Machine Running Linux using the Azure portal"](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-tutorial-portal-rm/) tutorial on the Azure site. At the step where you choose the VM image, search for **CentOS-based 6.5**, published by OpenLogic. Ensure that your instance contains endpoints for inbound network access on ports 22 (SSH), 80 (HTTP), and 443 (HTTPS).

<% end %>

<% end %>

<% accordion('vm-vagrant', 'VirtualBox and Vagrant') do %>

<% markdown do %>

[VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/) are free virtualization tools that enable you to manage virtual machine instances on your workstation.

Choose this option if you don't have access to cloud resources or you prefer to work with local virtual machines. You'll also need reasonably powerful hardware. Ensure that:

* your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS.
* your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation) requirements for running VirtualBox.
* your workstation has at least 5GB of free disk space. This will enable you to download the base image and run a few virtual machine instances.
* your workstation has at least 512MB memory available per virtual machine instance.
* nested virtualization is enabled if you're using another virtual machine as your workstation through a program such as VMWare Fusion.

Here's how to install VirtualBox and Vagrant and bring up a CentOS 6.5 instance.

Start by installing Virtual Box and Vagrant.

### Install VirtualBox

<%= partial 'layouts/install_virtualbox' %>

### Install Vagrant

<%= partial 'layouts/install_vagrant' %>
<%= partial 'layouts/vagrant_centos_box' %>

<% end %>

<% end %>

[END_BOX]

[START_BOX]

## 2. Windows workstation only &ndash; install an SSH client

In this tutorial, you'll log in to your Red Hat Enterprise Linux or CentOS instance over an SSH connection from your workstation. To do so, you'll need an SSH client. Mac OS and most Linux distributions come with an SSH client. On Windows, you'll need to install one manually.

The easiest way to get set up is to [install Git](http://git-scm.com/download/), which includes an SSH client.

After you install Git, ensure that the path to the Git binaries are included in your system `PATH`.

Here's an example that adds the default Git path, <code class="file-path">C:\\Program Files (x86)\\Git\\bin</code>, to your `PATH` environment variable.

```ps
$ $path = [Environment]::GetEnvironmentVariable("PATH")
$ $git_path = "C:\Program Files (x86)\Git\bin"
$ [Environment]::SetEnvironmentVariable("PATH", "$path;$git_path")
```

[PuTTY](http://www.putty.org) is another popular SSH client for connecting to Linux machines.

[END_BOX]

[START_BOX]

## 3. Connect to your server

Now create an SSH connection to your server from your workstation.

[WINDOWS] If you're on a Windows workstation and have Git installed, you can use the `ssh` command that we show here. If you're using PuTTY, the [getting started](http://the.earth.li/~sgtatham/putty/0.66/htmldoc/Chapter2.html#gs) guide shows how to start an SSH connection. Also, if you're using key-based authentication, you'll need to [convert your private key](http://the.earth.li/~sgtatham/putty/0.64/htmldoc/Chapter8.html#pubkey) to a format PuTTY can use.

Here are examples for the various ways you can connect.

### Connect using a username and password

```bash
$ ssh root@40.76.28.32
The authenticity of host '40.76.28.32 (40.76.28.32)' can't be established.
RSA key fingerprint is SHA256:YiT1n9QZ64GnXcCeRpYMOLxpJZ9IjCft1Fpf5tvAFuQ.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '40.76.28.32' (RSA) to the list of known hosts.
root@40.76.28.32's password:
[root@40.76.28.32 ~]$
```

### Connect using key-based authentication

```bash
$ ssh -i ~/.ssh/my.pem root@40.76.28.32
The authenticity of host '40.76.28.32 (40.76.28.32)' can't be established.
RSA key fingerprint is SHA256:YiT1n9QZ64GnXcCeRpYMOLxpJZ9IjCft1Fpf5tvAFuQ.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '40.76.28.32' (RSA) to the list of known hosts.
[root@40.76.28.32 ~]$
```

### Connect to a Vagrant instance

From the directory where you ran `vagrant up`, run `vagrant ssh` to create an SSH connection to your CentOS virtual machine.

```bash
$ vagrant ssh
Last login: Fri Mar  7 16:57:20 2014 from 10.0.2.2
[vagrant@localhost ~]$
```

[END_BOX]

[START_BOX]

## 4. Verify network access

For this tutorial, you'll need to ensure that your virtual machine can access the Internet and has ports 22 (SSH), 80 (HTTP), and 443 (HTTPS) open to inbound traffic through the firewall.

Although Chef can be run completely from behind the firewall, giving your virtual machine Internet access is the easiest way to install packages and perform other common tasks.

We'll show you how to use Chef to configure the firewall in a later tutorial. But for now, manually ensure that your server can reach the Internet through your company's firewall. One easy way to test your connection is to run `curl` to retrieve www.cnn.com and search the output for a 200 OK result.

```bash
$ curl -I http://www.cnn.com | grep HTTP/1.1
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0 88096    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
HTTP/1.1 200 OK
```

If you see 200 OK in the output, you're all set and can [move to the next step](#installthechefdevelopmentkit).

If you receive an error like this one, you'll need to configure your firewall.

```bash
$ curl -I http://www.cnn.com | grep HTTP/1.1

curl: (6) Couldn't resolve host 'www.cnn.com'
```

<% accordion('configure-firewall', 'Configure the firewall') do %>

<%= partial 'layouts/partials/configure_iptables' %>

<p/>
If you're still unable to connect, your company's firewall or proxy server might be blocking outbound Internet access. In that case, you may need to work with your network administrator to see what options are available for you to access the Internet from your server.

<% end %>

[END_BOX]

[START_BOX]

## 5. Install the Chef DK

Remember, for learning purposes, you'll start by managing a server directly. To do that, you'll install the Chef DK on your virtual machine. The Chef DK provides tools that enable you to manage your servers remotely from your workstation. But it also provides tools that allow you to configure a machine directly.

From your Red Hat Enterprise Linux or CentOS instance, run this from the command line to install the Chef DK.

```bash
$ curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -c current -P chefdk
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 17892  100 17892    0     0  18700      0 --:--:-- --:--:-- --:--:-- 34080
Downloading chefdk  for el...
[...]
Preparing...                ########################################### [100%]
   1:chefdk                 ########################################### [100%]
Thank you for installing Chef Development Kit!
```

[END_BOX]

[START_BOX]

## 6. Set up a text editor

Because Chef uses _code_ to express infrastructure policy, it's important that you use a text editor that provides features such as syntax highlighting and line numbering.

Install a text editor now. Because you're accessing your server from an SSH connection, choose a command-line text editor such as `emacs`, `nano`, or `vim`.

Here are some examples of how to get started.

<% accordion('emacs-gs', 'Emacs') do %>

<%= partial 'layouts/partials/emacs_gs_rhel' %>

<% end %>

<% accordion('nano-gs', 'Nano') do %>

<%= partial 'layouts/partials/nano_gs_rhel' %>

<% end %>

<% accordion('vim-gs', 'Vim') do %>

<%= partial 'layouts/partials/vim_gs_rhel' %>

<% end %>

[END_BOX]

<% next_page(current_page.parents[0].children[0]) do %>

Now that you have your virtual machine with the Chef DK and a text editor set up, let's use Chef to configure a file, a kind of _resource_, on it.

<% end %>
