---
title: 'Set up your workstation'
order: 2
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: 2 hours
survey_id: Betfc8doFaGlJLYu635jYbACof1cENmM8fQAfwmZBT5nX9gqZVxCU6byDKS6c_2FFs
meta_tags: [{name: "ROBOTS", content: "NOINDEX, NOFOLLOW"}]
---
[CALLOUT networks/team-members-workstation.svg] Perform this part from a team member's workstation.

In the previous lesson, you or your system administrator set up a Chef Delivery cluster. Now you're ready to use it. You'll interact with Chef Delivery from your workstation, but first you'll need to set it up.

[PRODNOTE] Call out here which operating systems we support. Also recommend using a VM / warning about nested virtualization.

[COMMENT] If your administrator installed Chef Delivery, review [the installation at a glance](/delivery/customers-web-app/install-chef-delivery#theinstallationataglance) to get a sense of what components are involved and how they fit together.

[START_BOX]

## Workstation setup overview

[PRODNOTE] Fix up links when they're finalized.

You'll start by [gathering some information about your Delivery installation]().

Then you'll install these software packages:

* [Git]()
* [Chef DK]()
* [knife-push]()
* [Delivery command-line tools]()
* Optionally, [VirtualBox and Vagrant]()

Then you'll perform these tasks to complete your setup.

* [Create a working directory]()
* [Associate a public SSH key with your Delivery user]()
* [Connect the Delivery CLI to the Chef Delivery server]()
* [Generate a Delivery API token]()
* [Authenticate access to Delivery's Git server]()
* Optionally, [set up your Chef server account]()

[END_BOX]

[START_BOX]

## 1. Gather information about your Delivery server

You'll need some information [from the previous lesson](/delivery/customers-web-app/install-chef-delivery#step3). You can get this information from your administrator if you did not perform the installation.

* The Chef server URL, for example, https://10.194.13.167/organizations/test, and logon information.
* The Chef Delivery web interface URL, for example, https://10.194.9.174/e/test/.
* Your Chef Delivery username and initial password.

Also ensure that you are connected to the VPN that contains your Delivery cluster on AWS. An easy way to verify this is to connect to Chef Delivery web interface URL from a web browser. You should be able to log on using your username and initial password and access the Delivery dashboard.

![](delivery/delivery-dashboard.png)

[END_BOX]

[START_BOX]

## 2. Install Git

You'll need [Git](https://git-scm.com/downloads) to obtain starter code for your project and to interact with Delivery's Git server.

[WINDOWS] On Windows, Git 2.6 is not currently supported for use with Chef Delivery.

[WINDOWS] Many Windows users use Git BASH, which is part of [Git for Windows](https://git-for-windows.github.io). [posh-git](https://git-scm.com/book/en/v2/Git-in-Other-Environments-Git-in-Powershell) is another popular option, which provides access to Git from Windows PowerShell.

[END_BOX]

[START_BOX]

## 3. Install the Chef Development Kit

The Chef Development Kit, or Chef DK, gives you the tools needed to write Chef code from your workstation.

[Install the Chef DK](https://downloads.chef.io/chef-dk/) now if you haven't already.

Be sure to set the system Ruby; for details, see [Add Ruby to $PATH](https://docs.chef.io/install_dk.html#add-ruby-to-path).

[END_BOX]

[START_BOX]

## 4. Install the knife push plugin

[PRODNOTE] I don't think this is needed. Can cut.

The `knife push` plugin enables you to view the status of the build nodes in your Delivery cluster. Install the plugin like this.

```bash
$ chef gem install knife-push
Fetching: knife-push-0.5.2.gem (100%)
Successfully installed knife-push-0.5.2
1 gem installed
```

[END_BOX]

[START_BOX]

## 4. Install the Delivery CLI

[PRODNOTE] We need to lock down which OS versions each of these is available from. For example, we don't build packages for Ubuntu 15.04+, so `sudo apt-get install delivery-cli` won't work (you need to build from sources, but there's a work-around even to that.)

You'll use the `delivery` command line interface (CLI) to interact with Chef Delivery. Follow the procedure that matches your workstation OS.

[START_TABS cli Mac OS X, RHEL, Ubuntu, Windows]

[START_TAB cliMacOSX active]

1. [Download the package](https://s3.amazonaws.com/delivery-packages/cli/deliverycli-0.0.0%2B20151118205039-1.pkg).
1. Click the package and install.
1. You may need to allow the package on the machine. To do this, open **System Preferences** > **Security & Privacy**, and click **Allow**. You may also go to your <code class="file-path">~/Downloads</code> folder and right-click the package to open the installer. Accept the agreement to install the package.

[END_TAB]

[START_TAB cliWindows]

1. [Download the Delivery CLI installer](https://s3.amazonaws.com/delivery-packages/cli/delivery-cli-0.0.0%2B20151020165859-1-x64.msi).
1. Click the package and install.
1. Modify your `PATH` environment variable to include the path to the `delivery` executable. For example: <code class="file-path">C:\\chef\\delivery-cli\\bin</code>.

[END_TAB]

[START_TAB cliRHEL]

Download the Delivery CLI package like this.

```bash
$ curl -o delivery-cli.rpm https://s3.amazonaws.com/delivery-packages/cli/delivery-cli-20150408004719-1.x86_64.rpm
```

Then run this to install it.

```bash
$ sudo yum install delivery-cli.rpm
```

[END_TAB]

[START_TAB cliUbuntu]

Run this command to add packagecloud.io's repository to your `apt` sources list.

```bash
# ~
$ curl https://packagecloud.io/install/repositories/chef/current/script.deb.sh | sudo bash
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  5128    0  5128    0     0   4870      0 --:--:--  0:00:01 --:--:--  4874
Detected operating system as Ubuntu/vivid.
Checking for curl...
Detected curl...
Running apt-get update... done.
Installing apt-transport-https... done.
Installing /etc/apt/sources.list.d/chef_current.list...done.
Importing packagecloud gpg key... done.
Running apt-get update... done.

The repository is setup! You can now install packages.
```

Then run this command to install the Delivery CLI package.

```bash
# ~
$ sudo apt-get install delivery-cli
```

[END_TAB]

[END_TABS]

[END_BOX]

[START_BOX]

## 5. Optional: Set up for local development using VirtualBox and Vagrant

Let's begin by installing [VirtualBox](https://www.virtualbox.org) and [Vagrant](https://www.vagrantup.com), which will enable you to verify your work on a local virtual machine.

The [workstation setup](/delivery/customers-web-app/set-up-your-workstation/) had you install the Chef Development Kit, or Chef DK. You'll also need to install Vagrant and VirtualBox to enable you to verify new features before you submit them to the pipeline.

[TIP] This section explains the manual steps to help you understand exactly what software you need to install and how to install it. Alternatively, you can also run the [ChefDK_Bootstrap](https://github.com/Nordstrom/chefdk_bootstrap) script to setup your Windows or Mac workstation for Chef development. The script installs [commonly used development tools](https://github.com/Nordstrom/chefdk_bootstrap#what-does-it-do) such as the Atom text editor, Git, VirtualBox, and Vagrant.

### Before you begin

Ensure that your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS.

If you're using a virtual machine as your workstation through a program such as VMWare Fusion, ensure that nested virtualization is enabled on the virtual machine.

Also ensure that your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation) requirements for running VirtualBox.

If you are unable to run virtual machines from your workstation, you can skip the steps that involve verifying the changes locally.

### Install VirtualBox

Install VirtualBox. VirtualBox manages your virtual machine instances.

<a class='accent-button radius' href='https://www.virtualbox.org/wiki/Downloads' target='_blank'>Install VirtualBox&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

[WINDOWS] If you're on a Windows workstation, [read about other ways](/local-development/windows/get-set-up/get-set-up-vagrant/#step1) you can install VirtualBox and how to ensure your PATH environment variable is properly set.

Then the following command to verify that VirtualBox is installed.

```bash
# ~
$ VBoxManage --version
5.0.4r102546
```

### Install Vagrant

Next, install Vagrant. Test Kitchen uses Vagrant to communicate with VirtualBox and to configure aspects of the virtual machine such as available memory, host name, and network settings.

<a class='accent-button radius' href='https://www.vagrantup.com/downloads.html' target='_blank'>Install Vagrant&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

[WINDOWS] If you're on a Windows workstation, [read about other ways](/local-development/windows/get-set-up/get-set-up-vagrant/#step2) you can install Vagrant and how to ensure your PATH environment variable is properly set.

Then run the following to verify that Vagrant is installed.

```bash
# ~
$ vagrant --version
Vagrant 1.7.4
```

[END_BOX]

[START_BOX]

## 6. Create a working directory

```bash
# ~
$ mkdir ~/learn-chef
$ mkdir ~/learn-chef/delivery-demo
```

[END_BOX]

[START_BOX]

## 7. Update your Delivery user with an SSH public key

You need to associate your public SSH key with your Delivery user.

Start by generating an SSH key. You can skip this step if you already have an SSH public key that you can use, for example, <code class="file-path">~/.ssh/id_rsa.pub</code>.

```bash
# ~
$ ssh-keygen -t rsa -b 4096 -C "you@example.com"
```

The output is similar to:

```bash
# ~
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/username/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /Users/path/to/.ssh/id_rsa.
Your public key has been saved in /Users/path/to/.ssh/id_rsa.pub.
The key fingerprint is:
ac:8a:57:90:58:c1:cd:34:32:18:9d:f3:79:60:f3:41 you@example.com
The key's randomart image is:
+--[ RSA 4096]----+
|  .==*o.E        |
|  . *o*..        |
|   o + = .       |
|  . o o.o        |
|     . ..S       |
|      ..         |
|     ..          |
|   .*o*.         |
|  ...            |
+-----------------+
```

Now print your SSH key to the console, like this.

```bash
# ~
$ cat ~/.ssh/id_rsa.pub
```

The output is similar to:

```bash
# ~
ssh-rsa
AAAAB3NzaC1yc2EAAAADAQABAAACAQDa8BR/9bj5lVUfQP9Rsqon5qJMkiVm+JAtGi
wnhxqgyRhkYLIzm6+gcifDgMOMuwZA88Ib5WNRhxjlmTseapower4rH/jAAczdp1h1
7xLEEbUfQfkcqiy/Drp3k12345678ad234fgvdsasdfasdfR9ddNIeNvQ7OIpOCfLE
PCyFz3aRRuhpM/5cySFT7bl1O44bNgfiuqRzcXFscZb03WPlhaPwCvL2uxaRzdrAGQ
mE5jzCo6nORvKoGdVDa2++def33f3xPZCo3oJ08Q9XJ2CnfJlmyNe1hwI2NOQ3yRbc
nfSMona7ccSyHRWGs5bS//u6P0NK5AqH5jK8pg3XwtHZqLwUVy1wX0WnnJWg9IWXf3
2g3P4O4NJGVUeX33Czv32GK8YphuEweqFu/Ej7kQp1ppIxkEtrpBfMi3na0QqZlk6w
wghZLa++DUfWOhGsuuBgnsocAR5rLGy+gkypdie1Ydoe8qjLVZR/jKybQfQjuZOS30
fZnwJhl2ZaeraPfkEXlVhK02/8PIALGfeXdt9KvQN0p5c6lRoDxqBqslM+1KbKKcGd
lSGEsAIP9OOWBECRxlOwqlqGHtrgWKOr376dntMIy2+fFD/74tJMjRwbRzm8IGWmj6
OcF6EvTYYO4RmISD8G+6dm1m4MlxLS53aZQWgYWvRdfNB1DA
Zo3h9Q== you@example.com
```

Log into the Chef Delivery web interface.

Open your user profile (select **Users** from the drop-down menu on the upper right, then navigate to your profile) and paste the output from your terminal window into the large text area under **Security Information**. If you were assigned an initial password, change it and save your profile.

[END_BOX]

[START_BOX]

## 8. Connect the Delivery CLI to the Chef Delivery server

Next, you'll run the `delivery setup` command to create a file that configures the `delivery` command line interface (CLI) to contact the Chef Delivery server. The command you'll run creates a configuration file named <code class="file-path">.delivery/cli.toml</code>.

The placement of the `.delivery` directory in your file hierarchy is significant. Like Git, Chef Delivery searches the current directory and parent directories for its server settings. Because server settings are unique to an organization, we recommend that you create a directory for each organization you belong to and run the `delivery setup` command from that directory.

Create a working directory for your organization. This tutorial uses `Development`. You can also use <code class="file-path">~/Development</code> for purposes of this tutorial, or you can use your organization name. Just remember to change the paths you see throughout the tutorial.

```bash
$ cd ~
$ mkdir Development
$ cd Development
```

From your workstation terminal, configure the `delivery` command line interface (CLI) to contact the Chef Delivery server at <code class="placeholder">DELIVERY_SERVER</code>, with your <code class="placeholder">ENTERPRISE</code>, <code class="placeholder">ORGANIZATION</code> and <code class="placeholder">USERNAME</code>. In this tutorial, use the IP address of your Chef Delivery server for the `--server` argument.

```bash
# ~/Development
$ delivery setup --server=DELIVERY_SERVER --ent=ENTERPRISE --org=ORGANIZATION --user=USERNAME
```

Here's an example.

```bash
# ~/Development
$ delivery setup --server=10.194.11.99 --ent=chef --org=Development --user=sally
```

This example produces this <code class="file-path">.delivery/cli.toml</code> file.

[END_BOX]

[START_BOX]

## 9. Generate a Delivery API token

Now run `delivery token` to generate an API token. An API token enables you to make authorized requests to your Chef Delivery server.

```bash
# ~/Development
$ delivery token
Chef Delivery
Loading configuration from /home/sally/Development
Requesting Token
Delivery password:
token: 25d1TczLBIH0CfOolhwhKuV56TPdunMm1DO+TQT5c1M=
saved API token to: /home/sally/.delivery/api-tokens
```

[END_BOX]

[START_BOX]

## 10. Authenticate access to Delivery's Git server

[PRODNOTE] See if this is still necessary.

You must authenticate access to your Chef Delivery's Git server, which by default runs on port 8989.

Then run the `ssh` command like this. Enter 'yes' when prompted.

```bash
# ~/Development
$ ssh -l USER@ENTERPRISE -p 8989 IP_ADDRESS
```

Here's an example for a user named `sally` and an enterprise named `chef`.

```bash
# ~/Development
$ ssh -l sally@chef -p 8989 10.194.11.99
The authenticity of host '[10.194.11.99]:8989 ([10.194.11.99]:8989)' can't be established.
RSA key fingerprint is ba:db:0c:97:f8:d4:6d:0f:0b:57:0d:0f:0e:a4:15:01.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[10.194.11.99]:8989' (RSA) to the list of known hosts.
channel 0: protocol error: close rcvd twice
Hi sally@chef! You've successfully authenticated, but Chef Delivery does not provide shell access.
                      Connection to 10.194.11.99 closed.
```

Your workstation is now set up for use with Chef Delivery.

[END_BOX]