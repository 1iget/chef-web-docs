---
title: 'Option 3: Vagrant and VirtualBox'
order: 3
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: Up to 5 hours
---
In this part, you'll set up your workstation to run Windows Server as a virtual machine through Test Kitchen.

[TIP] This page explains the manual steps to help you understand exactly what software you need to install and how to install it. You can also run the [ChefDK_Bootstrap](https://github.com/Nordstrom/chefdk_bootstrap) script to setup your Windows or Mac workstation for Chef development. The script installs [commonly used development tools](https://github.com/Nordstrom/chefdk_bootstrap#what-does-it-do) such as the Atom text editor, Git, VirtualBox, and Vagrant. After you run the script, you can continue to [step 3](#step3) to install the remaining tools.

The setup process involves downloading the evaluation version of Windows Server 2012 R2 as an ISO image and running a [Packer](https://packer.io/) template to convert the ISO image to a format that Vagrant and VirtualBox can use. The Packer template can take several hours to finish. However, you don't need to be present while it runs.

[START_BOX]

## Before you begin

Ensure that your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS.

If you're using a virtual machine as your workstation through a program such as VMWare Fusion, ensure that nested virtualization is enabled on the virtual machine.

Also ensure that your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation) requirements for running VirtualBox.

[END_BOX]

[START_BOX]

## 1. Install VirtualBox

Install VirtualBox. VirtualBox manages your virtual machine instances.

### Install VirtualBox on Windows using Chocolatey

If you use [Chocolatey](https://chocolatey.org) to manage software packages on Windows, run this command to install VirtualBox.

```ps
$ choco install virtualbox
Chocolatey v0.9.9.8
Installing the following packages:
virtualbox
By installing you accept licenses for the packages.

virtualbox v5.0.4.102546

[...]

Chocolatey installed 1/1 package(s). 0 package(s) failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).
```

### Install VirtualBox using the installer

If you're on a Linux or Mac OS workstation or don't use Chocolatey, download and install VirtualBox from the VirtualBox web site.

<a class='accent-button radius' href='https://www.virtualbox.org/wiki/Downloads' target='_blank'>Install VirtualBox&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

<hr>

### Windows only - Update your PATH environment variable

By default, VirtualBox is installed to <code class="file-path">C:\Program Files\Oracle\VirtualBox</code> on Windows. However, the installer does not add this path to your `PATH` environment variable. Run these commands to add VirtualBox to your system path.

```ps
$ $path = [Environment]::GetEnvironmentVariable("PATH")
$ $vbox_path = "C:\Program Files\Oracle\VirtualBox"
$ [Environment]::SetEnvironmentVariable("PATH", "$path;$vbox_path")
```

<hr>

### Verify the installation

Now run the following command to verify that VirtualBox is installed.

```bash
# ~
$ VBoxManage --version
5.0.4r102546
```

[END_BOX]

[START_BOX]

## 2. Install Vagrant

Next, install Vagrant. Test Kitchen uses Vagrant to communicate with VirtualBox and to configure aspects of the virtual machine such as available memory, host name, and network settings.

### Install Vagrant on Windows using Chocolatey

If you use [Chocolatey](https://chocolatey.org) to manage software packages on Windows, run this command to install Vagrant.

```ps
$ choco install vagrant
Chocolatey v0.9.9.8
Installing the following packages:
vagrant
By installing you accept licenses for the packages.

vagrant v1.7.4

[...]

Chocolatey installed 1/1 package(s). 0 package(s) failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).
```

### Install Vagrant using the installer

If you're on a Linux or Mac OS workstation or don't use Chocolatey, download and install Vagrant from the Vagrant web site.

<a class='accent-button radius' href='https://www.vagrantup.com/downloads.html' target='_blank'>Install Vagrant&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

<hr>

### Windows only - Update your PATH environment variable

By default, Vagrant is installed to <code class="file-path">C:\HashiCorp\Vagrant\bin</code> on Windows. However, the installer does not add this path to your `PATH` environment variable. Run these commands to add Vagrant to your system path.

```ps
$ $path = [Environment]::GetEnvironmentVariable("PATH")
$ $vagrant_path = "C:\HashiCorp\Vagrant\bin"
$ [Environment]::SetEnvironmentVariable("PATH", "$path;$vagrant_path")
```

<hr>

### Verify the installation

Now run the following to verify that Vagrant is installed.

```bash
# ~
$ vagrant --version
Vagrant 1.7.4
```

[END_BOX]

[START_BOX]

## 3. Install the vagrant-winrm plugin

Test Kitchen uses the [vagrant-winrm](https://github.com/criteo/vagrant-winrm) Vagrant plugin to enable the host machine to connect to Windows instances over the WinRM protocol.

Install the plugin like this.

```bash
# ~
$ vagrant plugin install vagrant-winrm
Installing the 'vagrant-winrm' plugin. This can take a few minutes...
Installed the plugin 'vagrant-winrm (0.7.0)'!
```

[END_BOX]

[START_BOX]

## 4. Build a Windows Server 2012 R2 Vagrant box

When Vagrant creates a virtual machine instance, it loads an image, or _box_, which captures a snapshot of the operating system in a preconfigured state.

For some operating systems, Test Kitchen can automatically download a Vagrant box for you. It's also common to build your own box if you need it to contain certain software or security updates. Because of the way Windows Server 2012 R2 is licensed, we can't provide you with a preconfigured box. Here, you'll use the evaluation version of Windows Server 2012 R2 to build your own box.

In this part, you'll perform these steps.

1. Install [Packer](https://packer.io/) on your workstation.
1. Get the [packer-templates](https://github.com/mwrock/packer-templates) project from GitHub.
1. Run the Packer template to generate a Vagrant box.
1. Register the box with your local Vagrant catalog.

Read [this blog post](http://www.hurryupandwait.io/blog/creating-windows-base-images-for-virtualbox-and-hyper-v-using-packer-boxstarter-and-vagrant) for more information about the process.

#### Install Packer on your workstation

First, install Packer. Packer builds the Vagrant box from an ISO image.

<a class='accent-button radius' href='https://packer.io/downloads.html' target='_blank'>Install Packer&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

Packer is distributed through a .zip file. After you extract the .zip file, add the path to `packer` to your `PATH` environment variable or use the full path to in the steps that follow.

#### Get the packer-templates project from GitHub

Now download the latest `packer-templates` project from GitHub. This template downloads the evaluation version of Windows Server 2012 R2 as an ISO image, installs all Windows updates, and reduces the size of the image as much as possible.

If you use Git, clone the repository to where you do your development work, for example, <code class="file-path">~/Development/mwrock</code>.

```bash
# ~/Development/mwrock
$ git clone https://github.com/mwrock/packer-templates.git
Cloning into 'packer-templates'...
remote: Counting objects: 186, done.
remote: Total 186 (delta 0), reused 0 (delta 0), pack-reused 186
Receiving objects: 100% (186/186), 33.37 KiB | 0 bytes/s, done.
Resolving deltas: 100% (87/87), done.
Checking connectivity... done.
```

If you don't use Git, you can download a .zip file that contains the latest version from GitHub.

![Download the .zip file from GitHub](misc/github_download_zip.png)

<a class='accent-button radius' href='https://github.com/mwrock/packer-templates' target='_blank'>Download the .zip file&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

#### Run the Packer template to generate a Vagrant box

Now run Packer to apply the template. This process can take several hours because it downloads the ISO image and  applies the latest Windows updates.

```bash
# ~/Development/mwrock/packer-templates
$ packer build -force -only virtualbox-iso vbox-2012r2.json
virtualbox-iso output will be in this color.

==> virtualbox-iso: Downloading or copying ISO
    virtualbox-iso: Downloading or copying: http://care.dlservice.microsoft.com/dl/download/6/2/A/62A76ABB-9990-4EFC-A4FE-C7D698DAEB96/9600.17050.WINBLUE_REFRESH.140317-1640_X64FRE_SERVER_EVAL_EN-US-IR3_SSS_X64FREE_EN-US_DV9.ISO
    virtualbox-iso: Download progress: 0%
    virtualbox-iso: Download progress: 1%
    virtualbox-iso: Download progress: 2%
[...]
    virtualbox-iso: Download progress: 100%
==> virtualbox-iso: Deleting previous output directory...
==> virtualbox-iso: Creating floppy disk...
    virtualbox-iso: Copying: answer_files/2012_r2/Autounattend.xml
    virtualbox-iso: Copying: scripts/postunattend.xml
    virtualbox-iso: Copying: scripts/boxstarter.ps1
    virtualbox-iso: Copying: scripts/package.ps1
==> virtualbox-iso: Creating virtual machine...
==> virtualbox-iso: Creating hard drive...
==> virtualbox-iso: Attaching floppy disk...
==> virtualbox-iso: Creating forwarded port mapping for SSH (host port 3165)
==> virtualbox-iso: Executing custom VBoxManage commands...
    virtualbox-iso: Executing: modifyvm packer-virtualbox-iso-1443702410 --natpf1 guest_winrm,tcp,,55985,,5985
    virtualbox-iso: Executing: modifyvm packer-virtualbox-iso-1443702410 --memory 2048
    virtualbox-iso: Executing: modifyvm packer-virtualbox-iso-1443702410 --vram 36
    virtualbox-iso: Executing: modifyvm packer-virtualbox-iso-1443702410 --cpus 2
==> virtualbox-iso: Starting the virtual machine...
==> virtualbox-iso: Waiting 10s for boot...
==> virtualbox-iso: Typing the boot command...
==> virtualbox-iso: Waiting for WinRM to become available...
==> virtualbox-iso: Connected to WinRM!
==> virtualbox-iso: Uploading VirtualBox version info (5.0.4)
==> virtualbox-iso: Gracefully halting virtual machine...
    virtualbox-iso: Removing floppy drive...
==> virtualbox-iso: Preparing to export machine...
    virtualbox-iso: Deleting forwarded port mapping for SSH (host port 3165)
==> virtualbox-iso: Exporting virtual machine...
    virtualbox-iso: Executing: export packer-virtualbox-iso-1443702410 --output output-virtualbox-iso/packer-virtualbox-iso-1443702410.ovf
==> virtualbox-iso: Unregistering and deleting virtual machine...
==> virtualbox-iso: Running post-processor: vagrant
==> virtualbox-iso (vagrant): Creating Vagrant box for 'virtualbox' provider
    virtualbox-iso (vagrant): Copying from artifact: output-virtualbox-iso/packer-virtualbox-iso-1443702410-disk1.vmdk
    virtualbox-iso (vagrant): Copying from artifact: output-virtualbox-iso/packer-virtualbox-iso-1443702410.ovf
    virtualbox-iso (vagrant): Renaming the OVF to box.ovf...
    virtualbox-iso (vagrant): Using custom Vagrantfile: vagrantfile-windows.template
    virtualbox-iso (vagrant): Compressing: Vagrantfile
    virtualbox-iso (vagrant): Compressing: box.ovf
    virtualbox-iso (vagrant): Compressing: metadata.json
    virtualbox-iso (vagrant): Compressing: packer-virtualbox-iso-1443702410-disk1.vmdk
Build 'virtualbox-iso' finished.

==> Builds finished. The artifacts of successful builds are:
--> virtualbox-iso: VM files in directory: output-virtualbox-iso
--> virtualbox-iso: 'virtualbox' provider box: windows2012r2min-virtualbox.box
```

#### Register the box with your local Vagrant catalog

After the Packer process finishes, confirm that <code class="file-path">windows2012r2min-virtualbox.box</code> exists in your <code class="file-path">packer-templates</code> directory.

```bash
# ~/Development/mwrock/packer-templates
$ ls windows2012r2min-virtualbox.box
windows2012r2min-virtualbox.box
```

Now run this command to add the box to your local Vagrant catalog.

```bash
# ~/Development/mwrock/packer-templates
$ vagrant box add windows-2012r2 windows2012r2min-virtualbox.box
==> box: Adding box 'windows-2012r2' (v0) for provider:
    box: Downloading: file:///Users/user/Development/mwrock/packer-templates/windows2012r2min-virtualbox.box
==> box: Successfully added box 'windows-2012r2' (v0) for 'virtualbox'!
```

Now confirm that the box is successfully registered.

```bash
# ~/Development/mwrock/packer-templates
$ vagrant box list
windows-2012r2       (virtualbox, 0)
```

[END_BOX]