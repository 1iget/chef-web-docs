---
title: 'Take a tour of your delivery cluster'
order: 2
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: 60 minutes
meta_tags: [{name: 'robots', content: 'noindex, nofollow'}]
---
<hr>

# NOTES

In this scenario, both changes to the build cookbook and changes to the `awesome_customers` cookbook go in the same repo.

You may not need to perform these tasks in your env, or you may have addtl requirements <= how to couch?

We provide data for each environment because [it can vary]. For instance, you might want to run your acceptance environment on a t2.micro instance with all ports open through the fireweall, but your delivered environment might use a larger instance and a more restricted set of ports.

[PRODNOTE] In scenario overview, say that artifact gets delivered to Chef server, we'll bootstrap the nodes, and run `chef-client` to pick up the changes.

<hr>


Before we set up your build pipeline, let's take a few moments to familiarize yourself with your delivery cluster. This is also a good opportunity to make sure you have everything you need and that everything's working.

Make sure you have the [information about your delivery cluster](/build-a-delivery-pipeline/rhel/get-set-up/#step5) handy.

## 1. Log on to your Chef Delivery server

* SSH login
  * delivery-ctl

* Web UI login

Remember, you can run the `rake info:delivery_creds` command from your <code class="file-path">delivery-cluster</code> directory to get the URL for the web login.

```bash
# ~/Development/delivery-cluster
$ rake info:delivery_creds
Created enterprise: chef
Admin username: admin
Admin password: Q10IIEJolZ1iZLNOb1Ro7vnHjL/tYxYJkOc=
Builder Password: fdOPq9kBbqh4RRkKnRK2wdK3IjdXC9zGZGw=
Web login: https://10.194.12.112/e/chef/
```

![](delivery/first-login.png)

* Point out various features.
* Create a user!

![](delivery/menu-create-user.png)

![](delivery/button-add-user.png)

Fill in the fields.

* For now, you can use the internal authentication protocol, but you can also set up Chef Delivery to [work with LDAP](LINK).

Under *Security Information*, create a user name and a password. The password you choose is unique to your user name, [so it doesn't have to match one you've used elsewhere in the Delivery setup.] For this tutorial, we're using the internal Git server that comes with Chef Delivery, so you'll need to a public SSH key to XXX. If you don't have an SSH key, the GitHub documentation describes [how to generate one](https://help.github.com/articles/generating-ssh-keys/). [Learn more (e.g. point to docs)]().

Under *Roles Within the Enterprise*, you can choose all roles for testing purposes. [Learn more about roles](LINK).

Create an oranization!

![](delivery/menu-create-org.png)

You can use `learn-chef` like we do in this tutorial or you can use a name that matches your organization.

![](delivery/button-add-org.png)

## 2. Log on to your Chef server

* SSH login
  * chef-server-ctl
  * verify which components are installed (?)

* Web UI login
  * Point out various features.

## 3. Logon to build node.

* And run ???

* Verify that your build node is available.

```
$ knife node status
build-node-test-1	available
```


## 4. Log on to your web application servers

Acceptance, Union, Rehearsal, and Delivered stages

* And do what? Just verify that you can SSH into them?
