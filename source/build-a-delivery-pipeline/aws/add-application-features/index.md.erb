---
title: 'Add features to the web application'
order: 5
keywords: TODO
layout: lesson
sections: [1, 2, 3, exercises]
next: {heading: Conclusion, partial: conclusion}
time_to_complete: 1 hour
survey_id: gzdFdK8SiSN29yyuyR3nkb5Hn4up6PSkw1_2BX0eko_2FDSAhVR5246l68OL7xE9W1Lv
meta_tags: [{name: "ROBOTS", content: "NOINDEX, NOFOLLOW"}]
redirect: /delivery_tutorial_offline/
---
> Perform this part from a team member's workstation.

At this point, you've validated that your pipeline works and you've configured it with your build cookbook. You're ready to use Chef Delivery for what it was intended &ndash; moving changes quickly and safely all the way from your workstation to production.

In this lesson, we'll add two new features to the Customers web application by changing the `awesome_customers` cookbook. The first change to our cookbook adds more rows of data. The second change adds an interactive control that displays where our customers are on a globe.

Before we submit our changes to our Git repo and trigger the Delivery pipeline, we'll use [Test Kitchen](http://kitchen.ci), which comes with the Chef DK, to verify our changes on a local virtual machine that resembles our production environment. ([Learn more in this tutorial](/local-development/rhel).)

After we verify that the changes are good locally, we'll submit our changes to our Git repo and trigger the Delivery pipeline. Because it's a good idea to make changes in as small a batch as possible, we'll verify, build, and run acceptance tests for each change separately. We'll deliver them together to Union.

[COMMENT] For simplicity, we'll use VirtualBox and Vagrant, which provide local environments for you to verify your work. In practice, however, you might use Test Kitchen's [EC2](https://github.com/test-kitchen/kitchen-ec2) driver to more closely match your stages' environments in AWS.
