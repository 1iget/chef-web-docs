---
title: 'Remediate the compliance failure on a local virtual machine'
order: 2
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
---
[In this part, you'll ...]

- Let's fix SSH
- We'll use Chef to do that.

  - Verify it's broken locally
    - Look at profile in webUI
    - Discuss the rule (slides 21-24)
    - Copy rule to test/integration/client/inspec/client_spec.rb (slide 44)
    - Run `kitchen verify`
    - You'll see the failure.
    - Maybe show `inspec exec` (slide 49)
  - Remediate the failure
    - Write the client recipe (slide 33)
    - `chef generate file sshd_config`
    - Write sshd_config (slides 50-51)
    - Run `kitchen converge`, `kitchen verify`
    - Success!

In this part, you'll create the `ssh` cookbook. You'll also apply the empty cookbook to a CentOS 7 instance using Test Kitchen.

Recall that a cookbook provides structure to your Chef code. A cookbook contains things such as recipes and templates.

We'll create one cookbook, named `ssh`, to describe our web application's configuration. To keep things basic, the cookbook will contain both the web application code and the Chef configuration code to manage it. In practice, you might separate the web application code from its configuration code. For example, the web team might maintain the application code in its own source control repository and the operations or another development team might maintain the configuration code &ndash; the Chef cookbook &ndash; in a separate repository. The cookbook would need to pull from the application sources repository and deploy the web content to the appropriate location.

[START_BOX]

### 1. Manually confirm the compliance failure

[Revisit scan results]

![](compliance/scan_report_issues_sshv2_centos7.png)

[SSH into your node]

[Search /etc/ssh/sshd_config for "Protocol"]

```bash
[vagrant@node-1 ~]$ cat /etc/ssh/sshd_config | grep Protocol -B 3 -A 3
#   IdentityFile ~/.ssh/id_rsa
#   IdentityFile ~/.ssh/id_dsa
#   Port 22
#   Protocol 2,1
#   Cipher 3des
#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc
#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160
```

[END_BOX]

[START_BOX]

## 1. Create the ssh cookbook

To get started, first move to the <% fp('~/learn-chef') %> directory.

```bash
# ~
$ cd ~/learn-chef
```

Ensure that you have a directory named <% fp('~/learn-chef/cookbooks') %>.

```bash
# ~/learn-chef
$ mkdir cookbooks
```

Run the following `chef generate cookbook` command to create the `ssh` cookbook.

```bash
# ~/learn-chef
$ chef generate cookbook cookbooks/ssh
Compiling Cookbooks...
Recipe: code_generator::cookbook
  * directory[/Users/user/learn-chef/cookbooks/ssh] action create
    - create new directory /Users/user/learn-chef/cookbooks/ssh
[...]
  * cookbook_file[/Users/user/learn-chef/cookbooks/ssh/.gitignore] action create
    - create new file /Users/user/learn-chef/cookbooks/ssh/.gitignore
    - update content in file /Users/user/learn-chef/cookbooks/ssh/.gitignore from none to dd37b2
    (diff output suppressed by config)
```

  - Create the ssh cookbook
  - `chef generate recipe cookbooks/ssh client`
  - `kitchen converge` empty cookbook

[END_BOX]

[START_BOX]

```bash
# ~/learn-chef
$ chef gem install kitchen-inspec
Fetching: kitchen-inspec-0.12.5.gem (100%)
Successfully installed kitchen-inspec-0.12.5
1 gem installed
```

[END_BOX]

[START_BOX]

## 2. Apply the ssh cookbook on a Test Kitchen instance

Now let's verify that the empty configuration runs successfully on a CentOS 7 instance. Replace the contents of your copy of <% fp('~/learn-chef/cookbooks/ssh/.kitchen.yml') %> with this.

```yaml
# ~/learn-chef/cookbooks/ssh/.kitchen.yml
---
driver:
  name: vagrant

provisioner:
  name: chef_zero

verifier:
  name: inspec

platforms:
  - name: centos-7.2

suites:
  - name: default
    run_list:
      - recipe[ssh::default]
    attributes:
```

This configuration uses the Vagrant driver and brings up a CentOS 7.2 instanceMB of memory. It resembles the one you created for the `motd_rhel` cookbook in the previous tutorial.

Next, from your terminal, move to the <% fp('~/learn-chef/cookbooks/ssh') %> directory.

```bash
# ~/learn-chef
$ cd ~/learn-chef/cookbooks/ssh
```

Now run `kitchen list`. You'll see that the instance was not yet created.

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen list
Instance           Driver   Provisioner  Verifier  Transport  Last Action
default-centos-72  Vagrant  ChefZero     Busser    Ssh        <Not Created>
```

Now run `kitchen converge`. This command downloads the base CentOS 7.2 box if needed, brings up an instance, installs `chef-client`, and applies the cookbook.

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen converge
-----> Starting Kitchen (v1.7.2)
-----> Creating <default-centos-72>...
       Bringing machine 'default' up with 'virtualbox' provider...
       ==> default: Importing base box 'opscode-centos-7.2'...
[...]
       resolving cookbooks for run list: ["ssh::default"]
       Synchronizing Cookbooks:
         - ssh (0.1.0)
       Installing Cookbook Gems:
       Compiling Cookbooks...
       Converging 0 resources

       Running handlers:
       Running handlers complete
       Chef Client finished, 0/0 resources updated in 01 seconds
       Finished converging <default-centos-72> (0m22.51s).
-----> Kitchen is finished. (2m21.09s)
```

As expected, 0 resources were applied because the cookbook is empty. But it's a great first step to verifying that the instance comes up and `chef-client` runs successfully.

Finally, verify that you can successfully connect to your instance over SSH. Run `kitchen login` to connect to your instance and then log out.

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen login
Last login: Mon Feb  1 20:18:41 2016 from 10.0.2.2
[vagrant@default-centos-72 ~]$ logout
Connection to 127.0.0.1 closed.
```

[WINDOWS] If you're working from a Windows workstation and receive an error, it may be because you don't have an SSH client set up. The easiest way to set up an SSH client is to [install Git](/manage-a-node/rhel/get-set-up#step4).

[END_BOX]

[START_BOX]

## N. Verify it's broken locally

Look at profile in webUI

Discuss the rule (slides 21-24)

Create the cookbooks/ssh/test/integration/default/inspec directory

Create file cookbooks/ssh/test/integration/default/default_spec.rb and add this (slide 44)

```ruby
# ~/learn-chef/cookbooks/ssh/test/integration/default/default_spec.rb
control "xccdf_org.cisecurity.benchmarks_rule_6.2.1_Set_SSH_Protocol_to_2" do
  title "Set SSH Protocol to 2"
  desc  "SSH supports two different and incompatible protocols: SSH1 and SSH2. SSH1 was the original protocol and was subject to security issues. SSH2 is more advanced and secure."
  impact 1.0
  describe file("/etc/ssh/sshd_config") do
    its(:content) { should match /^\s*Protocol\s+(\S+)\s*(?:#.*)?$/ }
  end
  file("/etc/ssh/sshd_config").content.to_s.scan(/^\s*Protocol\s+(\S+)\s*(?:#.*)?$/).flatten.each do |entry|
    describe entry do
    it { should eq "2" }
  end
  end
end
```

NEEDED?

```bash
# ~/learn-chef/cookbooks/ssh
$ cd ~/learn-chef/cookbooks/ssh
```

Run `kitchen verify`

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen verify
-----> Starting Kitchen (v1.7.2)
-----> Verifying <default-centos-72>...
       Detected alternative framework tests for `inspec`
       Detected alternative framework tests for `serverspec`
       Search `/Users/user/learn-chef/cookbooks/ssh/test/integration/default/inspec` for tests
F

Failures:

  1) File /etc/ssh/sshd_config content should match /^\s*Protocol\s+(\S+)\s*(?:#.*)?$/

[...]

Finished in 0.02289 seconds (files took 0.88217 seconds to load)
1 example, 1 failure

Failed examples:

rspec  # File /etc/ssh/sshd_config content should match /^\s*Protocol\s+(\S+)\s*(?:#.*)?$/

>>>>>> Verify failed on instance <default-centos-72>.
>>>>>> Please see .kitchen/logs/default-centos-72.log for more details
>>>>>> ------Exception-------
>>>>>> Class: Kitchen::ActionFailed
>>>>>> Message: Inspec Runner returns 1
>>>>>> ----------------------
```

For brevity, the full details of the failure are omitted.

You'll see the failure.

```bash
# ~/learn-chef/cookbooks/ssh
Failed examples:

rspec  # File /etc/ssh/sshd_config content should match /^\s*Protocol\s+(\S+)\s*(?:#.*)?$/
```

[END_BOX]

[START_BOX]

### N. Remediate the failure

Write sshd_config (slides 50-51)

```bash
# ~/learn-chef/cookbooks/ssh
cd ~/learn-chef
```

```bash
$ chef generate file sshd_config
```

Write sshd_config.

```ruby
# ~/learn-chef/cookbooks/ssh/files/default/sshd_config
Protocol 2
```

Write the default recipe (slide 33)

```ruby
# ~/learn-chef/cookbooks/ssh/recipes/default.rb
cookbook_file '/etc/ssh/sshd_config' do
  source 'sshd_config'
  owner 'root'
  group 'root'
  mode '0644'
end
```

Run kitchen converge to apply the configuration.

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen converge
-----> Starting Kitchen (v1.7.2)
-----> Converging <default-centos-72>...
       Preparing files for transfer
       Preparing dna.json
       Resolving cookbook dependencies with Berkshelf 4.3.2...
       Removing non-cookbook files before transfer
       Preparing validation.pem
       Preparing client.rb
-----> Chef Omnibus installation detected (install only if missing)
       Transferring files to <default-centos-72>
       Starting Chef Client, version 12.9.38
       resolving cookbooks for run list: ["ssh::default"]
       Synchronizing Cookbooks:
         - ssh (0.1.0)
       Installing Cookbook Gems:
       Compiling Cookbooks...
       Converging 1 resources
       Recipe: ssh::default
         * cookbook_file[/etc/ssh/sshd_config] action create
           - update content in file /etc/ssh/sshd_config from 22def2 to 09447b
           --- /etc/ssh/sshd_config	2015-11-20 12:01:34.000000000 +0000
           +++ /etc/ssh/.chef-sshd_config20160414-27979-r7hvjh	2016-04-14 19:41:56.487172486 +0000
           @@ -1,67 +1,2 @@
           -#	$OpenBSD: sshd_config,v 1.28 2013/09/16 11:35:43 sthen Exp $
           -
[...]
           -	SendEnv LC_IDENTIFICATION LC_ALL LANGUAGE
           -	SendEnv XMODIFIERS
           +Protocol 2
           - restore selinux security context

       Running handlers:
       Running handlers complete
       Chef Client finished, 1/1 resources updated in 01 seconds
       Finished converging <default-centos-72> (0m3.21s).
-----> Kitchen is finished. (0m5.50s)
```

You'll see from the output that the contents of /etc/ssh/sshd_config were changed.

Now run `kitchen verify` to ...

```bash
# ~/learn-chef/cookbooks/ssh
$ kitchen verify
-----> Starting Kitchen (v1.7.2)
-----> Setting up <default-centos-72>...
       Finished setting up <default-centos-72> (0m0.00s).
-----> Verifying <default-centos-72>...
       Detected alternative framework tests for `inspec`
       Detected alternative framework tests for `serverspec`
       Search `/Users/user/learn-chef/cookbooks/ssh/test/integration/default/inspec` for tests
..

Finished in 0.00259 seconds (files took 1.08 seconds to load)
2 examples, 0 failures

       Finished verifying <default-centos-72> (0m0.81s).
-----> Kitchen is finished. (0m2.92s)
zlib(finalizer): the stream was freed prematurely.
```

Success!

[END_BOX]
