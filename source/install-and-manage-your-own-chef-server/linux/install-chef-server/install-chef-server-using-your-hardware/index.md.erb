---
title: 'Install and configure Chef server using your hardware or cloud provider'
order: 3
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: 60 minutes
show_disqus: false
---
In this part, you'll perform these steps.

1. [Prepare a system to run Chef server](#step1)
1. [Install Chef server](#step2)
1. [Write the Chef server configuration file](#step3) to ensure it includes your server's public hostname
1. [Apply the configuration and start the server](#step4)
1. [Install the management console and reporting features](#step5)
1. [Create an administrator account and an organization](#step6)
1. [Download the Starter Kit](#step7) to give your workstation the files it needs to communicate with Chef server
1. [Download the Chef server's SSL certificate](#step8) to verify its authenticity
1. [Create a test connection](#step9) to verify that you can connect to Chef server from your workstation

[COMMENT] We use `sudo` to highlight where root access is required. You can omit `sudo` from the commands if you're running as the root user.

[COMMENT] This section explains the manual steps to help you understand exactly what software you need to install and how to install it. Alternatively, you can also [run the Chef server cookbook](https://supermarket.chef.io/cookbooks/chef-server) to automate the process.

[START_BOX]

## 1. Prepare a system to run Chef server

First, bring up a system to run Chef server. Chef server runs on Red Hat Enterprise Linux/CentOS and Ubuntu. See the [supported platforms](https://docs.chef.io/install_server_pre.html#supported-platforms) to learn about which operating system versions Chef server supports.

[COMMENT] We strongly recommend that you run Chef server on its own system, and not your primary system. For learning purposes, many users use a cloud instance or local virtual machine.

Then review the [hardware and software system requirements](https://docs.chef.io/install_server_pre.html#hardware-software). Each requirement, including the amount of memory you need and which ports you need to open, is important. Pay special attention to any requirements that are specific to Red Hat Enterprise Linux/CentOS and Ubuntu.

The system requirements provide complete details on how to prepare your system for Chef server, but these checklists list the minimum amount required to get a Chef server up and running.

<% accordion('chef-server-el-prep', 'Checklist for Red Hat Enterprise Linux') do %>

<%= partial 'rhel_prep' %>

<% end %>

<% accordion('chef-server-ubuntu-prep', 'Checklist for Ubuntu') do %>

<%= partial 'ubuntu_prep' %>

<% end %>

[END_BOX]

[START_BOX]

## 2. Install Chef server

Run this command to install Chef server.

```bash
$ curl -L https://omnitruck.chef.io/install.sh | sudo bash -s -- -P chef-server
```

Alternatively, you can [download and install the package manually](https://downloads.chef.io/chef-server/).

### Install a text editor on your Chef server

You'll need to edit a few configuration files, so ensure you have a text editor that you're comfortable working with installed on your Chef server. If you don't have a preferred editor, we recommend `vim`. This [interactive Vim tutorial](http://www.openvim.com/tutorial.html) can help you get oriented to the commands you'll need to create, edit, and save a file.

Next, you'll modify the Chef server configuration file before you configure and start the server.

[END_BOX]

[START_BOX]

## 3. Write the Chef server configuration file

After you install the Chef server package, you must configure the Chef server. The configuration process runs `chef-client` in local mode to apply the changes to the system. Having a separate configuration step gives you the chance to make any additional changes before you start the server.

The [Chef server configuration file](https://docs.chef.io/config_rb_server.html), <code class="file-path">/etc/opscode/chef-server.rb</code>, contains additional Chef server settings. If you leave this file empty, Chef server uses the default behavior, but let's add a few options to ensure that Chef server is configured with a hostname that's accessible to the rest of your network.

[COMMENT] This step is especially important in cloud environments such as Amazon EC2, where each instance is assigned a hostname on the private network and the firewall routes traffic between the private network and the public Internet. This step ensures that the Chef server uses the public hostname that's accessible from outside the firewall.

First, get the fully-qualified domain name (FQDN) for your Chef server that's accessible from the rest of your network. Then write out <code class="file-path">/etc/opscode/chef-server.rb</code>, like this, replacing <code class="placeholder">CHEF\_SERVER\_FQDN</code> with your Chef server's FQDN.

```ruby
# /etc/opscode/chef-server.rb
server_name = "CHEF_SERVER_FQDN"
api_fqdn server_name
bookshelf['vip'] = server_name
nginx['url'] = "https://#{server_name}"
nginx['server_name'] = server_name
nginx['ssl_certificate'] = "/var/opt/opscode/nginx/ca/#{server_name}.crt"
nginx['ssl_certificate_key'] = "/var/opt/opscode/nginx/ca/#{server_name}.key"
```

These configuration options ensure that Chef server uses the public hostname in its configuration.

[END_BOX]

[START_BOX]

## 4. Apply the configuration and start the server

From your Chef server, run the following command to apply the configuration settings and start the server.

```bash
$ sudo chef-server-ctl reconfigure
```

[END_BOX]

[START_BOX]

## 5. Install the management console and reporting features

The [Chef management console](https://docs.chef.io/manage.html) and [Chef reporting](https://docs.chef.io/install_reporting.html) are examples of additional features that you can add to your Chef server.

The management console is the web-based interface into Chef server. You may not need it for large node deployments, but it's a great way to get started with Chef server because it enables you to interact with nodes and understand how Chef server works. Chef reporting tracks what happens when `chef-client` runs on your nodes. Chef server uses this information to build reports.

Run these commands on your Chef server to install the management console.

```bash
$ sudo chef-server-ctl install chef-manage
$ sudo chef-server-ctl reconfigure
$ sudo chef-manage-ctl reconfigure
```

Then run these commands to install the reporting feature.

```bash
$ sudo chef-server-ctl install opscode-reporting
$ sudo chef-server-ctl reconfigure
$ sudo opscode-reporting-ctl reconfigure
```

[END_BOX]

[START_BOX]

## 6. Create the administrator account and an organization

Now you need to create an administrator account and an organization, similar to what you did when you signed up for hosted Chef.

The Chef server uses role-based access control (RBAC) to restrict access to objects such as users, nodes, data bags, cookbooks, and so on. An <em>organization</em> groups related objects to ensure authorized access to those objects.

You'll need some information that you'll use in later steps, so jot down the following details about yourself and your organization. You'll replace these values in the commands that follow.

| Item                | Description |    Notes and examples |
|----------------------------------:|------------|----------|
| <code class="placeholder">ADMIN\_USER\_NAME</code>  | user name for the administrator account | `jsmith`, `admin` |
| <code class="placeholder">ADMIN\_PASSWORD</code>   | password for the administrator account | Note your password somewhere safe! |
| <code class="placeholder">ADMIN\_FIRST\_NAME</code> | administrator's first name | `Joe` |
| <code class="placeholder">ADMIN\_LAST\_NAME</code>  | administrator's last name | `Smith` |
| <code class="placeholder">ADMIN\_EMAIL</code>      | administrator's email address | `joe.smith@example.com` |
| <code class="placeholder">ORG\_FULL\_NAME</code> | your organization's full name | `Fourth Coffee, Inc.` |
| <code class="placeholder">ORG\_SHORT\_NAME</code> | your organization's abbreviated name | `4thcoffee` |

### Create the admin account

From your Chef server, run the following command to create the administrator account. Replace <code class="placeholder">ADMIN\_USER\_NAME</code>, <code class="placeholder">ADMIN\_FIRST\_NAME</code>, <code class="placeholder">ADMIN\_LAST\_NAME</code>, <code class="placeholder">ADMIN\_EMAIL</code>, and <code class="placeholder">ADMIN\_PASSWORD</code> with your values.

```bash
$ sudo chef-server-ctl user-create ADMIN_USER_NAME ADMIN_FIRST_NAME ADMIN_LAST_NAME ADMIN_EMAIL ADMIN_PASSWORD --filename ADMIN_USER_NAME.pem
```

For example:

```bash
$ sudo chef-server-ctl user-create jsmith Joe Smith joe.smith@example.com p4ssw0rd --filename jsmith.pem
```

The command generates an RSA private key (<code class="file-path">.pem</code> file) that enables you enables you to run `knife` commands against the Chef server as an authenticated user. You'll copy this file to your workstation in the next step. For now, verify that this private key was written to the current directory on your Chef server.

```bash
$ ls *.pem
jsmith.pem
```

[COMMENT] You always create the initial user account directly from the Chef server on the command line. Later, you can add additional users [from the command line](https://docs.chef.io/server_orgs.html) or [through the management console](https://docs.chef.io/manage.html#admin).

### Create the organization

From your Chef server, run the following command to create the organization. Replace <code class="placeholder">ORG\_SHORT\_NAME</code>, <code class="placeholder">ORG\_LONG\_NAME</code>, and <code class="placeholder">ADMIN\_USER\_NAME</code> with your values.

```bash
$ sudo chef-server-ctl org-create ORG_SHORT_NAME "ORG_LONG_NAME" --association_user ADMIN_USER_NAME
```

For example:

```bash
$ sudo chef-server-ctl org-create 4thcoffee "Fourth Coffee, Inc." --association_user jsmith
```

[COMMENT] You can ignore the RSA private key that `chef-server-ctl org-create` writes to the console. In prior versions of `chef-client`, you would use this private key during the bootstrap process to enable a node to authenticate itself for the first time with the Chef server. Newer versions of `chef-client` use your client key to perform the initial authentication. [Learn more](https://www.chef.io/blog/2015/04/16/validatorless-bootstraps/).

[END_BOX]

[START_BOX]

## 7. Download the Starter Kit

> In this step, switch over to the workstation from where you'll administer your Chef server.

Now you need to generate the configuration file, <code class="file-path">knife.rb</code>, that enables `knife` to authenticate commands with the Chef server. You also need to copy the RSA key (the <code class="file-path">.pem</code> file) that you created in the previous step to enable `knife` to authenticate calls to the Chef server. This authentication process ensures that the Chef server responds only to requests made by trusted users.

The easiest way to set up your `knife` configuration file and get a copy of your <code class="file-path">.pem</code> file is to download the Starter Kit from your Chef server.

From your workstation,

1. From a web browser, navigate to your Chef server's hostname or IP address over HTTPS, for example, **https://52.34.83.219**.
1. Sign in using the username and password you provided in the previous step.
1. From the **Administration** tab, select your organization.
1. Select **Starter Kit** from the menu on the left.
1. Click the **Download Starter Kit** button.
1. Click **Proceed**. Save the file <code class="file-path">chef-starter.zip</code> to your computer.
1. Extract <code class="file-path">chef-starter.zip</code> to your <code class="file-path">~/learn-chef</code> directory.

You can choose a directory other than <code class="file-path">~/learn-chef</code>. We use this directory in the tutorials to keep all learning materials in one place.

Now verify that the <code class="file-path">~/learn-chef/chef-repo/.chef</code> directory on your workstation contains the knife configuration file and your RSA key.

```bash
# ~/learn-chef
$ ls ~/learn-chef/chef-repo/.chef
jsmith.pem                knife.rb                 4thcoffee-validator.pem
```

[COMMENT] Because newer versions of `chef-client` use your client key to perform initial authentication during the bootstrap process, you can delete the validation key, for example, <code class="file-path">4thcoffee-validator.pem</code>, from your computer. You only need the `knife` configuration file and your user RSA key.

[TIP] As the Chef server administrator, downloading the Starter Kit is a good way to set up your `knife` configuration file and RSA key. As you [add users to your Chef server](https://docs.chef.io/server_users.html#user-create), we recommend that you have your users [manually download these files](/manage-a-node/rhel/set-up-your-chef-server#step2) from the Chef server web interface instead of downloading the Starter Kit. This is because downloading the Starter Kit resets the keys for all users.

[END_BOX]

[START_BOX]

## 8. Download the Chef server's SSL certificate

Nodes communicate with the Chef server through a web service that's hosted on your Chef server. Communication occurs over an SSL connection (port 443), and Chef server uses a [X.509 digital certificate](https://en.wikipedia.org/wiki/X.509) to verify its authenticity.

During the bootstrap process, `knife` copies the certificate from your workstation to the node. In order to do that, you must first retrieve a copy of the certificate on your workstation.

From your <code class="file-path">~/learn-chef/chef-repo</code> directory, run the `knife ssl fetch` command to retrieve a copy of the certificate.

```bash
# ~/learn-chef/chef-repo
$ knife ssl fetch
WARNING: Certificates from ec2-52-25-239-111.us-west-2.compute.amazonaws.com will be fetched and placed in your trusted_cert
directory (/home/user/learn-chef/.chef/trusted_certs).

Knife has no means to verify these are the correct certificates. You should
verify the authenticity of these certificates after downloading.

Adding certificate for ec2-52-25-239-111.us-west-2.compute.amazonaws.com in /home/user/learn-chef/.chef/trusted_certs/ec2-52-25-239-111_us-west-2_compute_amazonaws_com.crt
```

[COMMENT] If the command fails, verify that you have port 443 (HTTPS) open to incoming traffic on the Chef server.

Now run `knife ssl check` to verify that the certificate was properly retrieved and can be used to authenticate calls to the Chef server.

```bash
# ~/learn-chef/chef-repo
$ knife ssl check
Connecting to host ec2-52-27-41-27.us-west-2.compute.amazonaws.com:443
Successfully verified certificates from `ec2-52-27-41-27.us-west-2.compute.amazonaws.com'
```

[COMMENT] By default, Chef server uses a self-signed certificate, which is fine for getting started or for creating test servers. In production, we recommend that you use a [certificate signed by a root Certificate Authority (CA)](https://osxdominion.wordpress.com/2015/02/25/configuring-chef-server-12-to-use-trusted-ssl-certs/).

[END_BOX]

[START_BOX]

## 9. Test the connection to Chef server

From your workstation, run `knife client list` to verify that you can authenticate commands to the Chef server.

```bash
# ~/learn-chef/chef-repo
$ knife client list
4thcoffee-validator
```

<% accordion('chef-server-connect-help', 'Troubleshooting') do %>

<p>If you get an error, verify that:</p>

<li>you can access the public hostname of your Chef server over an HTTPS connection from a web browser, for example, <b>https://ec2-52-25-201-190.us-west-2.compute.amazonaws.com:443</b>. If you can't connect, ensure that port 443 is open to incoming traffic on your Chef server.</li>
<li>you are running <code>knife</code> from the <code class="file-path">~/learn-chef/chef-repo</code> directory.</li>
<li>your <code class="file-path">~/learn-chef/chef-repo/.chef</code> directory contains your RSA key (a <code class="file-path">.pem</code> file) and a <code class="file-path">knife.rb</code> file.</li>
<li>your RSA key is user-readable only.</li>
<li>your Chef server meets the <a href="https://docs.chef.io/install_server_pre.html">prerequisites</a>.</li>

<% end %>

[END_BOX]
