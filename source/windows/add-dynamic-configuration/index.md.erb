---
title: 'Add dynamic configuration'
order: 6
layout: tutorial
description: TODO
keywords: TODO
---
[TIMETOCOMPLETE] 15

# Add dynamic configuration

[Last time](/windows/bootstrap-your-node) you learned how to bootstrap your web server node. During the bootstrap process, your node installed the Chef tools, downloaded the latest cookbooks, and executed the run-list.

Chef provides information about your node that you can access from your cookbooks. Let's update our home page to display some info about the server. You'll practice updating your cookbook, uploading it to the Chef server, and seeing the changes appear on your node.

You already learned [how to use the template resource](/windows/make-your-recipe-more-manageable/) to reference the HTML file for your home page, so you're all set to add placeholders to your HTML file that are filled in as the recipe runs. This is an example of dynamic configuration.

## <i class="fa fa-windows" style="margin-right:3px;"></i> Get a Windows Server machine

This lesson builds on the [previous one](/windows/bootstrap-your-node), so you'll need a bootstrapped node that's configured with our web server. If you no longer have access to that environment, take a few minutes to spin up a new one and run through the previous lesson again.

If you need a fresh environment, take one on us. Just click the button below.

<%= partial 'layouts/provisioner', locals: { title: 'Windows Server', type: 'windows-fundamentals' } %>

<sidebar style="line-height:1.7; font-size:1.0em; margin-top:30px; max-width:510px;">
<span style="line-height:2.0;"><i class="fa fa-search"></i>&nbsp;**As you read, keep in mind that:**</span><br>
  <i class="fa fa-check"></i>&nbsp; a _template_ fills in placeholders when the recipe runs.<br>
  <i class="fa fa-check"></i>&nbsp; a template is a resource type, just like a file or package.<br>
  <i class="fa fa-check"></i>&nbsp; Chef provides many details about your server, called _attributes_.
</sidebar>

## <i class="fa fa-tasks" style="margin-right:3px;"></i> Here's what you'll do

  1. [Add template code to your HTML](#1addtemplatecodetoyourhtml)
  1. [Upload your cookbook to the Chef server](#2uploadyourcookbooktothechefserver)
  1. [Run the cookbook on your node](#3runthecookbookonyournode)
  1. [Confirm the result](#4confirmtheresult)
  1. [Experiment with more node attributes](#5experimentwithmorenodeattributes)

## 1. Add template code to your HTML

On the local workstation copy of your <code class="file-path">learn\_chef\_iis</code> cookbook, change <code class="file-path">index.html.erb</code> to look like this.

```html
<!-- ~/chef-repo/cookbooks/learn_chef_iis/templates/default/index.html.erb -->
<html>
  <body>
    <h1>hello from <%%= node['fqdn'] %></h1>
  </body>
</html>
```

## 2. Upload your cookbook to the Chef server

Run `knife` to upload the updated cookbook to the Chef server.

```bash
# ~/chef-repo
$ knife cookbook upload learn_chef_iis
Uploading learn_chef_iis [0.1.0]
Uploaded 1 cookbook.
```

## 3. Run the cookbook on your node

<div id="knife-intro" class="indent" data-type="windows-fundamentals">
Run <code>knife winrm</code> to run your cookbook on your node. If you're working with your own server and not the one that we provide, replace <code>{{address}}</code>, <code>{{user}}</code>, and <code>{{password}}</code> with your values.
</div>
<p/>
<div id="knife-command" class="window">
            <nav class="control-window">
              <div class="close">&times;</div>
              <div class="minimize"></div>
              <div class="deactivate"></div>
            </nav>
            <h1 class="titleInside">Terminal: ~/chef-repo</h1>
            <div class="container" data-type="windows-fundamentals"><div class="terminal"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">$</span></pre></td><td class="code"><pre><code><span class="line command">knife winrm {{address}} chef-client --manual-list --winrm-user {{user}} --winrm-password '{{password}}'</span></code></pre></td></tr></tbody></table></div></div>
          </div>

[COMMENT] In production, you'll likely configure `chef-client` to run automatically on a regular basis or in response to some event or trigger, such as when code is checked in to your repository. But for now, we'll update our server configuration by running `chef-client` manually.

## 4. Confirm the result

Open a web browser from your workstation and navigate to your web server.

![The home page with FQDN](windows/webserver-template.png)

Chef discovers and adds the FQDN for you automatically!

## 5. Experiment with more node attributes

If you want to and have time, [check out](<%= chef_docs_url %>/chef_overview_attributes.html#automatic-ohai) what other node attributes you can use and experiment with them on your home page.

Here's one example that displays the server's host name, platform, and number of CPUs in addition to its FQDN. Try it if you'd like, then follow the steps in this lesson to upload your cookbook to the Chef server and run `chef-client` on your node.

```html
<!-- ~/chef-repo/cookbooks/learn_chef_iis/templates/default/index.html.erb -->
<html>
  <body>
    <h1>hello from <%%= node['fqdn'] %></h1>

    <pre>
      <%%= node['hostname'] %>
      <%%= node['platform'] %> - <%%= node['platform_version'] %>
      <%%= node['cpu']['total'] %> CPUs
    </pre>
  </body>
</html>
```

You'll see something like this.

![The home page with FQDN](windows/webserver-template-more.png)

## <i class="fa fa-question" style="margin-right:3px;"></i> What did we see here?

Dynamic configuration means that you can write a single, general recipe that’s customized for a particular node as the recipe runs. That means you don’t have to write a custom version of your recipe for every node. [Templates][template] enable you to do this.

You also ran `knife winrm` to update your node. [knife winrm][knifewinrm] invokes the command you specify over a WinRM connection on a node &ndash; in our case `chef-client`. You didn't have to specify the run-list because you already set that up when you bootstrapped the node.

[COMMENT] Alternatively, you could connect directly into your server and run `chef-client` manually. In this lesson, we use `knife winrm` because it enables us to do all of our work from our local workstation.

### Templates work through node objects

To understand how templates work, you should first understand a bit more about nodes. Recall that a _node_ represents a server and is typically a virtual machine or physical server &ndash; basically any compute resource in your infrastructure that's managed by Chef. When you bootstrapped your node, the Chef server created what's called a _node object_ for you. This node object contains a number of attributes that describe the node, and these attributes are saved on the Chef server.

When a recipe runs, a `node` object is loaded into the program. Chef loads the node's attributes from the Chef server into memory. For our home page, we want to display the server's fully qualified domain name (FQDN). To do so, we access the `fqdn` attribute of the `node` object.

## <i class="fa fa-road" style="margin-right:3px;"></i> What's next

That's all we have for now. Please check back soon for more!

In the meantime, here are some things you can try.

* If you bootstrapped using one of our test servers, try configuring a spare server of your own.
* Explore the [<%= t(:management_console) %>](https://manage.opscode.com/). See what info's available for your nodes and what else you can do.
* Try writing a cookbook to install and configure a piece of software you use. Check out the [Chef Supermarket](http://supermarket.getchef.com/) to see if there's already an existing cookbook for that, and compare what the differences are.
* After you get the hang of Chef's basic commands, check out the [documentation](<%= chef_docs_url %>) to go deeper.
* If you run into trouble, <a href="mailto:learnchef@getchef.com?subject=Feedback on Learn Chef">contact us</a> or ask for help at [#chef](irc://irc.freenode.net/chef) on IRC.

[template]: <%= chef_docs_url %>/essentials_cookbook_templates.html
[chef]: <%= chef_docs_url %>/ctl_chef.html
[chef-client]: <%= chef_docs_url %>/ctl_chef_client.html
[knifewinrm]: <%= chef_docs_url %>/plugin_knife_windows.html
