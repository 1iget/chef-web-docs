---
title: 'Install Chef Automate on AWS'
order: 1
keywords: TODO
layout: lesson
sections: []
next: {heading: Next steps, partial: conclusion}
time_to_complete: 60 minutes
show_disqus: false
meta_tags: [{name: "ROBOTS", content: "NOINDEX, NOFOLLOW"}]
---
In this part, you install Chef Automate on AWS using [CloudFormation](https://aws.amazon.com/cloudformation/).

The automation you run brings up a fully-functional Chef Automate installation, which includes a Chef server, a Chef Automate server, and build nodes that run jobs scheduled by Chef Automate. The automation also sets up an end-user's Windows workstation as well as infrastructure that can run build artifacts.

[COMMENT] The automation we provide for AWS gives you a preconfigured setup. We recommend that you use this approach to get a feel for how Chef Automate works. Later, you can [install Chef Automate](https://docs.chef.io/install_chef_automate.html) in another cloud environment or on your own hardware.

Here are the steps to perform:

1. [Review the installation](#step1)
1. [Gather prerequisites](#step2)
1. [Run the CloudFormation template](#step3)
1. [Copy your license key to the Chef Automate server](#step4)
1. [Connect to the Windows workstation](#step5)
1. [Start a Chef Development Kit PowerShell session](#step6)

[START_BOX]

## 1. Review the installation

The systems that make up Chef Automate reflect the types of software you want to deliver. For example, if you use Chef  to manage your infrastructure, your system may include a private [Chef Supermarket](https://docs.chef.io/supermarket.html) server that exists behind your firewall.

The automation you run for this tutorial includes the minimum number of systems that are typical for many users. Here's a diagram:

<img src="/assets/images/automate/automate-scenario-architecture.svg" style="width: 100%; box-shadow: none;" alt="An example Chef Automate installation" />

The diagram shows these components:

**Chef Automate** &ndash; These are the systems that make up a Chef Automate installation.

At a minimum, a Chef Automate cluster includes Chef Automate and one build node.

Your setup includes Chef Automate and Chef server, along with two build nodes. When you use Chef Automate to manage infrastructure, the Chef server holds your Chef cookbooks, which are published as part of the pipeline. A Chef Automate pipeline is made up of multiple stages. Each stage includes multiple phases that perform different functions such as running tests. Having multiple build nodes enables phases to run in parallel.

Your setup also comes with the [Chef compliance scanner](/tutorials/compliance-assess), which helps you assess your infrastructure's adherence to compliance requirements.

**Acceptance, Union, Rehearsal, and Delivered environments** &ndash; Chef Automate deploys build artifacts, or the pipeline's final output, to these environments. The output of your pipeline informs how you set up your environments.

For example, you might deploy a SQL Server database to a Windows Server environment. Or you might deploy web content and other media to an Amazon S3 bucket. In the following tutorials, you'll publish a cookbook that configures a basic web application on Ubuntu. Therefore, the Ubuntu runtime environment exists for each of these stages because the artifacts produced in the Build stage need to be deployed to each of them.

Each environment is named for the stage in which it is used. For example, the union environment is used in the Union stage of the pipeline. These environments typically resemble your production environment, and can often be part of your production environment. Delivered is the final environment. What "delivered" means for your system is up to you. It could mean deploying the change so that it is live and receiving production traffic, or it might mean deploying the change to a staging or preproduction environment that is later promoted manually or through some other mechanism.

The automation provides one Ubuntu 14.04 instance for each of the Acceptance, Union, Rehearsal, and Delivered environments. In the following tutorial, you'll bootstrap these environments and configure them each to run the basic web application cookbook.

**Team member's workstation** &ndash; Workstations are typically either a laptop or desktop computer. A workstation can run Windows, Mac OS X, or Linux. From the workstation, users access Chef Automate using either the command line or the web interface. Other common tasks include creating projects, writing build cookbooks, submitting new features to the pipeline, and reviewing and approving others' changes.

The automation sets up a Windows workstation because Windows provides an easy way to connect to its graphical desktop remotely.

**VPC** &ndash; Although a [virtual private cloud](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html) (VPC) is not required to use Chef Automate on AWS, the automation for this tutorial creates one to give you an environment that's isolated from the rest of your AWS account. When you tear down your Chef Automate installation, only the resources that belong to this isolated environment are destroyed.

An added benefit to using a VPC is that it assigns a static private IP address to each server. These IP addresses remain fixed so that you can temporarily stop and restart your AWS instances as you evaluate Chef Automate. In a complete setup, it's common to keep the instances running so that users can access Chef Automate at any time.

### Instance types, network, and ports

The automation uses the recommended [instance type](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) for each server.

The automation also configures the appropriate [security groups](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html) for the Chef Automate systems and the environments. [Learn more about the recommended port settings.](https://docs.chef.io/install_chef_automate.html#node-hostnames-and-network-access)

[END_BOX]

[START_BOX]

## 2. Gather prerequisites

To run the automated installation, you need:

1. an [AWS account](https://aws.amazon.com/free/).
1. an [IAM user role](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#create-an-iam-user) and [SSH key pair](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#create-a-key-pair) for one of these regions.
  * us-east-1 (N. Virginia)
  * us-west-2 (Oregon)
  * eu-west-1 (Ireland)
  * ap-southeast-1 (Singapore)
1. a Chef Automate license key.

Place your SSH private key in the <% fp '.ssh' %> directory under your home directory. Also ensure that your IAM user role [includes the necessary permissions](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html) to work with CloudFormation stacks.

If you don't have a license key, click the button below, fill out the short form, and check your email for a link to a temporary license key for this tutorial.

[START_MODAL get-a-license-key Get a license key]

<script src="//app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_1887">
  <h3>Get a Chef Automate License Key</h3>
</form>
<script>
MktoForms2.loadForm("//app-sj05.marketo.com", "255-VFB-268", 1887, function(form) {
  form.onSuccess(function(values, followUpUrl) {
    $('a.close-reveal-modal').trigger('click'); // close modal.
    return false; // don't navigate to follow-up URL.
  });
});
</script>

[END_MODAL]

After you click the link in the email, the license file named <% fp 'automate.license' %> will be downloaded to your web browserâ€™s downloads directory.

To connect to the Windows workstation, you'll need a Remote Desktop (RDP) client. Here's how to set one up.

<% accordion('install-rdp-windows', 'Windows users') do %>

<% markdown do %>

Windows comes with an RDP client. Run `mstsc` from the command prompt to bring up Remote Desktop.

<% end %>

<% end %>

<% accordion('install-rdp-macosx', 'Mac OS X users') do %>

<% markdown do %>

[Download Microsoft Remote Desktop](https://itunes.apple.com/us/app/microsoft-remote-desktop/id715768417?mt=12) from the Apple App Store. The RDP client from Microsoft's web site might not work.

<% end %>

<% end %>

<% accordion('install-rdp-linux', 'Linux users') do %>

<% markdown do %>

[Remmina](http://www.remmina.org/wp/) is a popular RDP client for Linux.

<% end %>

<% end %>

[END_BOX]

[START_BOX]

## 3. Run the CloudFormation template

Now you're ready to run the [CloudFormation](https://aws.amazon.com/cloudformation/) template to bring up the Chef Automate installation. A CloudFormation template is a code file (in JSON format) that defines a collection of resources, called a _stack_. When the template runs, it brings up the preconfigured server instances to run Chef Automate along with their required networking and security settings.

1. From a web browser, start by navigating to the AWS home page. [https://aws.amazon.com/](https://aws.amazon.com/)
1. Click the **Sign In to the Console** button and log in to your account.
  ![](delivery/aws_sign_in.png)
1. From the **Services** menu, select **Management Tools** and then **CloudFormation**.
  ![](delivery/aws_open_cloudformation.png)
1. If you've used CloudFormation in the past, click **Create Stack**.
  ![](delivery/aws_create_stack.png)

  If you have no running stacks, click **Create New Stack**.
  ![](delivery/aws_create_stack_first.png)
1. Under **Choose a template**, choose **Specify an Amazon S3 template URL**.
  ![](delivery/aws_stack_choose_template.png)
1. Enter the URL that matches your SSH key pair's region. Then click **Next**.
  <%= partial 'urls' %>
1. From the **Specify Details** screen, fill in the required details. Leave all values at their default except for **Stack name** and **KeyName**. When you're finished, click **Next**.
  * **Stack name** can be any name you choose. This value uniquely identifies your stack in AWS. Note your stack name for later.
  ![](automate/cfn-stack-name.png)
  * **KeyName** specifies the name of your SSH key pair. If you're new to AWS, this is the name you created in [step 2](#step2).
  ![](automate/cfn-key-name.png)
1. From the **Options** screen, click **Next**.
1. From the **Review** screen, click **Create**.

Your stack is now being created. The process typically takes around 2 minutes to finish.

![](automate/aws_stack_create_in_progress.png)

The process is done when the **Status** reads **CREATE_COMPLETE**.

![](automate/aws_stack_create_complete.png)

The **Outputs** tab displays the public IP address for the Windows workstation. You'll connect to the workstation in the next part. You can also get information about your cluster from the EC2 console.

![](automate/ec2_console_instances.png)

[COMMENT] The appendix explains and how to [temporarily suspend the AWS instances](/automate/install/managing-your-aws-instances#stoppingandrestartingyourawsinstances) and how to [tear down the installation](/automate/install/managing-your-aws-instances#tearingdownyourchefautomateinstallation) when you're finished with your Chef Automate evaluation.

Congratulations. You're almost ready to set up Chef Automate for your users. As final steps, you'll copy your license key to the Chef Automate server and then connect to the virtual Windows workstation over RDP.

[END_BOX]

[START_BOX]

## 4. Copy your license key to the Chef Automate server

> In this step, you copy your license key file from your workstation to Chef Automate to complete the installation.

Here you'll run the secure copy utility, `scp`, to transfer your license file to a temporary location on your Chef Automate server. Then you log into the Chef Automate server over SSH, copy the license file to its final location, and finally restart Chef Automate to apply the changes.

[WINDOWS] In this part, you'll run the `scp` and `ssh` commands, which are typically available on Linux systems and Mac OS. From Windows, the easiest way to access these tools is to [install the Chef DK](/tutorials/manage-a-node/rhel/hosted/set-up-your-workstation#step1), which includes Git for Windows. As an optional step, you can [verify the installation](/tutorials/manage-a-node/rhel/hosted/set-up-your-workstation#step6).

Start by getting the public IP address for your Chef Automate server. From the AWS web interface, select **Services**, then **Compute**, and then **EC2**.

![](automate/aws_open_ec2.png)

From the EC2 console, enter **wombat Delivery Server** in the **Search** box. Then select the instance and copy its public IP address.

![](automate/ec2_automate_public_ip.png)

Next, from a terminal window, run the `scp` command to copy your license key file to a temporary directory on your server.

Replace:

 * <% ph 'SSH_KEY' %> with your AWS SSH private key.
 * <% ph 'LICENSE_KEY_FILE' %> with the location of the Chef Automate license key file that you [downloaded in step 2](#step2).
 * <% ph 'IP_ADDRESS' %> with the public IP address of your Chef Automate server. You can get the public IP address from the **Outputs** tab in the CloudFormation console or from the EC2 console.

Type 'yes' when prompted.

```bash
$ scp -i SSH_KEY LICENSE_KEY_FILE ubuntu@IP_ADDRESS:/home/ubuntu/automate.license
```

Here's an example.

```bash
$ scp -i ~/.ssh/jsmith.pem ~/Downloads/automate.license ubuntu@52.41.125.55:/home/ubuntu/automate.license
The authenticity of host '52.41.125.55 (52.41.125.55)' can't be established.
ECDSA key fingerprint is SHA256:sqT6XOG/TjQM87gdmqz9ZMMEQ5MUSdCPweCwBzetig4.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '52.41.125.55' (ECDSA) to the list of known hosts.
automate.license                              100% 3072     3.0KB/s   00:00
```

Keep in mind that after the automated setup completes, it might take a few minutes for the Chef Automate server to be fully connectable. If you receive "Permission denied (publickey)" or a similar error, try again in a few minutes.

Next, create an SSH connection to your Chef Automate server. Replace <% ph 'SSH_KEY' %> and <% ph 'IP_ADDRESS' %> with the same values you used in the previous step.

```bash
$ ssh -i SSH_KEY ubuntu@IP_ADDRESS
```

Here's an example.

```bash
$ ssh -i ~/.ssh/jsmith.pem ubuntu@52.41.125.55
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Tue Jul  5 17:07:59 UTC 2016

  System load:  0.02              Processes:           176
  Usage of /:   5.4% of 49.08GB   Users logged in:     0
  Memory usage: 19%               IP address for eth0: 172.31.54.11
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

30 packages can be updated.
16 updates are security updates.


Last login: Tue Jul  5 12:06:18 2016 from 96.228.248.180
ubuntu@delivery:~$
```

From your SSH session, copy the license file to its final location.

```bash
ubuntu@delivery:~$ sudo mv ~/automate.license /var/opt/delivery/license/delivery.license
```

[COMMENT] The license key file you downloaded is named `automate.license`. This version of Chef Automate requires the file to be named `delivery.license`. We'll update the file names to match in a future version.

Next, run this command to reconfigure the server.

```bash
ubuntu@delivery:~$ sudo delivery-ctl reconfigure
```

As an optional step, run this command to confirm that the services are running.

```bash
ubuntu@delivery:~$ sudo delivery-ctl service-list
delivery*
elasticsearch*
kibana*
logstash*
nginx*
postgresql*
rabbitmq*
```

Finally, logout.

```bash
ubuntu@delivery:~$ logout
Connection to 52.41.125.55 closed.
```

[END_BOX]

[START_BOX]

## 5. Connect to the Windows workstation

For the remainder of the tutorial, you'll work from the virtual Windows workstation that's part of the automated installation.

Here you create an RDP connection from your computer to your virtual workstation. Keep in mind that after the automated setup completes, it might take a few minutes for the Windows workstation to be fully connectable.

### Get the workstation's public IP address

From the CloudFormation console, select your stack and click the **Outputs** tab. Copy the IP address for the Windows workstation to the clipboard.

![](automate/ec2_console_instances.png)

### Connect to the workstation

<% accordion('connect-rdp-windows', 'Windows users') do %>

<% markdown do %>

1. Open the Remote Desktop Connection application, `mstsc`.
1. In the **Computer** field, enter the Windows workstation's public IP address or DNS name.
1. In the **User name** field, enter <span id="username-windows"><code>Administrator</code></span>. <a data-copytarget="#username-windows" class='small-button radius cta'>Copy</a>
1. Select the **Allow me to save credentials** option.
1. Click **Connect**.
1. Enter the password <span id="password-windows"><code>RL9@T40BTmXh</code></span> when prompted. <a data-copytarget="#password-windows" class='small-button radius cta'>Copy</a>
1. A warning appears stating that the identity of the remote computer cannot be verified. This is because the Windows workstation comes with a self-signed certificate. Click **Yes** to continue connecting.

![](/assets/images/misc/rdp_windows.png)

<% end %>

<% end %>

<% accordion('connect-rdp-macosx', 'Mac OS X users') do %>

<% markdown do %>

1. Open Microsoft Remote Desktop.
1. Select **New**.
1. In the **Connection name** field, enter a descriptive name, for example, **Chef Automate tutorial Windows workstation**.
1. In the **PC name** field, enter the Windows workstation's public IP address or DNS name.
1. In the **User name** field, enter <span id="username-mac"><code>Administrator</code></span>. <a data-copytarget="#username-mac" class='small-button radius cta'>Copy</a>
1. In the **Password** field, enter <span id="password-mac"><code>RL9@T40BTmXh</code></span>. <a data-copytarget="#password-mac" class='small-button radius cta'>Copy</a>
1. Close the window.
1. Select your connection and press **Start**.
1. A warning appears stating that the certificate could not be verified back to a root certificate. This is because the Windows workstation comes with a self-signed certificate. Click **Continue** to continue connecting.

![](/assets/images/misc/rdp_mac.png)

<% end %>

<% end %>

<br />
After you connect, you may find it easier to continue this tutorial by opening this page in its own Google Chrome window from your RDP connection. You can find a bookmark in the **Learn Chef** folder.

![](automate/chrome-tutorial-bookmark.png)

[END_BOX]

[START_BOX]

## 6. Start a Chef Development Kit PowerShell session

From the desktop on your Windows workstation, double click the **Chef Development Kit** icon.

![](automate/workstation_chefdk_desktop_shortcut.png)

If you prefer to change the Administrator password, you can do so like this.

```ps
$ net user Administrator *
Type a password for the user:
Retype the password to confirm:
The command completed successfully.
```

[END_BOX]
