---
title: "Appendix: Managing your AWS instances and your project"
order: 2
keywords: TODO
layout: lesson
sections: []
appendix: true
show_disqus: false
---
This page describe a few ways to help manage the AWS instances that make up your Chef Automate installation. Topics include:

* [Stopping and restarting your AWS instances](#stoppingandrestartingyourawsinstances)
* [Getting the Windows workstation IP address](#gettingthewindowsworkstationpublicipaddress)
* [Connecting to your AWS instances from the Windows workstation](#connectingtoyourawsinstancesfromthewindowsworkstation)
* [Connecting to web-based services from the Windows workstation](#connectingtowebbasedservicesfromthewindowsworkstation)
* [Tearing down your Chef Automate installation](#tearingdownyourchefautomateinstallation)

[START_BOX]

## Stopping and restarting your AWS instances

In practice, it's common to keep your instances running so that users can access Chef Automate at any time. But because the setup process assigns a static, or fixed, private IP address to each instance, you can temporarily stop and restart your AWS instances as you evaluate Chef Automate.

To stop your instances:

1. Navigate to the EC2 Dashboard at [https://console.aws.amazon.com/ec2/v2/home](https://console.aws.amazon.com/ec2/v2/home).
1. Select **Running Instances**.
  ![](delivery/aws_running_instances.png)
1. Enter the name of your stack in the **Search** bar. An example is **chef-automate-eval**.
1. Select all results. From the **Actions** menu, select **Instance State** > **Stop**.
  ![](automate/aws_stop_instances.png)

To restart your instances, repeat steps 1&ndash;3 from the previous procedure. Select all results. From the **Actions** menu, select **Instance State** > **Start**.

After you restart your instances, you'll need to update your RDP connection to use the Windows workstation's [updated public IP address](#gettingthewindowsworkstationpublicipaddress).

[END_BOX]

[START_BOX]

## Getting the Windows workstation public IP address

If you stop your AWS instances, you'll need to get the Windows workstation's new public IP address when you restart your instances.

1. Navigate to the EC2 Dashboard at [https://console.aws.amazon.com/ec2/v2/home](https://console.aws.amazon.com/ec2/v2/home).
1. Select **Running Instances**.
  ![](/assets/images/delivery/aws_running_instances.png)
1. In the **Search** bar, enter the Windows workstation's EC2 instance name, **wombat Workstation**.
  ![](/assets/images/automate/aws_search_workstation.png)
1. Your Windows workstation is returned as the result. Select the instance. In the details section, note the instance's public address. You can connect to the instance by either its public DNS name or its IP address.
  ![](/assets/images/delivery/aws_instance_details_public_address.png)

The username is `Administrator`. The password is `RL9@T40BTmXh`.

[END_BOX]

[START_BOX]

## Connecting to your AWS instances from the Windows workstation

In practice, your production systems' hostnames may be resolvable by a name service such as DNS. Each system in the preconfigured Chef Automate setup exists in the same private network and has a fixed private IP address.

The Windows workstation provides a [hosts file](https://en.wikipedia.org/wiki/Hosts_\(file\)) that maps each system's private IP address to a fictitious domain name. Here's an example.

```ps
# C:\Users\Administrator
$ cat C:\windows\system32\drivers\etc\hosts
#
# This file is managed by Chef, using the hostsfile cookbook.
# Editing this file by hand is highly discouraged!
#
# Comments containing an @ sign should not be modified or else
# hostsfile will be unable to guarantee relative priority in
# future Chef runs!
#

172.31.54.201   acceptance.chordata.biz acceptance
172.31.54.101   build-node-1.chordata.biz build-node-1
172.31.54.102   build-node-2.chordata.biz build-node-2
172.31.54.10    chef-server.chordata.biz chef-server
172.31.54.12    compliance.chordata.biz compliance
172.31.54.202   delivered.chordata.biz delivered
172.31.54.11    delivery.chordata.biz delivery
172.31.54.203   rehearsal.chordata.biz rehearsal
172.31.54.204   union.chordata.biz union
```

For convenience, the Windows workstation also provides an [SSH config](http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/) file to make it easier to connect to each system. Here's an example.

```ps
# C:\Users\Administrator
$ cat C:\Users\Administrator\.ssh\config
Host *
  Port 22
  User ubuntu
  IdentityFile C:/Users/Administrator\.ssh\id_rsa
  IdentitiesOnly yes
  KexAlgorithms +diffie-hellman-group1-sha1
  StrictHostKeyChecking no

Host delivery-git
  HostName delivery
  Port 8989
  User delivery@diprotodontia
  IdentityFile C:/Users/Administrator\.ssh\id_rsa
  IdentitiesOnly yes
  KexAlgorithms +diffie-hellman-group1-sha1
  StrictHostKeyChecking no
```

The identity file <% fp 'C:\Users\Administrator\.ssh\id_rsa' %> is a private key that enables login access over SSH to each Chef Automate system.

As an example, here's how to log on to the Chef server over SSH.

```ps
# C:\Users\Administrator
$ ssh chef-server
Warning: Permanently added 'chef-server,172.31.54.10' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Thu Jun 23 08:27:44 UTC 2016

  System load: 0.24              Memory usage: 1%   Processes:       103
  Usage of /:  8.0% of 49.08GB   Swap usage:   0%   Users logged in: 0

  Graph this data and manage this system at:
    https://landscape.canonical.com/

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

25 packages can be updated.
16 updates are security updates.


Last login: Wed Jun 22 17:06:06 2016 from 96.228.248.180
```

Each Chef Automate system includes a similar hosts file to enable it to communicate with other systems in the network by their hostnames.

[END_BOX]

[START_BOX]

## Connecting to web-based services from the Windows workstation

This table lists the URL and logon credentials for Chef Automate's web-based services. We recommend that you use Google Chrome to access these services from the Windows workstation.


| Service         | URL      | Username | Password |
|----------------:|----------|----------|----------|
| Chef Delivery   |  [https://delivery.chordata.biz/e/mammalia/#/dashboard](https://delivery.chordata.biz/e/mammalia/#/dashboard) | `delivery` | `delivery!` |
| Chef Manage     | [https://chef-server.chordata.biz/login](https://chef-server.chordata.biz/login) | `delivery` | `delivery!`
| Chef Insights   | [https://delivery.chordata.biz/insights/](https://delivery.chordata.biz/insights/) | N/A | N/A
| Chef Compliance | [https://compliance.chordata.biz/](https://compliance.chordata.biz/) | `workstation` | `workstation!` |

Each service is also available as a bookmark in the **Demo** folder in Google Chrome.

[END_BOX]

[START_BOX]

## Tearing down your Chef Automate installation

Here's how to delete your stack when you're finished with your Chef Automate evaluation or if you want to start over. When you delete the stack, all resources that are part of the stack are torn down, including the instances and their network settings.

1. Navigate to the CloudFormation dashboard. [https://console.aws.amazon.com/cloudformation/home](https://console.aws.amazon.com/cloudformation/home)
1. Select your stack, then right click and select **Delete Stack**.
  ![](automate/aws_delete_stack.png)
1. Select **Yes, Delete** when prompted.

[END_BOX]
