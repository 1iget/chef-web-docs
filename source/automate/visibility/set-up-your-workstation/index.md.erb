---
title: 'Set up your workstation'
order: 3
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: 30 minutes
survey_id: Betfc8doFaGlJLYu635jYbACof1cENmM8fQAfwmZBT5nX9gqZVxCU6byDKS6c_2FFs
show_disqus: false
---
> Continue on the virtual Windows workstation that you used in the previous part.

In the previous parts, you or your system administrator set up a Chef Automate system, [connected to the virtual Windows workstation](/delivery/get-started/install-chef-delivery#step5), and added an organization and a user. Now you're ready to use Chef Automate. You'll interact with Chef Automate from your workstation, but first you'll need to set it up.

[COMMENT] If someone else installed Chef Automate for you, [review the installation](/delivery/get-started/install-chef-delivery#step1) to get a sense of what components are involved and how they fit together.

The Windows workstation comes preconfigured with Git for Windows and the Chef DK. Here you perform these tasks to complete your setup.

1. [Open PowerShell](#step1)
1. [Move to a working directory](#step2)
1. [Update your Chef Automate user with an SSH public key](#step3)
1. [Install the Chef Automate command-line interface (CLI) tools](#step4)
1. [Connect the Chef Automate CLI to the Chef Automate server](#step5)
1. [Set your Git identity](#step6)
1. [Authenticate access to Chef Automate's Git server](#step7)

[COMMENT] In this tutorial, you're using a Windows workstation. In practice, a user's workstation [can run Windows, Mac OS X, or Linux](https://docs.chef.io/release/delivery/install_delivery_ssh.html#install-delivery-cli).

[START_BOX]

## 1. Open PowerShell

From the task bar on your Windows workstation, right click the PowerShell icon and choose **Run as Administrator**.

![](delivery/open_powershell_admin.png)

If you prefer to change the Administrator password, you can do so like this.

```ps
$ net user Administrator *
Type a password for the user:
Retype the password to confirm:
The command completed successfully.
```

[END_BOX]

[START_BOX]

## 2. Move to a working directory

The Windows workstation comes preconfigured with a working directory. This is where your Chef Automate user settings and project will go.

From PowerShel, `cd` to <% fp '~\delivery-demo' %>.

```ps
# ~
$ cd ~\delivery-demo
```

<% accordion('powershell-paste', 'How to paste commands into your PowerShell window') do %>

<% markdown do %>

Although we believe typing in the code and commands is a great way to learn, you can also copy the text from the code and terminal boxes and paste them into your session.

Select your PowerShell window and then right click your mouse to paste the contents of your clipboard into your session. If the title of your PowerShell window starts with the text "Select Administrator", first hit escape to exit text selection mode.

You can also use the **Edit** <i class="fa fa-caret-right"></i> **Paste** option from the <img style="box-shadow:none; margin:0; display:inline;" src="/assets/images/delivery/powershell_icon.png"/> menu located in the upper-left of your PowerShell window.

![](/assets/images/delivery/powershell_menu_paste.png) 

<% end %>

<% end %>

<br> 

Now is also a good time to open up a text editor. [Atom](https://atom.io) is preinstalled. Open it like this.

```ps
# ~\delivery-demo
$ atom .
```

[END_BOX]

[START_BOX]

## 3. Update your Chef Automate user with an SSH public key

At this point, you should have a [user account and its initial password](/delivery/get-started/create-the-organization-and-add-a-user#step3) set up.

You need to associate your public SSH key with your Chef Automate user. This key enables you to authenticate requests to Chef Automate from the command line.

Start by generating an SSH key. Run this from your PowerShell prompt. You can replace you@example.com with your email address. Press Enter at each prompt (in other words, enter an empty response.)

```ps
# ~\delivery-demo
$ ssh-keygen -t rsa -b 4096 -C "you@example.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa):
Created directory '/c/Users/Administrator/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/Administrator/.ssh/id_rsa.
Your public key has been saved in /c/Users/Administrator/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:MVAmN/3Y0dW82pBnZ7doI5MRyGEHzUrnqXTgOSZAj7A you@example.com
The key's randomart image is:
+---[RSA 4096]----+
|   ...o.*=*. . oo|
|    o.o=.*o=. . o|
|   E ...= *+o.. .|
|       . X.=oo ++|
|        S + o B.+|
|         . + = o |
|            + .  |
|                 |
|                 |
+----[SHA256]-----+
```

Now copy the public part of your SSH key, <% fp '~\\\\.ssh\id_rsa.pub' %>, to the clipboard. You can open the file in a text editor or run this from your PowerShell prompt.

```ps
# ~\delivery-demo
$ Get-Content ~\.ssh\id_rsa.pub | clip
```

Next, log into the Chef Automate web interface from Google Chrome. [https://10.0.0.12/e/delivery-demo](https://10.0.0.12/e/delivery-demo)

Enter your username and initial password.

Next, select **Organizations** from the drop-down menu in the upper right corner.

![](delivery/web_ui_users.png)

From the **Users** tab, select your username and then paste your SSH key into the text area under **Security Information**. If you were assigned an initial password, change it and save your profile.

![](delivery/add_ssh_key.png)

[END_BOX]

[START_BOX]

## 4. Install the Chef Automate CLI

You're now set up to access Chef Automate from the web interface. The web interface is where you manage your profile and review and approve changes made by others. Now you need to set up the Chef Automate command-line interface (CLI). The CLI enables you to submit new changes and pull down changes made by others.

Follow these steps to install the CLI. In the next step, you'll connect the CLI to your Chef Automate user account.

1. [Download the Chef Automate CLI installer for Windows](https://s3.amazonaws.com/delivery-packages/cli/delivery-cli-latest.msi).
1. Click the package and install.

The installer adds the path to the `delivery` executable to your system PATH. Either open a new PowerShell window and `cd` to your <% fp '~\delivery-demo' %> directory or run this command to update the PATH in your current session.

```ps
# ~\delivery-demo
$ $env:Path = $env:Path + ";C:\chef\delivery-cli\bin"
```

Finally, verify that you can access the CLI.

```ps
# ~\delivery-demo
$ delivery --help
delivery.exe 2016-03-22T08:04:30Z ()

USAGE:
        delivery.exe [FLAGS] [SUBCOMMAND]

FLAGS:
    -h, --help          Prints help information
        --no-spinner    Disable the spinner
    -V, --version       Prints version information

SUBCOMMANDS:
    api         Helper to call Chef Automate's HTTP API
    checkout    Create a local branch tracking an in-progress change
    clone       Clone a project repository
    diff        Display diff for a change
    help        Prints this message
    init        Add delivery remote to this git repo (and lots more!)
    job         Run one or more phase jobs
    review      Submit current branch for review
    setup       Write a config file capturing specified options
    token       Create a local API token
```

[END_BOX]

[START_BOX]

## 5. Connect the Chef Automate CLI to the Chef Automate server

Next, you'll run the `delivery setup` command to configure the CLI to contact the Chef Automate server. The command creates a configuration file named <% fp '.delivery\cli.toml' %>.

The placement of the `.delivery` directory in your file hierarchy is significant. Like Git, the delivery CLI searches the current directory and parent directories for its server settings. Because server settings are unique to an organization, we recommend that you create a directory for each organization you belong to and run the `delivery setup` command from that directory.

From your command prompt, configure the CLI to contact the Chef Automate server at <code class="placeholder">10.0.0.12</code>, replacing <code class="placeholder">USER</code> with your username.

```ps
# ~\delivery-demo
$ delivery setup --server=10.0.0.12 --ent=delivery-demo --org=delivery-demo --user=USER
Chef Automate
Loading configuration from C:\Users\Administrator\delivery-demo
Writing configuration to C:\Users\Administrator\delivery-demo\.delivery\cli.toml
New configuration
-----------------
api_protocol = "https"
enterprise = "delivery-demo"
git_port = "8989"
organization = "delivery-demo"
pipeline = "master"
server = "10.0.0.12"
user = "USER"
```

[END_BOX]

[START_BOX]

## 6. Set your Git identity

Run `git config` to set your [Git identity](https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup#Your-Identity). Git includes this information as metadata when you commit changes.

If you have an existing Git account, such as with GitHub, you can use the same information here (changes you make in this tutorial won't be published as public activity on your GitHub account.)

Here's an example.

```ps
# ~\delivery-demo
$ git config --global user.name "John Smith"
$ git config --global user.email jsmith@example.com
```

Your workstation is now set up.

[END_BOX]

[START_BOX]

## 7. Authenticate access to Chef Automate's Git server

As a verification step, authenticate access to Chef Automate's Git server, which by default runs on port 8989.

Run this command, replacing <code class="placeholder">USER</code> with your username. Enter 'yes' when prompted.

```ps
# ~\delivery-demo
$ ssh -l USER@delivery-demo -p 8989 10.0.0.12
The authenticity of host '[10.0.0.12]:8989 ([10.0.0.12]:8989)' can't be established.
RSA key fingerprint is SHA256:Ol5WbV1LGYMvQMU/+eqqD0JQazMJoWR5by7/ginRk14.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[10.0.0.12]:8989' (RSA) to the list of known hosts.
ssh_packet_read: Connection closed
```

[END_BOX]