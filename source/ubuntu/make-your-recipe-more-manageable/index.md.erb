---
title: 'Make your recipe more manageable'
order: 4
layout: tutorial
description: Create a cookbook to make your recipes easier to manage
keywords: cookbook, recipe
---
[TIMETOCOMPLETE] 15

# Make your recipe more manageable

[Last time](/ubuntu/configure-a-package-and-service/) you learned how to manage a package and a service by configuring a web server. You also added a basic web page. But there was one problem &ndash; although it helped you verify that your web server was properly configured, the code for your HTML page was embedded in the Chef recipe.

Let's create a _cookbook_ to make our web server recipe easier to manage. A cookbook provides structure to your recipes and enables you to more easily reference external files, such as our web server's home page. In essence, a cookbook helps you stay organized.

## <i class="fa fa-linux" style="margin-right:3px;"></i> Get a Linux machine

Like the previous tutorials, you'll configure the server directly. You can continue with the Linux machine you used in the previous tutorial, but let's review the options.

Option 1: use your own Linux machine. If you have an Ubuntu machine that meets the [system requirements](http://docs.getchef.com/chef_system_requirements.html) that you'd like to use, install the [Chef Development Kit](http://www.getchef.com/downloads/chef-dk/) on it now.

Option 2: let us provide an Ubuntu virtual machine that has the Chef tools installed for you. Just click the button below.

<div id="pre-launch">
<center>
<a id="launch-button" href="javascript:provisionHelper('ec2', 'ubuntu', 'localmode', 'launch-button', 'launching', 'machine-details', 'launch-error')" class="button radius"><i class='fa fa-play'></i>&nbsp;Reserve an Ubuntu virtual machine</a>
</center>
</div>

<div id="launching" style="display: none;">
<div class="spinner">
  <div class="cube1"></div>
  <div class="cube2"></div>
</div>
<center>We're provisioning a virtual machine for you. This'll take just a minute.</center>
</div>

<div id="machine-details" class="indent" style="display: none">
{0} Your virtual machine is all ready to go! Here's how to log in using SSH.
<p/>
<div class="window">
            <nav class="control-window">
              <a href="#finder" class="close" data-rel="close">close</a>
              <a href="#" class="minimize">minimize</a>
              <a href="#" class="deactivate">deactivate</a>
            </nav>
            <h1 class="titleInside">Terminal: ~/</h1>
            <div class="container"><div class="terminal"><table><tbody><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">$</span><span class="line-number">&nbsp;</span></pre></td><td class="code"><pre><code><span class="line command">ssh {1}@{3}</span><span class="line output">{1}@{3}'s password: {2}</span></code></pre></td></tr></tbody></table></div></div>
</div>

<p>
The environment expires <b>{4}</b>. If it expires, you're welcome to spin up a new one.

We hope you'll use the virtual machine to continue experimenting with Chef after you complete the tutorial. We only ask that you use the machine respectfully.
</p>
</div>

<div id="launch-error" class="alert-box error" style="display: none">

<i class="fa fa-exclamation-circle" style="color: #ff2222"></i> Something went wrong while provisioning your machine. We'll look into it. If you get the error again in a few minutes, either try the first option above or <a href="mailto:learnchef@getchef.com?subject=Feedback on Learn Chef">contact us</a>.

</div>

<sidebar style="line-height:1.7; font-size:1.0em; margin-top:30px; max-width:440px;">
<span style="line-height:2.0;"><i class="fa fa-search"></i>&nbsp;**As you read, think about:**</span><br>
  <i class="fa fa-check"></i>&nbsp; how cookbooks are organized.<br>
  <i class="fa fa-check"></i>&nbsp; why the run-list is important.<br>
</sidebar>

## <i class="fa fa-tasks rediconcolor" style="margin-right:3px;"></i> Here's what you'll do

  1. [Create a cookbook](#1createacookbook)
  1. [Create a template](#2createatemplate)
  1. [Update the recipe to reference the HTML template](#3updatetherecipetoreferencethehtmltemplate)
  1. [Run the cookbook](#4runthecookbook)

## 1. Create a cookbook

First, from your working directory, create a <filepath>cookbooks</filepath> directory and <codeinline>cd</codeinline> there.

```bash
# ~/chef-repo
$ mkdir cookbooks
$ cd cookbooks
```

Now run the <codeinline>chef</codeinline> command to generate a cookbook named **learn\_chef\_apache2**.

```bash
# ~/chef-repo/cookbooks
$ chef generate cookbook learn_chef_apache2
```

Here's the directory structure that the command created.

```bash
# ~/chef-repo/cookbooks
$ tree
.
└── learn_chef_apache2
    ├── Berksfile
    ├── chefignore
    ├── metadata.rb
    ├── README.md
    └── recipes
        └── default.rb

2 directories, 5 files
```

Note the default recipe, named <filepath>default.rb</filepath>. This is where we'll move our Apache recipe in a moment.

## 2. Create a template

Now we'll move the home page to our cookbook to an external file. First, run this command to generate the HTML file for our home page.

```bash
# ~/chef-repo/cookbooks
$ chef generate template learn_chef_apache2 index.html
```

The file <filepath>index.html.erb</filepath> gets created under <filepath>learn\_chef\_apache2/templates/default</filepath>.

```bash
# ~/chef-repo/cookbooks
$ tree
.
└── learn_chef_apache2
    ├── Berksfile
    ├── chefignore
    ├── metadata.rb
    ├── README.md
    ├── recipes
    │   └── default.rb
    └── templates
        └── default
            └── index.html.erb

4 directories, 6 files
```

The .erb extension simply means that the file can have placeholders. More on that later.

Now copy the contents of the HTML file from your recipe to the new HTML file, <filepath>index.html.erb</filepath>.

```html
<!-- ~/chef-repo/cookbooks/learn_chef_apache2/templates/default/index.html.erb -->
<html>
  <body>
    <h1>hello world</h1>
  </body>
</html>
```

## 3. Update the recipe to reference the HTML template

Write out the recipe, <filepath>default.rb</filepath>, like this.

```ruby
# ~/chef-repo/cookbooks/learn_chef_apache2/recipes/default.rb
package 'apache2'

service 'apache2' do
  action [:start, :enable]
end

template '/var/www/index.html' do
  source 'index.html.erb'
end
```

## 4. Run the cookbook

Now run the cookbook. To do so, we use the <codeinline>chef-client</codeinline> command and specify what's called the _run-list_.

```bash
# ~/chef-repo
$ sudo chef-client --local-mode --runlist learn_chef_apache2
[2014-07-28T20:05:38+00:00] WARN: No config file found or specified on command line, using command line options.
Starting Chef Client, version 11.14.0.rc.2
resolving cookbooks for run list: ["learn_chef_apache2"]
Synchronizing Cookbooks:
  - learn_chef_apache2
Compiling Cookbooks...
Converging 3 resources
Recipe: learn_chef_apache2::default
  * package[apache2] action install (up to date)
  * service[apache2] action start (up to date)
  * service[apache2] action enable (up to date)
  * template[/var/www/index.html] action create
    - update content in file /var/www/index.html from 2914aa to ef4ffd
    (no diff)
    - restore selinux security context

Running handlers:
Running handlers complete
Chef Client finished, 1/4 resources updated in 5.902863207 seconds
```

[COMMENT] You ran <codeinline>chef-apply</codeinline> to run a single recipe from the command line. <codeinline>chef-client</codeinline> is what you use to run a cookbook.

Run <codeinline>curl</codeinline> again or refresh your web browser to confirm that your web page is still available.

```bash
# ~/chef-repo
$ curl localhost
<html>
  <body>
    <h1>hello world</h1>
  </body>
</html>
```

The result is the same as before, but with a cookbook things are now easier to manage.

## <i class="fa fa-question blueiconcolor" style="margin-right:3px;"></i> What did we see here?

Your web server is shaping up! With a [cookbook][cookbook] you're now better organized. A cookbook adds structure to your work. You can now author your HTML code in its own file and use  a [template][template] resource to reference it from your recipe.

You also saw the [run-list][run-list]. The run-list lets you specify which recipes to run, and the order in which to run them. This is handy once you have lots of cookbooks, and the order in which they run is important.

## <i class="fa fa-road blueiconcolor" style="margin-right:3px;"></i> What's next

Next you'll get ready to configure a second web server by uploading your cookbook to a Chef server.

<%= link_to 'Get ready to add another server &rarr;', '/ubuntu/get-ready-to-add-another-server/', class: 'button radius' %>

<script src='../../../assets/javascripts/provision.js' type='text/javascript'></script>


[cookbook]: http://docs.opscode.com/essentials_cookbooks.html
[template]: http://docs.opscode.com/resource_template.html
[run-list]: http://docs.opscode.com/essentials_node_object_run_lists.html
