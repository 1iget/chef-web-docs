---
title: 'Set up your workstation'
order: 1
time_to_complete: 30 minutes
snippet_path: local-development/ubuntu/vagrant
snippet_workstation: ubuntu
headings: [
  { label: 'Before you begin', href: '#beforeyoubegin' },
  { label: '1. Set up your workstation', href: '#step1' },
  { label: '2. Install VirtualBox & Vagrant', href: '#step2' }
]
---
Here you'll make sure that your workstation is set up for Chef development and also install the virtualization software.

This tutorial uses Test Kitchen along with [VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/) to manage test instances. This combination is popular with Chef users because it uses free software and is easy to set up.

<img src="/assets/images/misc/kitchen-vagrant-virtualbox.png" style="width: 100%; box-shadow: none;"/>

**VirtualBox** is a [hypervisor](https://en.wikipedia.org/wiki/Hypervisor) that manages your virtual machine instances. Think of it as the software that hosts your VM instances.

**Vagrant** makes it easier to work with hypervisors such as VirtualBox. Vagrant uses a configuration file, called a [Vagrantfile](https://www.vagrantup.com/docs/vagrantfile/), to describe aspects of the virtual machine such as available memory, host name, and network settings.

Vagrant also provides access to base virtual machine images, called _boxes_. [HashiCorp's Atlas](https://www.hashicorp.com/atlas.html) is a place where you can access prebuilt boxes or upload new boxes for others to use. [Bento](http://chef.github.io/bento/) is a Chef project that provides ready-to-use Vagrant boxes for many common platforms, including Ubuntu.

**Test Kitchen** enables you to specify details about your virtual machine, including its operating system, available memory, host name, and network settings, and how to run Chef &ndash; including which recipes and which tests to run. Test Kitchen builds the <% fp 'Vagrantfile' %> for you and is the interface you use to create, destroy, and run Chef on your instances. Test Kitchen also downloads the Vagrant box for you as needed.

[TIP] This page explains the manual steps to help you understand exactly what software you need to install and how to install it. Alternatively, you can also run the [ChefDK_Bootstrap](https://github.com/Nordstrom/chefdk_bootstrap) script to set up your Windows or Mac workstation for Chef development. The script installs [commonly used development tools](https://github.com/Nordstrom/chefdk_bootstrap#what-does-it-do) such as the Atom text editor, Git, VirtualBox, and Vagrant.

[START_BOX]

## Before you begin

Your workstation &ndash; the system from which you develop your cookbooks &ndash; can be a physical machine or a virtual machine that supports nested virtualization.

Ensure that your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS. If you're using a virtual machine as your workstation through a program such as VMware Fusion, [ensure that nested virtualization is enabled](https://communities.vmware.com/docs/DOC-8970) on the workstation VM.

Also ensure that your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation) for running VirtualBox.

VirtualBox does not run in virtualized workstation environments such as Amazon EC2 or a VirtualBox host instance. With some modification, you can [use another Test Kitchen driver](https://docs.chef.io/kitchen.html#drivers) if you're unable to run VirtualBox.

[END_BOX]

[START_BOX]

## 1. Set up your workstation for Chef development

Although this tutorial doesn't involve the Chef server or bootstrapping a node, we recommend that you complete [Manage an Ubuntu node](/modules/manage-a-node/ubuntu/) before starting this tutorial.

If you prefer to learn about local development now, before learning how to bootstrap a node, [perform these steps](/modules/manage-a-node/ubuntu/hosted/set-up-your-workstation/) to set up your workstation. Then come back to this page.

At this point, your workstation should:

* have the latest version of the Chef Development Kit.
* have a programmer's text editor that you're comfortable working with.
* have the <code class="file-path">~/learn-chef</code> directory for you to work in.
* have Git and an SSH client.

Having Git is important because you'll use it to download starter code to work with.

Having an SSH client is important because you'll use it to log in to your Linux instance to verify your work.

[END_BOX]

[START_BOX]

## 2. Install VirtualBox and Vagrant

If you already use VirtualBox and Vagrant or have gone through the Learn Chef tutorials that use them, then you're already set up.

If you're new to VirtualBox and Vagrant, the [Learn the Chef basics](/modules/learn-the-basics/ubuntu/virtualbox/set-up-a-machine-to-manage/) tutorial can help you get set up. You can follow the steps that have you bring up an Ubuntu instance to verify the installation. However, you don't need to connect to or install the Chef DK on your Ubuntu instance.

[WINDOWS] Remember, on Windows you'll likely need to disable Hyper-V in order to run VirtualBox. [Here are a few ways to disable and enable Hyper-V](http://rizwanansari.net/run-hyper-v-and-virtualbox-on-the-same-machine/).

[END_BOX]

<% next_page(current_page) do %>

Now that you're all set up, let's get a hang for how Test Kitchen works by applying the web server cookbook you wrote in the previous tutorial on a local test instance.

<% end %>
