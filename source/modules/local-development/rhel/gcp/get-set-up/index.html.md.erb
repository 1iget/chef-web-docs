---
title: 'Set up your workstation'
order: 1
time_to_complete: 30 minutes
snippet_path: local-development/rhel/vagrant
snippet_workstation: ubuntu
headings: [
  { label: '1. Set up your workstation', href: '#step1' },
  { label: '2. Prepare your Google account', href: '#step2' }
]
---
Test Kitchen enables you to specify details about your virtual machine. When working with Google Cloud Platform, this includes which image to use, the instance size, networking settings, and how to run Chef &ndash; including which recipes and which tests to run. Test Kitchen is the interface you use to create, destroy, and run Chef on your instances.

Here you'll make sure that your workstation is set up for Chef development. You'll also prepare your Google account to create test instances.

Log in to your Google Cloud Platform account. If you don't have an account, Google is offering a [60-day free trial](https://cloud.google.com/compute/) for up to $300 (USD) of usage.

[COMMENT] Although this module focuses on Red Hat Enterprise Linux, in this module you'll use CentOS, a free computing platform that's functionally compatible with Red Hat Enterprise Linux. CentOS typically costs less to run on Google Cloud Platform, and is an ideal way to quickly test out your Chef code.

[START_BOX]

## 1. Set up your workstation for Chef development

Although this module doesn't involve the Chef server or bootstrapping a node, we recommend that you complete [Manage a Red Hat Enterprise Linux node with Chef server](/modules/manage-a-node-chef-server/rhel/) before starting this module.

If you prefer to learn about local development now, before learning how to bootstrap a node, [perform these steps](/modules/manage-a-node-chef-server/rhel/hosted/set-up-your-workstation/) to set up your workstation. Then come back to this page.

At this point, your workstation should:

* have the latest version of the Chef Development Kit.
* have a programmer's text editor that you're comfortable working with.
* have the <% fp '~/learn-chef' %> directory for you to work in.
* have Git and an SSH client.

Having Git is important because you'll use it to download starter code to work with.

Having an SSH client is important because you can use it to log in to your CentOS instance to verify your work.

If your workstation is running Windows, remember to open the Chef Development Kit desktop shortcut. The desktop shortcut brings up a PowerShell session that's configured to work with Chef.

![](misc/chefdk-desktop-shortcut-windows.png)

[END_BOX]

[START_BOX]

## 2. Prepare your Google account

You'll use Test Kitchen to create a Google Compute Engine instance later in this module. For now, let's ensure you have everything you'll need to create and connect to your instance.

Test Kitchen uses drivers, or plugins, to work with cloud and virtualization platforms. Some drivers come with the Chef DK. For Google Compute Engine, you need to install the `kitchen-google` driver on your workstation manually. You also need to create a configuration file on your workstation that authenticates access to Google Compute Engine resources.

Review the [kitchen-google](https://github.com/test-kitchen/kitchen-google) project page and perform the steps to install the driver and set your configuration file. Here are the important points to keep in mind.

* Ensure you have access to a [Google Cloud Platform project](https://github.com/test-kitchen/kitchen-google#google-cloud-platform-gcp-project) and note its name for later. An example project name is "funky-penguin-12345".
* Ensure you have a [credentials file](https://github.com/test-kitchen/kitchen-google#authentication-and-authorization) to enable Test Kitchen to authenticate commands. An example credentials file looks like this.

```ruby
# ~/.config/gcloud/application_default_credentials.json
{
  "client_id": "54525506288.apps.googleusercontent.com",
  "client_secret": "msJ39g2yerjDjyT33lZH8NC2",
  "refresh_token": "1/tm5xAD7g77HpCGUmLeExnS4XjOkVWOfUSlTK_CH6Rzz",
  "type": "authorized_user"
}
```
* Ensure you have an [SSH keypair](https://github.com/test-kitchen/kitchen-google#ssh-keys) to enable Test Kitchen to connect to your instances. You [provide the public part](https://cloud.google.com/compute/docs/instances/connecting-to-instance#generatesshkeypair) of the key pair as metadata for your project; the private part stays with you. Here's an example from the Compute Engine console.

![](misc/compute-engine-ssh-key-metadata.png)

* Here's an example of how to install the `kitchen-google` driver.

<% command_snippet(workstation: 'ubuntu', path: 'local-development/rhel/vagrant/set-up-your-workstation/set-up-your-working-directory/install-kitchen-google') %>

Also note the [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones), for example, **us-east1-c**, where you'll run your test instances.

If you're new to Google Cloud Platform, Google's [Quickstart Using a Linux VM](https://cloud.google.com/compute/docs/quickstart-linux) module walks you through the creation of your first Linux virtual machine. After you verify that you're able to create an instance, note the zone for later.

[END_BOX]
