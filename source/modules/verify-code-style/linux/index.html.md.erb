---
title: 'Use RuboCop and Foodcritic to verify code style'
short_title: 'Linux'
platform: Linux
platform_id: rhel
category: local-development
order: 1
time_to_complete: 5 minutes
machine_config: snippets/test-your-infrastructure-code/rhel/virtualbox/machine_config.md
headings: [
  { label: 'Prerequisites', href: '#prerequisites' }
]
---
In the [Test driven development with InSpec](/modules/tdd-with-inspec/) and [Unit test with ChefSpec](/modules/unit-test-with-chefspec/) tutorials, you've learned how to use automated testing to speed up the feedback cycle. Getting feedback early and often can help you release more quickly and with higher quality.

Although your code may behave as you expect, it's also important to ensure your code is easy to read and maintain, and avoids defects that can be difficult to fix later. Lint testing, or _linting_, is one way to help ensure that your code adheres to standard style guidelines and avoids common problems.

Lint testing is a form of [static program analysis](https://en.wikipedia.org/wiki/Static_program_analysis), also called _static code analysis_. A static code analysis tool inspects a program's source code for potential defects without actually running the program.

Lint testing can identify a range of issues, from code that's correct but difficult to read (such as code that uses non-uniform indentation) all the way to code that surely has an error (such as using an invalid character in a variable name).

In this tutorial, you'll use two popular tools that are part of the Chef DK &ndash; [RuboCop](http://batsov.com/rubocop/) and [Foodcritic](http://www.foodcritic.io) &ndash; to identify potential issues in variations of the `webserver_test` cookbook you created previously.

[START_BOX]

## Prerequisites

This tutorial builds on the `webserver_test` cookbook that you create in the [Test driven development with InSpec](/modules/tdd-with-inspec/) and [Unit test with ChefSpec](/modules/unit-test-with-chefspec/) tutorials. We recommend you work through those tutorials before you begin this one.

If you want to get started right away with this tutorial, or no longer have the code from the previous ones, run this command from the <% fp '~/learn-chef' %> directory to create the `webserver_test` cookbook.

<% command_snippet(workstation: 'ubuntu', path: 'test-your-infrastructure-code/rhel/virtualbox/verify-desired-state/create-the-web-server-cookbook/chef-generate-cookbook') %>

[END_BOX]

<% accordion('test-configuration', 'Test configuration') do %>

<% markdown do %>

<% render_machine_config(current_page.data.machine_config) %>

<% end %>

<% end %>
