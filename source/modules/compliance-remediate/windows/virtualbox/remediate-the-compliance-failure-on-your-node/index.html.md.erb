---
title: 'Remediate the compliance failure on your node'
order: 3
keywords: TODO
time_to_complete: 30 minutes
snippet_path: compliance_scanner/windows/virtualbox/remediate-the-compliance-failure-on-your-node
snippet_workstation: ubuntu
headings: [
  { label: '1. Upload the cookbook', href: '#step1' },
  { label: '2. Bootstrap your node', href: '#step2' },
  { label: '3. Rerun the scan', href: '#step3' },
  { label: 'Exercises', href: '#exercises' },
  { label: 'Clean up your environment', href: '#howtocleanupyourenvironment' }
]
---
In this part, you'll apply the password complexity configuration to your Windows Server node and then rerun the compliance scan to verify the fix.

To apply the password complexity configuration, you'll upload the `admpwd` cookbook to your Chef server and then bootstrap your Windows Server  node.

Recall that during the bootstrap process, a node installs `chef-client` and performs the initial check-in to the Chef server. When you bootstrap a node, you specify the _run-list_, which includes the recipes that you want to apply. `chef-client` fetches the latest cookbooks from the Chef server. To update your node's configuration, you upload a new version of your cookbook to the Chef server and run `chef-client` on your node.

[START_BOX]

## 1. Upload the admpwd cookbook to your Chef server

The first step is to upload the `admpwd` cookbook to the Chef server. This allows the node to fetch the cookbook during the bootstrap process.

Run this comand from your <% fp '~/learn-chef' %> directory.

<% command_snippet(page: current_page, path: 'upload-the-cookbook/knife-cookbook-upload', features: [:stdin, :stderr]) %>

[END_BOX]

[START_BOX]

## 2. Bootstrap your node

Next, bootstrap your Windows Server 2012 R2 node. [You learned about this process](/modules/manage-a-node/windows/hosted/bootstrap-your-node/) in the _Manage a node_ tutorial.

Run this `knife bootstrap` command. Replace the IP address and the values of `--winrm-user` and `--winrm-password` as needed. You can also replace the value of `--node-name` if you want to give your node a name other than "node1-windows".

<% command_snippet(page: current_page, path: 'bootstrap-your-node/bootstrap-node1', features: [:stdin, :stderr, :stdout]) %>

`chef-client` runs during the bootstrap process. You see from towards the end of the output that the registry key that defines the password complexity policy is created.

[END_BOX]

[START_BOX]

## 3. Rerun the compliance scan

You've applied the updated password policy configuration to your node. Now let's scan your node against the CIS Benchmarks a second time to see whether the password complexity rule pases.

We expect the rule to pass because we verified the configuration on a test instance and saw the expected output when `chef-client` ran on the node.

From the dashboard in the web interface, select your node and click **Scan**.

![](compliance/scan_button_windows2012.png)

Select **cis/cis-windows2012r2-level1-memberserver**.

![](compliance/select_profiles_windows2012.png)

Click **Scan now** to start the scan.

![](compliance/scan_now_button.png)

Watch as your node is scanned. The scan may take a few minutes to complete.

![](compliance/scan_in_progress.png)

From the scan report, scroll to the **Ensure 'Password Settings: Password Complexity' is set to 'Enabled: Large letters + small letters + numbers + special characters' (MS only)** rule. You see that the test passes.

![](compliance/admpwd_compliant_windows2012.png)

Congratulations. You're one step closer to meeting your compliance goals.

[END_BOX]

[START_BOX]

<%= partial 'exercises/index' %>

[END_BOX]

[START_BOX]

### How to clean up your environment

[Follow these steps](/modules/manage-a-node/windows/hosted/run-chef-client-periodically/#howtocleanupyourenvironment) from the _Manage a node_ tutorial if you want to clean up your Chef server after you complete this tutorial or you want to repeat the tutorial from the beginning.

To remove the `admpwd` cookbook from your Chef server, run `knife cookbook delete admpwd`.

<% command_snippet(page: current_page, path: 'cleanup/knife-cookbook-delete', features: [:stdin, :stderr]) %>

To remove the node from your Chef compliance scanner, select the node from the dashboard and click **Remove**.

![](compliance/remove_node_windows2012.png)

[END_BOX]

<% next_page(current_page) do %>

In this tutorial, you used Chef to remediate a failure of one of the predefined rules in the CIS Security Benchmarks.

You started with local development using Test Kitchen. Developing your code on local instances helps you to experiment and iterate more quickly.

After verifying that your cookbook properly remediates the compliance failure on a test instance, you uploaded your cookbook to the Chef server and applied the configuration to your node. You then repeated the compliance scan to verify that the password configuration satisfies the compliance rule.

At the [start of the previous tutorial](/modules/compliance-assess/windows/bring-your-own-system/), we proposed 5 stages that, together, will let you meet your compliance challenges:

* **Analyze**
* **Specify**
* **Test**
* **Remediate**
* **Certify**

With remediation in place, you've successfully completed 4 of these 5 stages. The final stage, **Certify**, depends on your compliance process. The Chef compliance scanner provides automated tests and reports that prove the state of your infrastructure. This independent evidence can greatly decrease the time it takes to receive a final human sign off. Also, when nodes are managed by Chef, you can use automation to repair compliance failures and ensure that the nodes remain within compliance guidelines.

The built-in compliance profiles are a great start, but they may not cover your organization's unique requirements. We're working on a tutorial that teaches you how to write custom compliance profiles. [Follow us on Twitter](https://twitter.com/learnchef) to get the latest updates.

[GITHUB] [Get the code for this tutorial](https://github.com/learn-chef/admpwd) on GitHub.

<% end %>
