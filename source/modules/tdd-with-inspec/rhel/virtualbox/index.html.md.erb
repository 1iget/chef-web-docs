---
title: 'Test driven development with InSpec on CentOS with VirtualBox and Vagrant'
short_title: 'VirtualBox and Vagrant'
platform: CentOS
platform_id: rhel
category: local-development
logo: tests.svg
order: 1
time_to_complete: 60 minutes
snippet_workstation: ubuntu
environment: virtualbox
machine_config: snippets/test-your-infrastructure-code/rhel/virtualbox/machine_config.md
---
In this module, you'll learn how to use [InSpec](http://inspec.io/) to automatically verify a basic web server configuration. You'll run InSpec from Test Kitchen on a virtual machine running on your workstation.

InSpec provides a kind of [integration testing](https://en.wikipedia.org/wiki/Integration_testing), where you verify that multiple components function correctly together. With InSpec, you write code that describes the desired state of the server. InSpec translates this code into SSH commands that it runs on the server.

It's common to write InSpec tests after you write your configuration code. But another way is to take a _test-driven_ approach, where you write your tests first before you write any Chef code.

The idea behind test-driven development (TDD) is to use tests, also called _specifications_ or _specs_, to clearly document your requirements. You run your tests on the server and watch them each fail. Then you write just enough Chef code to make at least one failing test pass. You then repeat the process until all of your tests pass.

[COMMENT] [Watch this 60-minute webcast](/modules/test-driven-cookbook-development/) to learn about the test-driven process in greater depth. You can watch the video before or after you complete this module.

An important benefit of test-driven development is that it helps limit scope. You know you're done when all tests pass. And because the tests are code, they're versionable through source control. When a requirement changes, you capture that change by updating the tests. This gives you the complete history of your requirements and better insight into when and how your requirements changed.

<% accordion('test-configuration', 'Test configuration') do %>

<% markdown do %>

<% render_machine_config(current_page.data.machine_config) %>

<% end %>

<% end %>
