---
title: 'Create a basic audit control'
order: 2
keywords: TODO
layout: lesson
sections: [1, 2, 3, 4, 5, 6, 7]
next: {heading: Next, partial: next}
time_to_complete: 60 minutes
---
[HEADLINE] Expressing your audit policy as code helps document the current state of your compliance policy and tracks how that policy evolves over time.

[CALLOUT networks/workstation.png] You'll do this lesson from your workstation.

You write audit policies like you do other Chef code. You create cookbooks and recipes that describe your audit  policy, and then run `chef-client` to verify that the system complies with that policy.

A _control_ is an automated test that's built into a cookbook. Controls audit the state of the system for compliance. It's common to separate your audit code from your infrastructure code by placing them in separate cookbooks. That way, an audit or operations team can maintain their own set of controls that monitor concerns across their entire infrastructure.

In this lesson, you'll create two cookbooks. The first cookbook implements a basic audit control that validates the ownership of web server content. The second cookbook configures Apache web server and adds a few basic web pages to it. You'll use Test Kitchen to apply both cookbooks to an Ubuntu virtual machine. You'll see that although the web server cookbook appears correct, it applies changes that violate your organization's compliance policy. You'll complete the lesson by fixing the violation and verifying that the system meets compliance.

[GITHUB] You can find the final code for this lesson on [GitHub](https://github.com/learn-chef/controls-for-compliance-ubuntu/releases/tag/lesson_1(v1.0.0\)).
