---
title: 'Make your recipe more manageable'
order: 4
layout: tutorial
description: Create a cookbook to make your recipes easier to manage
keywords: cookbook, recipe
---
[TIMETOCOMPLETE] 15

# Make your recipe more manageable

[Last time](/rhel/configure-a-package-and-service/) you learned how to manage a package and a service by configuring a web server. You also added a basic web page. But there was one problem &ndash; although it helped you verify that your web server was properly configured, the code for your HTML page was embedded in the Chef recipe.

Let's create a _cookbook_ to make our web server recipe easier to manage. A cookbook provides structure to your recipes and enables you to more easily reference external files, such as our web server's home page. In essence, a cookbook helps you stay organized.

<sidebar style="line-height:1.7; font-size:1.0em; margin-top:30px; max-width:440px;">
<span style="line-height:2.0;"><i class="fa fa-search"></i>&nbsp;**As you read, think about:**</span><br>
  <i class="fa fa-check"></i>&nbsp; how cookbooks are organized.<br>
  <i class="fa fa-check"></i>&nbsp; why the run-list is important.<br>
</sidebar>

## <i class="fa fa-tasks rediconcolor" style="margin-right:3px;"></i> Here's what you'll do

  1. [Create a cookbook](#1createacookbook)
  1. [Create a template](#2createatemplate)
  1. [Update the recipe to reference the HTML template](#3updatetherecipetoreferencethehtmltemplate)
  1. [Run the cookbook](#4runthecookbook)

## 1. Create a cookbook

First, from your working directory, create a <filepath>cookbooks</filepath> directory and <codeinline>cd</codeinline> there.

```bash
# ~/chef-repo
$ mkdir cookbooks
$ cd cookbooks
```

[COMMENT] crushtime-6: ^ Folks mentioned as they worked through this that chef-[command] is picky about where you are in the dir structure. For example, must be in <filepath>cookbooks</filepath> to run the cookbook, but above cookbooks to create one. Follow the 'do what I mean' paradigm by automatically traversing the dir hierarchy up and down to place things where they need to go.

Now run the <codeinline>chef</codeinline> command to generate a cookbook named **webserver**.

```bash
# ~/chef-repo/cookbooks
$ chef generate cookbook webserver
```

Here's the directory structure that the command created.

```bash
# ~/chef-repo/cookbooks
$ tree
.
└── webserver
    ├── Berksfile
    ├── chefignore
    ├── metadata.rb
    ├── README.md
    └── recipes
        └── default.rb

2 directories, 5 files
```

Note the default recipe, named <filepath>default.rb</filepath>. This is where we'll move our Apache recipe in a moment.

## 2. Create a template

Now we'll move the home page to our cookbook to an external file. First, run this command to generate the HTML file for our home page.

```bash
# ~/chef-repo/cookbooks
$ chef generate template webserver index.html
```

The file <filepath>index.html.erb</filepath> gets created under <filepath>webserver/templates/default</filepath>.

```bash
# ~/chef-repo/cookbooks
$ tree
.
└── webserver
    ├── Berksfile
    ├── chefignore
    ├── metadata.rb
    ├── README.md
    ├── recipes
    │   └── default.rb
    └── templates
        └── default
            └── index.html.erb

4 directories, 6 files
```

The .erb extension simply means that the file can have placeholders. More on that later.

Now copy the contents of the HTML file from your recipe to the new HTML file, <filepath>index.html.erb</filepath>.

```html
<!-- ~/chef-repo/cookbooks/webserver/templates/default/index.html.erb -->
<html>
  <body>
    <h1>hello world</h1>
  </body>
</html>
```

## 3. Update the recipe to reference the HTML template

Write out the recipe, <filepath>default.rb</filepath>, like this.

```ruby
# ~/chef-repo/cookbooks/webserver/recipes/default.rb
package 'httpd'

service 'httpd' do
  action [:start, :enable]
end

template '/var/www/html/index.html' do
  source 'index.html.erb'
end
```

[CONCEPT] We're asking you to write things out a second time only because we're moving from the basic recipe approach to using a cookbook. In practice, you'll start with a cookbook, so you won't have to do things twice.

## 4. Run the cookbook

Now run the cookbook. To do so, we use the <codeinline>chef-client</codeinline> command and specify what's called the _run-list_.

```bash
# ~/chef-repo
$ chef-client --local-mode --runlist webserver
```

[CONCEPT] You ran <codeinline>chef-apply</codeinline> to run a single recipe from the command line. <codeinline>chef-client</codeinline> is what you use to run a cookbook. You'll be using <codeinline>chef-client</codeinline> a lot more in the future.

[COMMENT] crushtime-2: ^ A few undelightful things happen. First, you get a WARN saying that no config file was found. If this is really a problem, it should say why. Otherwise, perhaps this should be an INFO or nothing when running in local mode. Second, we should remove the SSL WARN in local mode because MITM attacks aren't possible in local mode.

[COMMENT] crushtime-3: ^ Typing --local-mode or -z is a pain. Make it the default when no configuration is present.

Refresh your browser. The result is the same as before, but with a cookbook things are now easier to manage.

![The basic home page](rhel/webserver-basic.png)

## <i class="fa fa-question blueiconcolor" style="margin-right:3px;"></i> What did we see here?

Your web server is shaping up! With a [cookbook][cookbook] you're now better organized. A cookbook adds structure to your work. You can now author your HTML code in its own file and use  a [template][template] resource to reference it from your recipe.

You also saw the [run-list][run-list]. The run-list lets you specify which recipes to run, and the order in which to run them. This is handy once you have lots of cookbooks, and the order in which they run is important.

## <i class="fa fa-road blueiconcolor" style="margin-right:3px;"></i> What's next

Next you'll get ready to configure a second web server by uploading your cookbook to a Chef server.

<%= link_to 'Get ready to add another server &rarr;', '/rhel/get-ready-to-add-another-server/', class: 'button radius' %>

[cookbook]: http://docs.opscode.com/essentials_cookbooks.html
[template]: http://docs.opscode.com/resource_template.html
[run-list]: http://docs.opscode.com/essentials_node_object_run_lists.html
