---
title: 'Bootstrap your node'
order: 6
layout: tutorial
description: TODO
keywords: TODO
---
[TIMETOCOMPLETE] 15

# Bootstrap your node

Any computer that is managed by a Chef server is called a _node_. We call the process that installs the Chef tools on a node and the initial check-in to the Chef server _bootstrapping_ the node.

Let's bootstrap a server and execute the web server cookbook.

## <i class="fa fa-question-circle blueiconcolor" style="margin-right:3px;"></i> All set up?

If you haven't set up a Chef server and uploaded your cookbook to it, the [previous lesson](/rhel/get-ready-to-add-another-server/) shows you how.

<sidebar style="line-height:1.7; font-size:1.0em; margin-top:30px; max-width:575px;">
<span style="line-height:2.0;"><i class="fa fa-search"></i>&nbsp;**Keep in mind these concepts as you read:**</span><br>
  <i class="fa fa-check"></i>&nbsp; a _node_ is any server in your infrastructure.<br>
  <i class="fa fa-check"></i>&nbsp; _bootstrapping_ installs the Chef tools and does an initial check-in.<br>
</sidebar>

## <i class="fa fa-tasks rediconcolor" style="margin-right:3px;"></i> Here's what you'll do

  1. [Fire up a second server](#1fireupasecondserver)
  1. [Bootstrap your server](#2bootstrapyourserver)
  1. [Confirm the result](#3confirmtheresult)

<hr>

## 1. Fire up a second server

You'll need a second RHEL or CentOS server to which you have root access.

You can use your own or use the CentOS training lab. The training lab below is different than the one you set up previously, as it doesn't have the Chef tools installed.

<%= link_to 'Access the training lab &nbsp;<i class=\'fa fa-external-link\'></i>', "http://opscode-cheflab.herokuapp.com/labs/learnchef/centos/attend/", class: 'button radius', :target => 'blank' %>

[Here's](/rhel/get-a-virtual-machine/) a reminder on how to set up the training lab. Remember to write down:

  * The server's external hostname or IP address.
  * The SSH username and password

## 2. Bootstrap your server

Run this command to bootstrap your node. Replace <codeinline>ADDRESS</codeinline> with your server's FQDN or IP address, and <codeinline>USER</codeinline> and <codeinline>PASSWORD</codeinline> with your root credentials.

```bash
# ~/chef-repo
$ knife bootstrap ADDRESS --sudo --ssh-user USER --ssh-password PASSWORD --node-name nodet1 --run-list 'recipe[webserver]'
```

The optional <codeinline>--node-name</codeinline> argument uniquely identifies the node with the Chef server. Its value can be whatever you want.

## 3. Confirm the result

Open a web browser and navigate to your web server to see the result of your efforts.

![The basic home page](misc/webserver-basic-remote.png)

<hr>

# <i class="fa fa-question blueiconcolor" style="margin-right:3px;"></i> What did we see here?

The <codeinline>knife bootstrap</codeinline> command established an SSH connection to the node, installed the Chef tools, downloaded the webserver cookbook on the node, and ran it. In one command, Chef carried out most of the steps you previously dealt with manually.

## <i class="fa fa-road blueiconcolor" style="margin-right:3px;"></i> Wrap-up and what's next

Next let's spice things up and add some info about your web server on your home page.

<%= link_to 'Add dynamic configuration &rarr;', '/rhel/add-dynamic-configuration/', class: 'button radius' %>
