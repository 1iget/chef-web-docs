---
title: 'Get notified when chef-client runs'
order: 3
keywords: TODO
layout: lesson
next: {heading: Conclusion, partial: conclusion}
time_to_complete: 60 minutes
---
For this part, you'll need your workstation.

[DIAGRAM]


Chef Analytics is equipped with a powerful rules processing system that allow you to generate notifications based on any observed events in the data stream. Example of events of interest might be:

* cookbooks being uploaded
* certain environments being changed
* machines whose Chef Client runs are failing (failure to converge)
* machines whose Chef Client audit runs are failing
* Chef Client runs which have updated resources

You can send these notifications to your email, chat systems like Hipchat, or to a webhook-based service for generic integrations. For the purpose of this tutorial, we’re going to write a rule that emails us whenever a node converges -- not necessarily a rule you want in real life, but one that is sufficient to show off the power of Analytics!

## Configure a Notification

Before we begin, you’ll need to know the hostname of an SMTP server that you can send email through (and a username and password if it requires authentication).

Click on Notifications to make sure we have a destination to send our rule output to. By default, there aren’t any destinations, so let’s create one by clicking the “+” sign and selecting “E-Mail”:

![Adding an email notification](chef-analytics/add-email-notification.png)

Rename the suggested name from “New Email 1” to “send_email” by clicking the title. Then fill in some of the fields in the form with values that make sense for your company. If your SMTP server requires authentication, enter the username and password as well. Then click Save.

[COMMENT] http://aws.amazon.com/ses/

![The completed email notification setup form](chef-analytics/add-email-notification-form.png)

We’re now ready to write our first rule that will use this notification.

## Write a Rule

Rules are essentially conditional (_if this, then that_) logic for your infrastructure events. The general syntax of a rule is:

```ruby
# Untitled
rule on <message_type>
  when
    // some condition
  then
    // some action
  end
end
```

Some examples of message types are:

* `action` &ndash; an operation on the Chef Server
* `run_converge` &ndash; a Chef Client run
* `run_resource` &ndash; an individual resource
* `run_control` &ndash; a control run as part of Chef Client Audit Mode

Remember, to _converge_ a node means to run `chef-client` and bring the node towards its desired configuration.

Since we want a rule that emails us every time a node converges, we’ll want to write a rule on `run_converge` message types.

Click the **Rules** tab and click **+** to create a new rule; the rule editor pops up. Rules live within a rule group, which can have a name; we can change the name of the group to something more intuitive, like `email_on_run_converge`.

![Adding a new rule](chef-analytics/add-rule.png)

Let’s change a couple things in the boilerplate rule for the rule we want:

* Since we know we are writing a rule on converges, and not on Chef server actions, we change “rule on action” to “rule on run_converge”
* We can leave the “when” as “true” as we don’t want to set any additional conditions right now
* Under the “then” clause, we can write something like:

    `notify("send_email", "The node {{ message.run.node_name }} just converged.")``

(The complete list of fields that can be used in the rules editor can be seen in the reference documentation.)

The complete rule should look like this:

```ruby
# huh
rules 'email_me_every_converge'
  rule on run_converge
  when
    true
  then
    notify("send_email", "The node {{ message.run.node_name }} just converged.")
  end
end
```

Click **Save** and you are brought back to the list of rules.

![Saving the rule](chef-analytics/add-rule-save.png)

## Testing It Out

To test it out, you’ll need to converge, or run Chef Client on a node that is registered to your Chef Server. After this happens, you should receive an email in your inbox like the following:

[SHOW THE PURPLE BUTTON HERE]

![Adding a new rule](chef-analytics/notification-email.png)

[TIP] Run `sudo opscode-analytics-ctl tail` if it ain't workin'.

## Summary

You’ve just written your first rule with Chef Analytics. This shows off the power of the rules language and notifications, but doesn’t do anything real. There are several more example use cases that are more useful in our documentation, or you can begin looking directly at the rules language reference for more information.

We'll have more. In the meantime, check out

Joshua Timberman’s tutorials on this (maybe we should move them off the blog?)


## Exercises

Write a rule that sends a notification when a cookbook is uploaded to Chef server

Change the rule to show

Who initiated the cc run
The time the run started, completed, and its duration
whether the run failed
if the run failed, teh stacktrace

Update recipe to run only when a resource was actually updated

Make your recipe fail and show the stacktrace

Integrate with your notification system, such as HitChat. Office hours are available if you need help!
