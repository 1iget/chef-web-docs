---
title: 'Configure IIS and ASP.NET'
order: 2
layout: lesson
sections: [1, 2, 3, 4, 5]
next: {heading: Next, partial: next}
time_to_complete: 25 minutes
---
Let's start by ensuring that Internet Information Services (IIS) is installed and that it's configured to run ASP.NET applications.

In [Learn the Chef basics on Windows Server](/learn-the-basics/windows/) and [Learn to manage a Windows Server node](/manage-a-node/windows/), you wrote a basic IIS cookbook from scratch. You used the `powershell_script` resource, like this.

```ruby
# ~\chef-repo\webserver.rb
powershell_script 'Install IIS' do
  code 'Add-WindowsFeature Web-Server'
  guard_interpreter :powershell_script
  not_if "(Get-WindowsFeature -Name Web-Server).Installed"
end
```

For this project, we'll use Chef's support for [PowerShell Desired State Configuration (DSC)](https://technet.microsoft.com/en-us/library/dn249912.aspx) to configure IIS and ASP.NET. With PowerShell DSC, you define the state of the system &ndash; files, processes, services, registry keys, and so on &ndash; and the framework ensures that the actual state matches the desired state.

Although Chef and PowerShell DSC share common concepts, when you [combine them](https://www.chef.io/blog/2014/09/03/why-chef-dsc-revisited/
), you get the best that each framework has to offer. From PowerShell DSC, you get direct access to the Windows framework in a programming model you already know. Chef adds to that tools that help you inventory, analyze, and test your configurations on multiple platforms in a number of cloud and virtualized environments.

[TIP] Learn more about PowerShell DSC in [The DSC Book](https://www.penflip.com/powershellorg/the-dsc-book).
