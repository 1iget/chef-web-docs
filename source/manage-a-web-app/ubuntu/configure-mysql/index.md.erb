---
title: 'Configure MySQL'
order: 8
keywords: TODO
layout: lesson
sections: []
next: {heading: Next, partial: next}
time_to_complete: 15 minutes
---
Now let's configure MySQL. You'll install the MySQL server and client packages and start the service.

For this part, we'll use the [mysql](https://supermarket.chef.io/cookbooks/mysql) cookbook from Chef Supermarket.

[START_BOX]

## 1. Reference the mysql cookbook

We'll load the `mysql` cookbook just like we did the `apt`, `firewall`, and `httpd` cookbooks. Append a `depends` statement to <code class="file-path">metadata.rb</code>, making the entire file look like this.

```ruby
# ~/learn-chef/cookbooks/awesome_customers_ubuntu/metadata.rb
name 'awesome_customers_ubuntu'
maintainer 'The Authors'
maintainer_email 'you@example.com'
license 'all_rights'
description 'Installs/Configures awesome_customers_ubuntu'
long_description 'Installs/Configures awesome_customers_ubuntu'
version '0.1.0'

depends 'apt', '~> 2.9.2'
depends 'firewall', '~> 2.4.0'
depends 'httpd', '~> 0.3.5'
depends 'mysql', '~> 7.0.0'
```

[END_BOX]

[START_BOX]

## 2. Create the database recipe

From your <% fp('~/learn-chef') %> directory, create a recipe named `database` to hold your database configuration code.

```bash
# ~/learn-chef
$ chef generate recipe cookbooks/awesome_customers_ubuntu database
Installing Cookbook Gems:
Compiling Cookbooks...
Recipe: code_generator::recipe
  * directory[cookbooks/awesome_customers_ubuntu/spec/unit/recipes] action create (up to date)
  * cookbook_file[cookbooks/awesome_customers_ubuntu/spec/spec_helper.rb] action create_if_missing (up to date)
  * template[cookbooks/awesome_customers_ubuntu/spec/unit/recipes/database_spec.rb] action create_if_missing
    - create new file cookbooks/awesome_customers_ubuntu/spec/unit/recipes/database_spec.rb
    - update content in file cookbooks/awesome_customers_ubuntu/spec/unit/recipes/database_spec.rb from none to 5fc56b
    (diff output suppressed by config)
  * template[cookbooks/awesome_customers_ubuntu/recipes/database.rb] action create
    - create new file cookbooks/awesome_customers_ubuntu/recipes/database.rb
    - update content in file cookbooks/awesome_customers_ubuntu/recipes/database.rb from none to 6793ff
    (diff output suppressed by config)
```

[END_BOX]

[START_BOX]

## 3. Configure MySQL

Now let's install the MySQL client and service packages.

Add the following to <code class="file-path">database.rb</code>.

```ruby
# ~/learn-chef/cookbooks/awesome_customers_ubuntu/recipes/database.rb
# Configure the MySQL client.
mysql_client 'default' do
  action :create
end

# Configure the MySQL service.
mysql_service 'default' do
  initial_root_password node['awesome_customers_ubuntu']['database']['root_password']
  action [:create, :start]
end
```

The `mysql_client` and `mysql_service` resources come from the `mysql` cookbook. The `mysql_client` resource installs the client software that connects to the MySQL server. The `mysql_service` resource installs the MySQL server package, applies a basic configuration, and starts the service. You can [customize the configuration](https://github.com/chef-cookbooks/mysql#usage) if you need to.

The `mysql_service` resource takes the initial MySQL root password. To specify the password, you use the `node['awesome_customers_ubuntu']['database']['root_password']` node attribute that you set up in the previous part. When you run the cookbook through Test Kitchen, the password is "mysql\_root_password". When you run the cookbook on a node, the password is randomly generated.

[END_BOX]

[START_BOX]

## 4. Set the database recipe to run

Append an `include_recipe` statement to your default recipe, <code class="file-path">default.rb</code>. The entire file will look like this.

```ruby
include_recipe 'apt::default'
include_recipe 'awesome_customers_ubuntu::firewall'
include_recipe 'awesome_customers_ubuntu::web_user'
include_recipe 'awesome_customers_ubuntu::web'
include_recipe 'awesome_customers_ubuntu::database'
```

[END_BOX]

[START_BOX]

## 5. Apply and verify the configuration

Let's apply the configuration and verify that MySQL is properly configured. Run `kitchen converge` to apply the `awesome_customers_ubuntu` cookbook.

```bash
# ~/learn-chef/cookbooks/awesome_customers_ubuntu
$ kitchen converge
-----> Starting Kitchen (v1.7.2)
-----> Converging <default-ubuntu-1404>...
       Preparing files for transfer
       Preparing dna.json
       Resolving cookbook dependencies with Berkshelf 4.3.2...
       Removing non-cookbook files before transfer
       Preparing validation.pem
       Preparing client.rb
-----> Chef Omnibus installation detected (install only if missing)
       Transferring files to <default-ubuntu-1404>
       Starting Chef Client, version 12.9.38
       resolving cookbooks for run list: ["awesome_customers_ubuntu::default"]
       Synchronizing Cookbooks:
         - awesome_customers_ubuntu (0.1.0)
         - firewall (2.4.0)
         - apt (2.9.2)
         - httpd (0.3.5)
         - chef-sugar (3.3.0)
         - compat_resource (12.9.1)
         - mysql (7.0.0)
         - yum-mysql-community (0.2.0)
         - smf (2.2.8)
         - yum (3.10.0)
         - rbac (1.0.3)
       Installing Cookbook Gems:
       Compiling Cookbooks...
[...]
       Recipe: awesome_customers_ubuntu::database
         * mysql_client[default] action create
           * apt_package[default :create mysql-client-5.5] action install
             - install version 5.5.49-0ubuntu0.14.04.1 of package mysql-client-5.5
           * apt_package[default :create libmysqlclient-dev] action install
             - install version 5.5.49-0ubuntu0.14.04.1 of package libmysqlclient-dev

         * mysql_service[default] action create
           * apt_package[default :create mysql-server-5.5] action install
             - install version 5.5.49-0ubuntu0.14.04.1 of package mysql-server-5.5
           * apt_package[perl-Sys-Hostname-Long] action nothing (skipped due to action :nothing)
           * execute[Initial DB setup script] action nothing (skipped due to action :nothing)
           * service[default :create mysql] action stop
             - stop service service[default :create mysql]
           * service[default :create mysql] action disable
             - disable service service[default :create mysql]
[...]
       Running handlers:
       Running handlers complete
       Chef Client finished, 28/217 resources updated in 43 seconds
       Finished converging <default-ubuntu-1404> (0m51.11s).
-----> Kitchen is finished. (0m52.11s)
```

Now let's verify the database configuration. Start by logging in to your instance.

```bash
# ~/learn-chef/cookbooks/awesome_customers_ubuntu
$ kitchen login
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 4.2.0-34-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
Last login: Tue Apr 26 02:00:01 2016 from 10.0.2.2
vagrant@default-ubuntu-1404:~$
```

First, verify that the MySQL service is running.

```bash
vagrant@default-ubuntu-1404:~$ sudo netstat -tap | grep mysql
tcp        0      0 *:mysql                 *:*                     LISTEN      15688/mysqld
```

You'll see that the `mysqld` service is in the `LISTEN` state.

Now verify that you can access the databases that come preconfigured with the installation. Recall that for local development using Test Kitchen, you provided "mysql\_root_password" as the MySQL root password.

```bash
vagrant@default-ubuntu-1404:~$ mysqlshow -h 127.0.0.1 -uroot -pmysql_root_password
+--------------------+
|     Databases      |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
```

Looks good! Now log out.

```bash
# ~
vagrant@default-ubuntu-1404:~$ logout
Connection to 127.0.0.1 closed.
```

[END_BOX]
