---
title: 'Perform prerequisites'
order: 1
layout: tutorials/platforms/environments/overview/lesson/layout
sections: []
headings: [
  { label: "Chef's test and repair approach", href: '#learnaboutchef39stestandrepairapproach' },
  { label: "Working with a Chef server", href: '#getstartedwithchefserver' },
  { label: 'Local development using Test Kitchen', href: '#learnaboutlocaldevelopmentusingtestkitchen' },
  { label: 'Working with the Chef compliance scanner', href: '#getstartedwiththechefcompliancescanner' }
]
---
This tutorial comes in two parts.

In the first part, [Remediate the compliance failure on a local virtual machine](/tutorials/compliance-remediate/ubuntu/bring-your-own-system/remediate-the-compliance-failure-on-a-local-virtual-machine/), you'll replicate and remediate the failure of the **Ensure Firewall is active** rule on a local virtual machine.

In the second part, [Remediate the compliance failure on your node](/tutorials/compliance-remediate/ubuntu/bring-your-own-system/remediate-the-compliance-failure-on-your-node/), you'll apply the remediation to your node and rerun the compliance scan to verify that the node's firewall configuration satisfies the **Ensure Firewall is active** rule.

Both parts use Chef and require a basic understanding of:

* Chef's _test and repair_ approach.
* working with a Chef server.
* local development using Test Kitchen.
* working with the Chef compliance scanner.

Use the following sections as a guide to learning the prerequisite skills.

[START_BOX]

## Learn about Chef's test and repair approach

If you're new to Chef, we recommend that you first work through the [Learn the Chef basics](/tutorials/learn-the-basics/ubuntu/) tutorial. You'll learn about Chef's test and repair approach by writing a Chef cookbook that brings up a basic web server configuration.

You can use the Ubuntu system that you [scanned in the previous tutorial](/tutorials/compliance-assess/ubuntu/bring-your-own-system/get-a-node-to-scan), bring up a fresh system, or use a free Ubuntu virtual machine that we provide that runs in your browser.

<%= link_to("Start the Learn the Chef basics tutorial <i class='fa fa-angle-double-right'></i>", "/tutorials/learn-the-basics/ubuntu/", class: 'button radius cta cta') %>

[END_BOX]

[START_BOX]

## Get started with Chef server

If you don't have a Chef server, the [Manage a node](/tutorials/manage-a-node/ubuntu/) tutorial gets you started. You'll learn how Chef server acts as a central repository for your cookbooks as well as for information about every node it manages.

You'll bring up a Chef server, either through our hosted service or in your own environment, and learn how to manage an Ubuntu server remotely from your workstation.

In the later part of this tutorial, you'll bootstrap your Ubuntu node to the Chef server. This enables your node to pull down the remediation cookbook you'll build in the next part.

<%= link_to("Start the Manage a node tutorial <i class='fa fa-angle-double-right'></i>", "/manage-a-node/ubuntu/", class: 'button radius cta cta') %>

[END_BOX]

[START_BOX]

## Learn about local development using Test Kitchen

If you're not familiar with local development using Test Kitchen, check out the [Get started with Test Kitchen](/tutorials/local-development/ubuntu/) tutorial.

You'll learn how to use Test Kitchen along with the virtualization tools VirtualBox and Vagrant to develop and verify your infrastructure code _before_ you apply the configuration to your production servers.

<%= link_to("Start the Get started with Test Kitchen tutorial <i class='fa fa-angle-double-right'></i>", "/local-development/ubuntu/", class: 'button radius cta cta') %>

As an optional exercise, the [Develop a web app cookbook](/manage-a-web-app/ubuntu/) tutorial provides additional hands-on practice with local development. Here, you configure a basic but complete web application using Test Kitchen.

The _Develop a web app cookbook_ tutorial introduces many new Chef concepts, and can take some time to complete. To save time, you can perform the [quickstart](/manage-a-web-app/ubuntu/bring-up-the-web-app-using-test-kitchen/) to bring up the final configuration on a local test instance in just a few minutes and then read through the tutorial to see how it's built.

<%= link_to("Start the Develop a web app cookbook tutorial <i class='fa fa-angle-double-right'></i>", "/manage-a-web-app/ubuntu/", class: 'button radius cta cta') %>

[END_BOX]

[START_BOX]

## Get started with the Chef compliance scanner

For this tutorial, you'll need a Chef compliance scanner installation and an Ubuntu 14.04 node that leaves Ubuntu's default firewall, UFW, inactive.

Be sure to complete the previous tutorial, [Scan for compliance](/tutorials/compliance-assess/ubuntu/), before starting this one.

[COMMENT] This tutorial uses Chef server and Chef compliance scanner as standalone components. Although not required,  you can later [integrate Chef Complance with Chef server](https://docs.chef.io/integrate_compliance_chef_server.html) to enable Chef compliance scanner users to log in using their Chef server credentials and enable nodes to download Chef compliance scanner profiles, run them, and send the results back to Chef compliance scanner.

[END_BOX]

<% next_page(current_page) do %>

Now that you have the basic skills you'll need, let's remediate the failure of the **Ensure Firewall is active** rule on a local virtual machine using Test Kitchen.

<% end %>
