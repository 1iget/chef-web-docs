<h2>Exercises</h2>

<% exercise_question(<<-EOH
1. Why is it important to verify your remediation code first on a local test instance?
EOH
) %>

<% accordion('question1', 'Answer') do %>

<%= partial '/tutorials/compliance-remediate/windows/virtualbox/remediate-the-compliance-failure-on-your-node/exercises/answers/1' %>

<% end %>

<hr>

<% exercise_question(<<-EOH
2. If the registry key you set in this tutorial is changed or removed by some other process, what would you expect to happen the next time <code>chef-client</code> runs on your node?
EOH
) %>

<% accordion('question2', 'Answer') do %>

<% markdown do %>

Chef's test and repair approach would ensure that the registry key is recreated, restoring the system to the desired state. If the registry key already exists, Chef does nothing.

Configuration drift can bring your systems out of compliance. Running <code>chef-client</code> regularly or in response to a change helps ensure that your systems remain in compliance.

<% end %>

<% end %>

<hr>

<% exercise_question(<<-EOH
3. Repeat the remediation process to resolve a second compliance failure on your node.
EOH
) %>

You might consider remediating a failure that's part of your existing compliance requirements. For learning purposes, you can modify your existing <code>admpwd</code> cookbook even if the compliance concern is not related to password management.
<br>
<br>
<% accordion('question3', 'Answer') do %>

<%= partial '/tutorials/compliance-remediate/windows/virtualbox/remediate-the-compliance-failure-on-your-node/exercises/answers/3' %>

<% end %>
