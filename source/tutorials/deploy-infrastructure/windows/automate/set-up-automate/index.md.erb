---
title: 'Get set up with Chef Automate'
order: 1
layout: tutorials/platforms/environments/overview/lesson/layout
time_to_complete: 30 minutes
snippet_path: deploy-infrastructure/windows/automate/set-up-your-chef-server
snippet_workstation: ubuntu
headings: [
  { label: "The systems you'll need", href: '#thesystemsyou39llneedforthistutorial' },
  { label: '1. Gather information', href: '#step2' },
  { label: '2. Enable network access', href: '#step3' },
  ]
---
In this part, you'll bring up a Chef Automate installation and configure network settings for use with Chef Automate's workflow feature.

If you've gone through the [Manage a node](/tutorials/manage-a-node/windows/automate/) tutorial, you've already brought up a Chef Automate installation and used Chef to configure a web server remotely from your workstation. Chef Automate's workflow feature requires additional systems and setup to enable changes to move through Chef Automate's integrated pipeline.

In this part and the parts that follow, we'll refer to the [installation guide](https://docs.chef.io/install_chef_automate.html).

You can review the guide to familiarize yourself with the process before you proceed. Let's start by looking at the systems you'll need for this tutorial.

[START_BOX]

## The systems you'll need for this tutorial

The systems that make up Chef Automate reflect the types of software you want to deliver. For example, if you use Chef to manage your infrastructure, your system may include a private [Chef Supermarket](https://docs.chef.io/supermarket.html) server that exists behind your firewall.

The setup you'll need for this tutorial includes the minimum number of systems that are typical for many users. Here's a diagram:

<img src="/assets/images/automate/automate-scenario-architecture.svg" style="width: 100%;" alt="An example Chef Automate installation" />

The diagram shows these components:

**Chef Automate** &ndash; This includes the Chef Automate server and Chef server. Chef server acts as a hub of information. The Chef server stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is managed by Chef. Chef Automate provides insights into your infrastructure. Its workflow feature provides a pipeline for continuous delivery of infrastructure and applications.

**Runners** &ndash; To use Chef Automate's workflow feature, you'll need one or more runners, sometimes called _build nodes_. As a change moves through the Chef Automate pipeline, runners execute jobs scheduled by Chef Automate. Runners typically exist as their own servers. If you set up multiple runners, phases can run in parallel.

**Acceptance, Union, Rehearsal, and Delivered environments** &ndash; Chef Automate deploys build artifacts, or the pipeline's final output, to these environments. The output of your pipeline informs you how you set up your environments.

For example, you might deploy a SQL Server database to a Windows Server environment. Or you might deploy web content and other media to an Amazon S3 bucket. In this tutorial, you'll publish a cookbook that configures a basic web application on Windows Server. Therefore, the Windows Server runtime environment exists for each of these stages because the artifacts produced in the Build stage need to be deployed to each of them.

Each environment is named for the stage in which it is used. For example, the union environment is used in the Union stage of the pipeline. These environments typically resemble your production environment and can often be part of your production environment. Delivered is the final environment. What "delivered" means for your system is up to you. It could mean deploying the change so that it is live and receiving production traffic, or it might mean deploying the change to a staging or preproduction environment that is later promoted manually or through some other mechanism.

**Your workstation** &ndash; Workstations are typically either a laptop or desktop computer. A workstation can run Windows, Mac OS X, or Linux. From your workstation, you access Chef Automate using either the command line or the web interface. Other common tasks include creating projects, writing build cookbooks, submitting new features to the pipeline, and reviewing and approving others' changes.

[END_BOX]

[START_BOX]

## 1. Bring up a Chef Automate instance

You'll bring up runners and infrastructure to run your cookbook later in this tutorial. Before you begin, you'll need a Chef Automate installation and a workstation that is set up to use it.

If you don't already have a Chef Automate installation, we recommend that you work through the [Manage a node](/tutorials/manage-a-node/windows/automate/) tutorial first, then come back here.

The _Manage a node_ tutorial shows you Chef Automate's visibility feature, which enables you to visualize the status of your nodes. In this tutorial, you'll extend this setup to use Chef Automate's workflow feature to deliver changes more automatically.

<%= link_to("Start the Manage a node tutorial <i class='fa fa-angle-double-right'></i>", "/tutorials/manage-a-node/windows/automate/", class: 'button radius cta cta') %>

[END_BOX]

[START_BOX]

## 2. Gather information about your Chef Automate installation

To prepare for the parts that follow, gather the following details about your Chef Automate installation. You [established these details](/tutorials/manage-a-node/windows/automate/set-up-your-chef-server/) during the installation phase of the _Manage a node_ tutorial.

* **Your Chef Automate server's and Chef server's FQDN**, for example, "chef-automate.test" or "ec2-54-205-85-17.compute-1.amazonaws.com".
* **Your Chef Automate username and password**. If you used the setup script we provide, the username is **user1** and the password is **P4ssw0rd!**.

From your workstation, you'll continue with the setup you used in the _Manage a node_ tutorial. Open a terminal window and `cd` to your Chef working directory. In the _Manage a node_ tutorial, we suggested you work from the <% fp '~/learn-chef' %> directory.

```bash
$ cd ~/learn-chef
```

If you used a different directory, just remember to replace the path names shown in this tutorial with your own.

You may also want to [log in to the Chef Automate dashboard](/tutorials/manage-a-node/windows/automate/set-up-your-chef-server#step9) now and have your browser window handy for the parts that follow.

[END_BOX]

[START_BOX]

## 3. Enable inbound network access

Here, you'll enable additional ports on your Chef Automate server and your Chef server through the firewall or security group.

### Chef Automate

For this tutorial, you need to modify your Chef Automate server's firewall to enable [inbound network access](https://docs.chef.io/install_chef_automate.html#node-hostnames-and-network-access) over TCP on port 8989 (Chef Automate Git).

Chef Automate uses revision control to manage your project's source code. Chef Automate integrates with revision control systems such as <a href="https://docs.chef.io/integrate_delivery_github.html">GitHub</a> and <a href="https://docs.chef.io/integrate_delivery_bitbucket.html">Bitbucket</a>. Chef Automate also provides its own Git server, which you'll use in this tutorial. Chef Automate's Git server requires inbound network access on port 8989.

### Chef server

You also need to ensure that your Chef server provides inbound network access on ports 10000-10003 (push jobs).

Later in this tutorial, you'll learn how Chef Automate uses <i>push jobs</i> to run <code>chef-client</code> on your infrastructure nodes to apply configuration changes. Ports 10000-10003 are required to run push jobs.

-- --

The way you set up firewall rules depends on which platform you're running Chef Automate and which service you use to manage firewall rules. Many default configurations permit inbound network access on all ports. Here's an example that uses `iptables` to list the active firewall rules.

```bash
$ iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
```

If you're running Chef Automate in the cloud, you may also need to configure network access through your cloud provider. For example, on Amazon EC2, you can [add security group rules](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#adding-security-group-rule) that permits inbound access on ports 8989 and 10000-10003. For learning purposes, you can permit traffic from all sources (0.0.0.0) &ndash; authentication is still required to access services. In practice, you might restrict inbound traffic to certain sources, such as those on your company's network or a [VPC](https://aws.amazon.com/vpc/).

[END_BOX]

<% next_page(current_page) do %>

Next, you'll extend your workstation setup to be able to push configuration changes through Chef Automate's integrated pipeline.

<% end %>
