---
title: 'Set up a virtual machine to manage'
order: 1
description: "Set up your Chef environment."
keywords: TODO
layout: tutorials/platforms/environments/overview/lesson/layout
time_to_complete: 60 minutes
snippet_path: learn-the-basics/rhel/virtualbox/set-up-a-machine-to-manage
snippet_workstation: ubuntu
headings: [
  { label: '1. Ensure your workstation supports CPU virtualization', href: '#step1' },
  { label: "2. Verify your SSH client", href: '#step2' },
  { label: '3. Install VirtualBox', href: '#step3' },
  { label: '4. Install Vagrant', href: '#step4' },
  { label: '5. Download a CentOS 7 Vagrant box', href: '#step5' },
  { label: '6. Bring up a CentOS 7 instance', href: '#step6' },
  { label: "7. Install the Chef DK on your CentOS instance", href: '#step7' },
  { label: "8. Prepare a text editor on your CentOS instance", href: '#step8' },
  { label: "9. Prepare a text editor", href: '#step9' },
  { label: 'Cleaning up', href: '#cleaningup' }
  ]
---
<%= partial '../../shared/get-set-up/intro' %>

In this part you'll use [VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/) to bring up a CentOS 7 virtual machine on your workstation. You'll also learn how to [clean up](#cleaningup) your virtual machine when you're done with this tutorial.

[COMMENT] In the Learn Chef tutorials, you'll use CentOS to build Chef skills around managing your Red Hat Enterprise Linux servers. CentOS is a free computing platform that's functionally compatible with Red Hat Enterprise Linux.

<% accordion('test-configuration', 'Test configuration', true) do %>

<% markdown do %>

Chef integrates with other popular software such as VirtualBox and Vagrant. However, Chef does not maintain VirtualBox or Vagrant. If you're having trouble getting VirtualBox or Vagrant working, check the [Vagrant issues](https://github.com/mitchellh/vagrant/issues) and [VirtualBox Bugtracker](https://www.virtualbox.org/wiki/Bugtracker) pages. We're also happy to help as best we can. We recommend that you install the components as directed in the tutorial, using the specific versions that have been tested.

<% render_machine_config('snippets/learn-the-basics/rhel/virtualbox/machine_config.md') %>

<% end %>

<% end %>

[START_BOX]

## 1. Ensure your workstation supports CPU virtualization

Running local virtual machines requires relatively powerful hardware. Before you begin, ensure that:

* your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS.
* your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation)  for running VirtualBox.
* your workstation has at least 5GB of free disk space. This will enable you to download the base image and run a few virtual machine instances.
* your workstation has at least 512MB memory available per virtual machine instance.
* nested virtualization is enabled if you're using another virtual machine as your workstation through a program such as VMware Fusion.

If you are unable to run virtual machines on your workstation, you can [try a different option](/tutorials/learn-the-basics/rhel/) for this tutorial.

[END_BOX]

[START_BOX]

## 2. If you're running Windows &ndash; verify your SSH client

In this tutorial, you'll connect to your Linux instance over SSH. To do so, you'll need an SSH client. Mac OS and most Linux distributions come with an SSH client. On Windows, you need to install one.

The easiest way to set up an SSH client is to install the Chef Development Kit (Chef DK) on your workstation. Chef DK version 0.15 and later comes with [Git for Windows](https://git-scm.com/download/win), which includes an SSH client.

Installing the Chef DK now also prepares you for the next tutorial, where you'll use Chef to manage a server remotely from your workstation.

There are two ways to install the Chef DK on Windows.

1. [Download and run the installer](https://downloads.chef.io/chef-dk/) from the Chef downloads page.
2. Run the installer from PowerShell.

<% command_snippet(page: current_page, path: 'install-the-chef-dk/install-chefdk', workstation: 'windows') %>

After you install the Chef DK, verify that Git and an SSH client are set up properly.

First, open the **Chef Development Kit** shortcut from the desktop or **Start** menu. Open the shortcut as **Adminstrator**.

![](misc/chefdk-desktop-shortcut-windows.png)

Next, run these commands.

<% command_snippet(page: current_page, path: 'verify-your-ssh-client/git--version', workstation: 'windows') %>

<% command_snippet(page: current_page, path: 'verify-your-ssh-client/ssh-no-args', workstation: 'windows', features: [:stdin, :stderr]) %>

Keep your **Chef Development Kit** window open for the next part.

[END_BOX]

[START_BOX]

## 3. Install VirtualBox

<%= partial 'layouts/install_virtualbox' %>

### Verify the installation

Now run the following command to verify that VirtualBox is installed.

<% command_snippet(page: current_page, path: 'install-virtualbox/vboxmanage--version') %>

On Windows, if the command fails, you may need to update your `PATH` environment variable.

By default, VirtualBox is installed to <code class="file-path">C:\Program Files\Oracle\VirtualBox</code> on Windows. Run these commands to add VirtualBox to your system path.

```ps
$ $path = [Environment]::GetEnvironmentVariable("PATH", "Machine")
$ $vbox_path = "C:\Program Files\Oracle\VirtualBox"
$ [Environment]::SetEnvironmentVariable("PATH", "$path;$vbox_path", "Machine")
```

Then run `VBoxManage --version` a second time.

[END_BOX]

[START_BOX]

## 4. Install Vagrant

<%= partial 'layouts/install_vagrant' %>

### Verify the installation

Now run the following to verify that Vagrant is installed.

<% command_snippet(page: current_page, path: 'install-vagrant/vagrant--version') %>

Like VirtualBox, you may need to update your `PATH` environment variable if the command fails on Windows.

By default, Vagrant is installed to <code class="file-path">C:\HashiCorp\Vagrant\bin</code> on Windows. Run these commands to add Vagrant to your system path.

```ps
$ $path = [Environment]::GetEnvironmentVariable("PATH", "Machine")
$ $vagrant_path = "C:\HashiCorp\Vagrant\bin"
$ [Environment]::SetEnvironmentVariable("PATH", "$path;$vagrant_path", "Machine")
```

Then run `vagrant --version` a second time.

[END_BOX]

[START_BOX]

## 5. Download a CentOS 7 Vagrant box

The next step is to download a base virtual machine image, called a _box_. Here's how to download a CentOS 7.2 box.

<% command_snippet(page: current_page, path: 'download-a-centos-72-vagrant-box/vagrant-box-add-centos-72') %>

This command downloads a CentOS 7.2 box for Vagrant that's compatible with VirtualBox.

The `bento/centos-7.2` part specifies to retrieve the box from [HashiCorp's Atlas](https://atlas.hashicorp.com/bento/boxes/centos-7.2). The `bento` part refers to [Bento](http://chef.github.io/bento/), a Chef project that provides Vagrant boxes for many common platforms.

[WINDOWS] [Due to an issue with newer versions of Vagrant](https://github.com/mitchellh/vagrant/issues/6852), if you're using a Windows workstation and the command fails with a blank error message, [you may need to install the Microsoft Visual C++ 2010 SP1 Redistributable Package](https://www.microsoft.com/en-us/download/details.aspx?id=8328). Then try the command again.

[END_BOX]

[START_BOX]

## 6. Bring up a CentOS 7 instance

Next, run these commands to bring up a CentOS 7.2 instance.

<% command_snippet(page: current_page, path: 'bring-up-a-centos-72-instance/vagrant-init') %>

<% command_snippet(page: current_page, path: 'bring-up-a-centos-72-instance/vagrant-up') %>

The [vagrant init](https://www.vagrantup.com/docs/cli/init.html) command creates a configuration file, named <% fp 'Vagrantfile' %>, which specifies memory, CPU, and network settings for the virtual machine.

The [vagrant up](https://www.vagrantup.com/docs/cli/up.html) command uses the <% fp 'Vagrantfile' %> to create and configure the virtual machine instance.

[END_BOX]

[START_BOX]

## 7. Connect to your CentOS instance

Next, from the directory where you ran `vagrant up`, run `vagrant ssh` to connect to your instance.

<% command_snippet(page: current_page, path: 'connect-to-instance/vagrant-ssh', features: :stdin) %>

[END_BOX]

[START_BOX]

## 8. Install the Chef DK on your CentOS instance

Remember, for learning purposes, you'll start by managing a server directly. To do that, you'll install the Chef DK on your virtual machine. The Chef DK provides tools that enable you to manage your servers remotely from your workstation. But it also provides tools that allow you to configure a machine directly.

From your SSH connection, run this from the command line to install the Chef DK.

<% command_snippet(path: 'learn-the-basics/rhel/virtualbox/set-up-your-own-server/install-the-chef-dk/install-chefdk', workstation: 'centos', features: [:stdin, :stderr, :stdout]) %>

The `-c` and `-v` arguments specify the Chef DK version this tutorial was last tested with.

[END_BOX]

[START_BOX]

## 9. Prepare a text editor on your CentOS instance

Because Chef uses code to express infrastructure policy, it's important that you use a text editor that provides features such as syntax highlighting and line numbering.

From your SSH connection, install a text editor now. Because you're accessing your server from an SSH connection, choose a command-line text editor such as `emacs`, `nano`, or `vim`.

If you're new to using command-line text editors on CentOS, here are some resources to help get you started.

<% accordion('emacs-gs', 'Emacs') do %>

<%= partial 'layouts/partials/emacs_gs_rhel' %>

<% end %>

<% accordion('nano-gs', 'Nano') do %>

<%= partial 'layouts/partials/nano_gs_rhel' %>

<% end %>

<% accordion('vim-gs', 'Vim') do %>

<%= partial 'layouts/partials/vim_gs_rhel' %>

<% end %>

[END_BOX]

[START_BOX]

## Cleaning up

After you complete the tutorial, you can destroy your virtual machine like this. Remember to run this command from the directory where you ran `vagrant up`.

<% command_snippet(page: current_page, path: 'cleaning-up/vagrant-destroy') %>

[END_BOX]

<% next_page(current_page) do %>

Now that you have your virtual machine with the Chef DK and a text editor set up, let's use Chef to configure a file, a kind of _resource_, on it.

<% end %>
