---
title: 'Set up a machine to manage'
order: 1
description: "Set up your Chef environment."
keywords: TODO
layout: lesson
time_to_complete: 60 minutes
snippet_path: learn-the-basics/rhel/virtualbox/set-up-a-machine-to-manage
---
<%= partial '../../shared/get-set-up/intro' %>

[VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/) are free virtualization tools that enable you to manage virtual machine instances on your workstation.

You'll follow these steps to bring up a CentOS 7 instance:

1. [Ensure your workstation supports CPU virtualization](#step1)
1. [Install VirtualBox](#step2)
1. [Install Vagrant](#step3)
1. [Download a CentOS 7.2 Vagrant box](#step4)

[START_BOX]

## A note about versions

The sample output you see might differ depending on your workstation's operating system. Differing software versions can also affect the output that you see.

Chef integrates with other popular software such as VirtualBox and Vagrant. However, Chef does not maintain that software. If you're having trouble getting VirtualBox or Vagrant working, check the [Vagrant issues](https://github.com/mitchellh/vagrant/issues) and [VirtualBox Bugtracker](https://www.virtualbox.org/wiki/Bugtracker) pages. We're also happy to help as best we can.

<% render_machine_config('snippets/learn-the-basics/rhel/virtualbox/machine_config.md') %>

[END_BOX]

[START_BOX]

## 1. Ensure your workstation supports CPU virtualization

Running local virtual machines requires relatively powerful hardware. Before you begin, ensure that:

* your workstation supports and is configured to use CPU virtualization. This setting is typically configured through your system's BIOS.
* your workstation meets the [system requirements](https://www.virtualbox.org/wiki/End-user_documentation) requirements for running VirtualBox.
* your workstation has at least 5GB of free disk space. This will enable you to download the base image and run a few virtual machine instances.
* your workstation has at least 256MB memory available per virtual machine instance.
* nested virtualization is enabled if you're using another virtual machine as your workstation through a program such as VMWare Fusion.

If you are unable to run virtual machines on your workstation, you can [try a different option](/tutorials/#learn-the-basics) for this tutorial.

[END_BOX]

[START_BOX]

## 2. Install VirtualBox

<%= partial 'layouts/install_virtualbox' %>

#### Verify the installation

Now run the following command to verify that VirtualBox is installed.

<% command_snippet(page: current_page, path: 'install-virtualbox/vboxmanage--version') %>

[END_BOX]

[START_BOX]

## 3. Install Vagrant

<%= partial 'layouts/install_vagrant' %>

#### Verify the installation

Now run the following to verify that Vagrant is installed.

<% command_snippet(page: current_page, path: 'install-vagrant/vagrant--version') %>

[END_BOX]

[START_BOX]

## 4. Download a CentOS 7.2 Vagrant box

The next step is to download a base virtual machine image, called a _box_. Here's how to download a CentOS 7.2 box.

```bash
$ vagrant box add centos-7.2 http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-7.2_chef-provisionerless.box
==> box: Box file was not detected as metadata. Adding it directly...
==> box: Adding box 'centos-7.2' (v0) for provider:
    box: Downloading: http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-7.2_chef-provisionerless.box
==> box: Successfully added box 'centos-7.2' (v0) for 'virtualbox'!
```

<% command_snippet(page: current_page, path: 'download-a-centos-72-vagrant-box/vagrant-box-add-centos-72') %>

http://chef.github.io/bento/

[WINDOWS] [Due to an issue with newer versions of Vagrant](https://github.com/mitchellh/vagrant/issues/6852), if you're using a Windows workstation and the command fails with a blank error message, [you may need to install the Microsoft Visual C++ 2010 SP1 Redistributable Package](https://www.microsoft.com/en-us/download/details.aspx?id=8328). Then try the command again.

[END_BOX]

[START_BOX]

## 5. Bring up a CentOS 7.2 instance

Next, run these commands to bring up a CentOS 7.2 instance.

```bash
$ vagrant init centos-7.2
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
$ vagrant up --provider=virtualbox
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'centos-7.2'...
==> default: Matching MAC address for NAT networking...
[...]
==> default: Machine booted and ready!
GuestAdditions 5.0.16 running --- OK.
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => /private/tmp
```

<% command_snippet(page: current_page, path: 'bring-up-a-centos-72-instance/vagrant-init') %>

<% command_snippet(page: current_page, path: 'bring-up-a-centos-72-instance/vagrant-up') %>

[END_BOX]

[START_BOX]

## Z. Windows workstation only &ndash; verify your SSH client

INSTALL FROM DL SITE OR IRW

In this tutorial, you'll connect to your Linux instance over an SSH connection. To do so, you'll need an SSH client. Mac OS and most Linux distributions come with an SSH client. On Windows, you need to install one.

The easiest way to set up an SSH client is to [install the Chef Development Kit](https://downloads.chef.io/chef-dk/) (Chef DK) on your workstation. Chef DK version 0.15 and later comes with [Git for Windows](https://git-scm.com/download/win), which includes an SSH client.

Installing the Chef DK now will prepare you for the next tutorial, where you'll use Chef to manage a server remotely from your workstation.

After you install the Chef DK, verify that Git and an SSH client are set up properly. Open the **Chef Development Kit** shortcut from the desktop or **Start** menu and then run these commands.

Keep your **Chef Development Kit** window open for the next part.

[END_BOX]

[START_BOX]

## Y. Connect to your CentOS instance

Next, run `vagrant ssh` to connect to your instance.

```bash
$ vagrant ssh
[vagrant@localhost ~]$ logout
Connection to 127.0.0.1 closed.
```

<% command_snippet(page: current_page, path: 'connect-to-instance/vagrant-ssh', features: :stdin) %>

[END_BOX]

[START_BOX]

## Y. Install the Chef DK

Remember, for learning purposes, you'll start by managing a server directly. To do that, you'll install the Chef DK on your virtual machine. The Chef DK provides tools that enable you to manage your servers remotely from your workstation. But it also provides tools that allow you to configure a machine directly.

From your SSH connection, run this from the command line to install the Chef DK.

```bash
$ curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P chefdk
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 17892  100 17892    0     0  18700      0 --:--:-- --:--:-- --:--:-- 34080
Downloading chefdk  for el...
[...]
Preparing...                ########################################### [100%]
   1:chefdk                 ########################################### [100%]
Thank you for installing Chef Development Kit!
```

<% command_snippet(path: 'learn-the-basics/rhel/virtualbox/set-up-your-own-server/install-the-chef-dk/install-chefdk-linux') %>

The `-c` and `-v` arguments specify the Chef DK version this tutorial was last tested with. You can omit these arguments when you later set up your workstation for Chef development.

[END_BOX]

[START_BOX]

## X. Prepare a text editor

Because Chef uses code to express infrastructure policy, it's important that you use a text editor that provides features such as syntax highlighting and line numbering.

From your SSH connection, install a text editor now. Because you're accessing your server from an SSH connection, choose a command-line text editor such as `emacs`, `nano`, or `vim`.

If you're new to using command-line text editors on CentOS, here are some resources to help get you started.

<% accordion('emacs-gs', 'Emacs') do %>

<%= partial 'layouts/partials/emacs_gs_rhel' %>

<% end %>

<% accordion('nano-gs', 'Nano') do %>

<%= partial 'layouts/partials/nano_gs_rhel' %>

<% end %>

<% accordion('vim-gs', 'Vim') do %>

<%= partial 'layouts/partials/vim_gs_rhel' %>

<% end %>

[END_BOX]

[START_BOX]

## Cleaning up

After you complete the tutorial, you can destroy your virtual machine like this.

```bash
$ vagrant destroy
    default: Are you sure you want to destroy the 'default' VM? [y/N] y
==> default: Forcing shutdown of VM...
==> default: Destroying VM and associated drives...
```

<% command_snippet(page: current_page, path: 'cleaning-up/vagrant-destroy') %>

[END_BOX]
