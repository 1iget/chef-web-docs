---
title: 'Get set up with Chef Automate'
order: 2
layout: tutorials/platforms/environments/overview/lesson/layout
time_to_complete: 2 hours
snippet_path: manage-a-node/rhel/aws-automate/set-up-your-chef-server
snippet_workstation: ubuntu
headings: [
  { label: '1. Review the installation guide', href: '#step1' },
  { label: '2. Bring up systems', href: '#step2' },
  { label: '3. Install Chef server', href: '#step3' },
  { label: '4. Install Chef Automate', href: '#step4' },
  { label: '5. Set up your workstation', href: '#step5' },
  { label: '6. Log in to the Chef Automate dashboard', href: '#step6' }
  ]
---
[HEADLINE] Chef server acts as a central repository for your cookbooks as well as for information about every node it manages.<br>The `knife` command enables you to communicate with the Chef server from your workstation.

Chef provides a fully licensed Amazon Machine Images (AMI) for the Chef server that can be launched from the AWS Marketplace. Here you'll bring up the Chef server AMI and set up your workstation to communicate with the Chef server.

Recall that there are two ways to work with a Chef server.

1. Install Chef server on your own infrastructure.
2. Sign up for hosted Chef, a Chef server that we manage for you.

In production, the decision to use hosted Chef or manage your own Chef server depends on your organization's requirements and preferences.

If you're new to Chef, you might consider first working through this tutorial [using hosted Chef](/tutorials/manage-a-node/rhel/hosted/) to understand how Chef server works. You can then come back and install Chef server from the AWS Marketplace.

[START_BOX]

## 1. Review the installation guide

The Chef documetation explains the steps required to bring up the Chef Automate. We recommend that you [review the installation guide](https://docs.chef.io/install_chef_automate.html) first so you understand the procedures.

Also be sure to [review the troubleshooting section](https://docs.chef.io/install_chef_automate.html#troubleshooting). If you get stuck, [Discourse](https://discourse.chef.io/c/automate) is a great place to ask the community for help.

The following sections outline the minimal setup that's required for this tutorial. You can add [additional components](https://docs.chef.io/workflow.html#components), such as build nodes or a Chef Supermarket server, as a later time.

[END_BOX]

[START_BOX]

## 2. Bring up systems to run Chef Automate and Chef server

[Bring up two systems](https://docs.chef.io/install_chef_automate.html#platforms), one to run Chef Automate and one to run Chef server. Ensure each system [meets the infrastructure requirements](https://docs.chef.io/install_chef_automate.html#infrastructure).

  [COMMENT] For this tutorial, you don't need to configure build nodes.

### Configure the hostname and verify network access

1. Ensure both systems [meet the hostname and networking requirements](https://docs.chef.io/install_chef_automate.html#node-hostnames-and-network-access).

  As an example, if you're setting this up on Amazon Web Services, you can [use the metadata service](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html#instancedata-data-retrieval) to retrieve the hostname.

  ```bash
  $ echo $(curl -s http://169.254.169.254/latest/meta-data/public-hostname) | xargs sudo hostname
  ```

[END_BOX]

[START_BOX]

## 3. Install Chef server

1. [Install the Chef server package](https://docs.chef.io/install_chef_automate.html#chef-server-installation) and set up an initial user and orgnanization.

1. Copy the private key file generated by the `chef-server-ctl user-create` command (for example, <% fp '/path/to/username.pem' %>) to a directory where you can easily retrieve it later through a remote copy utility such as `scp`. Here's an example.

  ```bash
  $ cp /path/to/username.pem /tmp/username.pem
  ```
1. [Install push jobs](https://docs.chef.io/install_chef_automate.html#id3) on your Chef server.
1. [Complete the setup](https://docs.chef.io/install_chef_automate.html#id4).
1. [Create a user and organization to manage your cluster](https://docs.chef.io/install_chef_automate.html#create-a-user-and-organization-to-manage-your-cluster).
1. [Configure Chef server to send server object data](https://docs.chef.io/setup_visibility_chef_automate.html#configure-chef-server-to-send-server-object-data).

  Doing so enables Chef server to send messages to Chef Automate whenever an action is taken on a Chef server object, such as when a cookbook is uploaded to the Chef server. Here's an example. Replace <% ph 'CHEF_AUTOMATE_FQDN' %> with your Chef Automate server's FQDN. You can use the token value as shown in the example.

  ```bash
  $ echo "data_collector["root_url"] = "https://CHEF_AUTOMATE_FQDN/data-collector/v0/" | sudo tee -a /etc/opscode/chef-server.rb
  $ echo "data_collector["token"] = "93a49a4f2482c64126f7b6015e6b0f30284287ee4054ff8807fb63d9cbd1c506" | sudo tee -a /etc/opscode/chef-server.rb
  $ sudo chef-server-ctl reconfigure
  ```

[END_BOX]

[START_BOX]

## 4. Install Chef Automate

1. [Install the Chef Automate package](https://docs.chef.io/install_chef_automate.html#chef-automate-server-installation-and-configuration)

[COMMENT] A license key is required to install Chef Automate. When you download the Chef Automate package, you'll need to fill out a short form and then check your email for a link to a temporary license key for this tutorial.

1. [Create a user](https://docs.chef.io/ctl_delivery_server.html#create-user). Here's an example.

  ```bash
  $ sudo delivery-ctl create-user caffeine delivery --password insecurepassword --roles "admin"
  ```

[END_BOX]

[START_BOX]

## 5. Set up your workstation

<%= partial '../../shared/set-up-your-chef-server/knife_and_rsa_key' %>

Your <code class="file-path">~/learn-chef/.chef</code> directory should contain two files:

* your `knife` configuration file, <code class="file-path">knife.rb</code>
* your RSA private key

Your `knife` configuration file should resemble this one. (`node_name`, `client_key`, and `chef_server_url` contain your information.)

<% code_snippet(page: current_page, path: 'generate-knife-config/knife-rb') %>

Copy your, for example, <% fp 'username.pem' %> from your Chef server to your <% fp '.chef' %> directory. Here's an example that uses `scp`.

```bash
$ scp -i ~/.ssh/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@CHEF_SERVER_IP:/tmp/username.pem ~/learn-chef/.chef/username.pem"
```

Your RSA private key should resemble this one.

```bash
# ~
$ cat ~/learn-chef/.chef/your_name.pem
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAqJCxFv1BoqlTJeK5zTZ6vX6hvQuDzlaN0v+Fo5R2zobP72Ga
N8GUOhaYSM0Zkg+epchPS9JX81Euv847g662BBneuT4+W6ImqtHtoqB2iEw9vJbZ
UoIpYRzVCMLpCc3hf3St5FcIz/t55VIAOML8O33CZMkY3o+EUHQx65aI3IDFVcmz
xIFF+ziLbYc7Q1YHumXzv1pOP9o6QqFCcl/r4x5g9sj0eeYwYQBNppy9oELsrBuu
/SEKs41X+tm1nP/sDrxOeI5ybytcN3MZN0SjniMTP+7Knh6xnfeFbmaC9Hp/bpbd
lmaWv4iNJIhLBy/4LUkTh9jpC2knzJnq/bG4wQIDAQABAoIBAEbSXAUrrLr551xg
kO3+eL1LCgtSXjOAPCAtiWl8BBqrm4uY92F7rJpnSd40hgzPETnYGjDiFF+/eSPP
M0QVUJYShHhSBYMccqCMiQot3v9PARVOT8qRs28A3STMN3dkeK9761mPQX2Yy9Mk
i8FNcwpPwS/1KcTAibf/ycWQvrndlflL3KCl/Nnv//Das3dn41npkAB6sGySOPir
rajRuVR9REieRfx/vAGeOFkmWzuizBAxb+GXmYRy/Z+H+daEuqNd7QHAue4xg1s+
7yPB4V+EobpQVVssNkidX5SUcMvu+pU5l7OF9PP1zNMhvQItmhi77VXOj61fVeKP
JTaeHQECgYEA0lH6gVZRpmimoPJ5bNFeBKax/BzK1D7p7rD/z/i1qkiG3yCWYvQ/
1T4pl9kVndhubxaTUug/DcCpSp+va8vnQ3jS7LvDfS2SxNySH/g8XZ/EyO8Zvbfk
lqkpAdh3agKP310jB+dxqjbEwvdG9CdZyXK1ottXTzN07s0tCFcL7nECgYEAzS0X
OTs0FNSLc667Nq99NdcuoHkKsqxYn7zpoyaslqc4o9tABBXCimQJzIWbY3u477B/
1VrP8Ortepp0kev1ythYOGCAXBpukADLgw/1ygxVL51R+K6wbWDJyggMXvpOAhZX
WT0RiVeyOE2tyLERlIV4Q3t7lyXiLJ1irdhBN1ECgYA7FmT2aTXPNp95oCWU+M0d
KWffmIczUemO8ZMs7oa7LF0X2qPlcRFt62TsEEUOb3u3IfSJ2k28o1/sYyh5dHOo
dQ53jk2108asH/u9l5P+CaDTgrkMn9lMqoGmzxXdZpLdAeGRmuhIFdL5o1b/yP5k
piF5e33v9ljnriT0rt/fQQKBgGT9ZsrzzzXdoG2ublaFidnwerDeI1dk35JwqAd4
R8c3s/djOdVI6KK5ruEOenezNEo2dBWOR3/sAswwLmSM4kTfzDyjs0qib/1Nht6S
AodbHqr7IpfnVEviMjDRWVV+mtsIKCJynqkdk0mHYpzAG0khkRqWMzUonnUbWrD7
Gs6hAoGBAKrv2c3/42gSNu8MZFG8r8xmLehRg/Rj6nfFizTu9FH+ph8B4HgECBnV
1aHXvOsOaSDkjyPKa5hHCX145xWjme7blrSJfbsKiAAswSOJytc+PAPIULeocBr6
hW6cD7rMrt5D/6Ofxts8nQnNQ5Z3UJOtB6V3CFzlvw5oRXw1sIE0
-----END RSA PRIVATE KEY-----
```

After you set up your workstation, ensure that you fetch and validate the SSL certificate from your Chef server. Here's an example.

<% command_snippet(page: current_page, path: 'validate-ssl-cert/knife-ssl-fetch') %>

<% command_snippet(page: current_page, path: 'validate-ssl-cert/knife-ssl-check') %>

[END_BOX]

[START_BOX]

## 6. Log in to the Chef Automate dashboard

WHAT, WHY?

HOW?

1. Navigate to https://CHEF\_SERVER\_FQDN, for example, https://ec2-54-205-85-17.compute-1.amazonaws.com

[COMMENT] When prompted, accept the server's certificate. Chef Automate's comes with a self-signed SSL certificate. In a production environment, you would typically set up a certificate chain that's rooted by a trusted certificate authority (CA) to enable the Chef Automate server to verify its authenticity.

1. Sign in using the Chef Automate user you set up in step XXXX.

![](manage-a-node/chef_automate_sign_in.png)

1. The Chef Automate dashboard appears. Select the **Nodes** tab.

![](manage-a-node/chef_automate_nodes_tab.png)

Notice that the **Nodes** dashboard is initially empty. During the bootstrap process, your nodes will do an initial `chef-client` run and report data back to Chef Automate. You'll do that shortly.

![](manage-a-node/chef_automate_nodes_initial_state.png)

POINT TO DOCS?

Leave your browser window open for the next part.

[END_BOX]

[START_BOX]

## Summary

REMOVE ME, ADD RELEVANT INFO TO NEXT SECTIONS

At this point, you have two of the three elements of a typical Chef setup. You installed the Chef DK on your workstation and have access to the Chef server.

Chef server gives you a persistent location to store your cookbooks and information about your nodes. The `knife` command enables you to communicate with the Chef server.

You also got a glimpse of the community cookbook site, [Chef Supermarket](https://supermarket.chef.io), and used it to retrieve a copy of the `learn_chef_httpd` cookbook. You then used `knife` to upload a copy of that cookbook to the Chef server.

[END_BOX]

<% next_page(current_page) do %>

Great, you're all set up to use a Chef server. With your cookbook uploaded to the Chef server, you're now ready to scale-out your infrastructure!

The next step is to configure a new node and run the cookbook on it. In [Learn the Chef basics](/tutorials/learn-the-basics/rhel/), you ran `chef-client` in local mode to configure the node directly. Now you'll use `knife` to trigger `chef-client` to run on your node remotely, from your workstation.

<% end %>
