In this part, you'll set up AWS OpsWorks managed Chef. You'll also set up your workstation to work with it.

[START_BOX]

## AWS OpsWorks managed Chef overview

If you want to learn more about AWS OpsWorks managed Chef before you begin, [check out the user guide](http://docs.aws.amazon.com/opsworks/latest/userguide/welcome_opscm.html).

[END_BOX]

[START_BOX]

## 1. Bring up AWS OpsWorks managed Chef

If you don't already have an AWS OpsWorks managed Chef installation set up, [follow the user guide](http://docs.aws.amazon.com/opsworks/latest/userguide/gettingstarted-opscm.html).

The user guide walks you through bootstrapping your first node. But for now, you only need to perform these tasks:

1. Create your AWS account if you don't have one already.
1. Access your AWS account and security credentials.
1. Set up a VPC.
1. Set up an EC2 key pair.
1. Bring up an AWS OpsWorks managed Chef instance through the AWS console.
1. Download your Chef Automate login credentials and the starter kit.

The setup process takes about 10 minutes to complete. While your instance is provisioned, you can move on to the next step where you'll set up your workstation to work with Chef server and Chef Automate.

[END_BOX]

[START_BOX]

## 2. Set up your workstation

<% platform_long_name = case current_page.parent.data.platform_id
when 'rhel'
  'Red Hat Enterprise Linux or CentOS'
when 'ubuntu'
  'Ubuntu'
when 'windows'
  'Windows Server'
end %>

Recall that your workstation is the computer from which you author your cookbooks and administer your network. Although you're configuring <%= platform_long_name %>, your workstation can be any OS you choose &ndash; be it Linux, Mac OS, or Windows.

[COMMENT] Remember, you can also use a virtual machine, such as an EC2 instance, as your workstation as you experiment with Chef. Just make sure your VM meets the [system requirements](https://docs.chef.io/install_dk.html#review-prerequisites). <% if current_page.parent.data.environment == 'virtualbox' %>Also ensure that nested virtualization, available through a program such as VMware Fusion, is enabled if you're using another virtual machine as your workstation.<% end %>

[WINDOWS] If you're using a Windows 7 workstation, [you'll need to install Windows PowerShell 4.0](http://social.technet.microsoft.com/wiki/contents/articles/21016.how-to-install-windows-powershell-4-0.aspx) or later before you begin. PowerShell is part of the Windows Management Framework.

### 2.1. Install the Chef DK

In the first tutorial, [Learn the Chef basics](/tutorials/learn-the-basics/), you used the tools provided by the Chef Development Kit (Chef DK) to configure a virtual machine directly. Now it's time to install the Chef DK on your workstation so that you can manage a node remotely.

<a class='button radius cta' href='https://downloads.chef.io/chef-dk/' target='_blank'>Install the Chef DK&nbsp;&nbsp;<i class='fa fa-external-link'></i></a>

### 2.2. Open a command prompt

In this tutorial, you'll run Chef commands from a command prompt to manage your node remotely.

#### Linux or Mac OS

If you're running Linux or Mac OS as your workstation, open a terminal window like you normally would.

#### Windows

If you're running Windows as your workstation, open the Chef Development Kit desktop shortcut. The desktop shortcut brings up a PowerShell session that's configured to work with Chef.

![](misc/chefdk-desktop-shortcut-windows.png)

### 2.3. Verify your Chef DK installation

Next, ensure that you can access the Chef DK from the command line. Run `chef --version` to verify the version. This tutorial was last tested on the versions shown here.

<% command_snippet(workstation: 'ubuntu', path: 'manage-a-node/rhel/opsworks/set-up-your-workstation/verify-chef-dk/chef-version') %>

[COMMENT] If you receive an error, the [documentation](https://docs.chef.io/install_dk.html) describes additional steps that can help you set up your workstation. For example, if you're running multiple versions of Ruby, you may need to configure your terminal session [to use Chef's Ruby](https://docs.chef.io/install_dk.html#set-system-ruby).

### 2.4. Set up your text editor

Now's a good time to make sure your favorite text editor is set up. We recommend that you use a text editor that provides features such as syntax highlighting and line numbering.

Here are a few graphical text editors that are popular among Chef users.

* [Atom](http://atom.io)
* [Sublime Text](http://www.sublimetext.com)
* [Visual Studio Code](https://code.visualstudio.com)

If you're on Linux or Mac OS and prefer using a command-line text editor, `emacs`, `nano`, and `vim` are popular. Here are some resources to help get you started.

* [Absolute Beginner's Guide to Emacs](http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs/)
* [The Beginner’s Guide to Nano, the Linux Command-Line Text Editor](http://www.howtogeek.com/howto/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/)
* [Interactive Vim tutorial](http://www.openvim.com/)

### 2.5. Install Git

In this tutorial, you'll obtain starter code from GitHub. You do not need to create a GitHub account, but you'll need a Git client.

Git is popular here at Chef and with the Chef community. Even if you use another source control system, you may find it useful to install the Git client so that you can participate in the community's many open-source projects.

#### Linux or Mac OS

If you're running Linux or Mac OS as your workstation, [download and install Git](https://git-scm.com/downloads) now.

After you install Git, run `git --version` to verify the installation.

<% command_snippet(workstation: 'ubuntu', path: 'manage-a-node/rhel/opsworks/set-up-your-workstation/install-git/git-version') %>

#### Windows

If you're running Windows as your workstation, Chef DK version 0.15 and later comes with [Git for Windows](https://git-scm.com/download/win).

From your Chef DK PowerShell session, run `git --version` to verify the installation.

<% command_snippet(path: 'learn-the-basics/ubuntu/virtualbox/set-up-a-machine-to-manage/verify-your-ssh-client/git--version', workstation: 'windows', replace_prompt: "PS >") %>

<% if current_page.parent.data.platform_id == 'windows' %>

#### 2.6. Verify your RDP client

Although not required, you may find it useful to have an RDP client installed on your workstation. This enables you to connect to your Windows Server instance to verify your work.

<% accordion('install-rdp-windows', 'Windows users') do %>

<% markdown do %>

Windows comes with an RDP client. Run `mstsc` from the command prompt to bring up Remote Desktop.

<% end %>

<% end %>

<% accordion('install-rdp-macosx', 'Mac OS X users') do %>

<% markdown do %>

[Download Microsoft Remote Desktop](https://itunes.apple.com/us/app/microsoft-remote-desktop/id715768417?mt=12) from the Apple App Store. The RDP client from Microsoft's web site might not work.

<% end %>

<% end %>

<% accordion('install-rdp-linux', 'Linux users') do %>

<% markdown do %>

[Remmina](http://www.remmina.org/wp/) is a popular RDP client for Linux.

<% end %>

<% end %>

<% else %>

### 2.6. Verify your SSH client

Although not required, you may find it useful to have an SSH client installed on your workstation. This enables you to connect to your Linux server to verify your work. Mac OS and most Linux distributions come with an SSH client. On Windows, you need to install one.

On Windows you can install the client or you can use the SSH client that comes with Git for Windows, which is part of the Chef DK.

From your Chef DK PowerShell session, run `ssh` to verify that your SSH client is available.

<% command_snippet(path: 'learn-the-basics/ubuntu/virtualbox/set-up-a-machine-to-manage/verify-your-ssh-client/ssh-no-args', workstation: 'windows', replace_prompt: "PS >", features: [:stdin, :stderr]) %>

<% end %>

### 2.8. Extract the starter kit

The starter kit, <% fp 'download.zip' %>, that you downloaded in [step 1](#step1) contains files that enable you to authenticate with the Chef server.

Extract the starter kit to your home directory. Here's an example for a Linux workstation.

<% command_snippet(page: current_page, path: 'extract-starter-kit/unzip-starter-kit') %>

[WINDOWS] In the Learn Chef tutorials, we use the <code class="file-path">~</code> character in directory names, which is a common shortcut for the user's home directory on Linux, but also works in PowerShell. On Windows, <code class="file-path">~</code> refers to your home directory, for example, <code class="file-path">C:\Users\Administrator</code>.

The name of the root directory in the starter kit matches your Chef Automate server's subdomain, for example, **test-k2ii6jzywrc7497e**.

In the Learn Chef tutorials, we use <% fp '~/learn-chef' %> as the root directory to keep all learning materials in one place.

Although not required, you can rename the root directory in the starter kit to <% fp 'learn-chef' %>. If you prefer not to rename the root directory, be sure to replace <% fp 'learn-chef' %> with your directory name in the parts that follow.

<% command_snippet(workstation: 'ubuntu', path: 'manage-a-node/rhel/opsworks/set-up-your-chef-server/extract-starter-kit/rename-root-dir', features: :stdin) %>

If you have the `tree` utility available, you'll see this directory structure.

<% command_snippet(workstation: 'ubuntu', path: 'manage-a-node/rhel/opsworks/set-up-your-chef-server/extract-starter-kit/tree-starter-kit') %>

On Windows, the command looks similar to this.

```ps
$ tree C:\Users\Administrator\learn-chef /F
Folder PATH listing
Volume serial number is 74CD-635A
C:\USERS\ADMINISTRATOR\LEARN-CHEF
│   chefignore
│   README.md
│
├───.chef
│   │   knife.rb
│   │   private.pem
│   │
│   └───ca_certs
│           opsworks-cm-ca-2016-root.pem
│
├───cookbooks
│       README.md
│
├───environments
│       README.md
│
└───roles
        README.md
```

[END_BOX]

[START_BOX]

## 3. Authenticate with the Chef server

[knife](https://docs.chef.io/knife.html) is the command-line tool that provides an interface between your workstation and the Chef server. `knife` enables you to upload your cookbooks to the Chef server and work with _nodes_, the servers that you manage.

First, return to the AWS console and wait for your AWS OpsWorks managed Chef installation to finish.

Then, from your <% fp '~/learn-chef' %> directory, fetch and validate the SSL certificate from your Chef server. This helps ensure you're able to authenticate commands with the Chef server.

<% command_snippet(page: current_page, path: 'validate-ssl-cert/knife-ssl-fetch') %>

<% command_snippet(page: current_page, path: 'validate-ssl-cert/knife-ssl-check') %>

[END_BOX]

[START_BOX]

## 4. Log in to the Chef Automate dashboard

Chef Automate provides a web interface where you can monitor and visualize the status of your nodes. Let's take a look.

1. From a web browser, navigate to your Chef Automate server over HTTPS using its hostname, for example, **https://test-k2ii6jzywrc7497e.gamma.opsworks-cm.io**.

  [COMMENT] When prompted, accept the server's certificate. Chef Automate comes with a self-signed SSL certificate. In a production environment, you would typically set up a certificate chain that's rooted by a trusted certificate authority (CA) to enable the Chef Automate server to verify its authenticity.

1. Sign in using the credentials you downloaded in [step 1](#step1) (the details are in <% fp 'download.csv' %>).

  ![](manage-a-node/chef_automate_sign_in_admin.png)

1. The Chef Automate dashboard appears. Select the **Nodes** tab.

  ![](manage-a-node/chef_automate_nodes_tab.png)

Notice that the **Nodes** dashboard is initially empty. During the bootstrap process, your nodes will do an initial `chef-client` run and report data back to Chef Automate. You'll do that shortly.

![](manage-a-node/chef_automate_nodes_initial_state.png)

Leave your browser window open for the next part.

[END_BOX]

<% next_page(current_page) do %>

At this point, you have a Chef server and a Chef Automate server set up through AWS OpsWorks managed Chef and your workstation is configured to work with them.

Chef server gives you a persistent location to store your cookbooks and information about your nodes. The `knife` command enables you to communicate with the Chef server. Chef Automate's visibilty feature gives you insight into what's happening on your Chef server.

Next, you'll get a copy of the web server cookbook that you wrote in the previous tutorial and upload it to your Chef server.

<% end %>
