---
title: 'Bootstrap your node'
order: 4
description: 'Set up chef-client on your node,
 associate it with your Chef server, and apply your IIS cookbook to it.'
keywords:
layout: lesson
sections: [exercises]
next: {heading: Next, partial: next}
time_to_complete: 20 minutes
---
[HEADLINE] We call the process that installs `chef-client` on a node and the initial check-in to the Chef server _bootstrapping_ the node.

Recall that any computer that's managed by a Chef server is called a _node_, and that `chef-client` is the command that applies the policy defined by your cookbooks to a node.

Let's bootstrap a node and execute the IIS cookbook on it.

[START_BOX]

## 1. Bootstrap your node

the extra params to use when using ssl would be

â€‹[2:49] 
-f <the *.pem file generated by knife windows cert generate> -t ssl

Now that you've verified that you can connect to your node over WinRM, you're now ready to bootstrap it.

First, make sure you're in the <code class="file-path">~/learn-chef</code> directory.

```bash
$ cd ~/learn-chef
```

<div class="indent" id="bootstrap-intro" data-type="windows-fundamentals" ng-non-bindable>
From your workstation, run this command to bootstrap your node. Replace <code class="placeholder">ADDRESS</code> with your remote node's external address, <code class="placeholder">USER</code> with your username, and <code class="placeholder">PASSWORD</code> with your password.
</div>
<p/>
<div id="bootstrap-command" class="window" ng-non-bindable>
  <nav class="control-window">
    <div class="close">&times;</div>
    <div class="minimize"></div>
    <div class="deactivate"></div>
  </nav>
  <h1 class="titleInside">Terminal: ~\chef-repo</h1>
  <div class="container" data-type="windows-fundamentals"><div class="terminal"><table>
    <tbody>
      <tr>
        <td class="gutter"><pre class="line-numbers"><span class="line-number">$</span></pre></td>
        <td class="code"><pre><code><span class="line command">knife bootstrap windows winrm ADDRESS --winrm-user USER --winrm-password 'PASSWORD' --node-name node1 --run-list 'recipe[learn\_chef\_iis]'</span></code></pre></td>
      </tr>
    </tbody></table></div></div>
</div>

[COMMENT] This is a long command &ndash; use the scrollbar to see the entire thing.

[WINDOWS] This command uses Windows Remote Management (WinRM), a popular network protocol for connecting to Windows Server remotely. Although WinRM is how you typically connect to Windows, you can also bootstrap [using the Secure Shell (SSH) protocol](https://docs.chef.io/plugin_knife_windows.html#bootstrap-windows-ssh), which is more typical of Linux-based systems.

The optional `--node-name` argument uniquely identifies the node with the Chef server. Its value can be whatever you want. The server's FQDN is the default. If you previously used the name `node1` to bootstrap a different node, you'll need to choose a different name or remove the previous node.

<a class="help-button radius" href="#" data-reveal-id="knife-help-modal">Need help troubleshooting?</a>

<div id="knife-help-modal" class="reveal-modal" data-reveal aria-labelledby="modalTitle" aria-hidden="true" role="dialog">
  <h3 id="modalTitle">If the operation times out or fails, here are some things to try</h3>
  <ul>
    <li>Ensure that your environment is active before you run <code>knife</code>. For example, CloudShare instances suspend after a period of inactivity. <img class="border" src="/assets/images/windows/cloudshare-suspend.png"></img></li>
    <li>Ensure that you run <code>knife</code> commands from your <code class="file-path">chef-repo</code> directory or one of its sub-directories.</li>
    <li>Ensure you have a <code class="file-path">chef-repo\.chef</code> directory and that it contains a <code class="file-path">knife.rb</code> file and two <code class="file-path">.pem</code> files. If you don't, <a href="/manage-a-node/windows/set-up-your-chef-server#step2" target="_blank">install the Starter Kit</a>.</li>
    <li>Ensure that you have the <a href="/manage-a-node/windows/bootstrap-your-node#step3" target="_blank">knife windows plugin</a> installed.</li>
    <li>Ensure that your node's IP address is accessible from your network.</li>
    <li>Ensure the user name you provide has Administrator access on the node.</li>
    <li>Ensure your workstation has outbound access (including firewall) on these ports:
      <ul>
        <li>22 (SSH)</li>
        <li>80 (HTTP)</li>
        <li>443 (HTTPS)</li>
        <li>5985 and 5986 (WinRM)</li>
      </ul>
    </li>
    <li>Ensure your node has inbound access (including firewall) on these ports:
      <ul>
        <li>22 (SSH)</li>
        <li>5985 and 5986 (WinRM)</li>
      </ul>
    </li>
    <li>Ensure your node has outbound access (including firewall) on these ports:
      <ul>
        <li>443 (HTTPS)</li>
      </ul>
    </li>
    <li>Ensure your node <a href="https://docs.chef.io/plugin_knife_windows.html#requirements" target="_blank">is configured</a> to accept outside WinRM connections. Most commonly, you'll need to run these commands on your Windows Server node from PowerShell before you bootstrap it.<p></p>
    <div class="window Win32">
            <nav class="control-window">
              <div class="close">&times;</div>
              <div class="minimize"></div>
              <div class="deactivate"></div>
            </nav>
            <h1 class="titleInside">Windows PowerShell: ~</h1>
            <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>&nbsp;</span><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>&nbsp;</span><span class='line-number'>></span><span class='line-number'>></span><span class='line-number'>></span></pre></td><td class='code'><pre><code><span class='line command'>winrm quickconfig -q</span><span class='line command'>winrm set winrm/config/winrs '@{MaxMemoryPerShellMB=&quot;1024&quot;}'</span><span class='line command'>winrm set winrm/config '@{MaxTimeoutms=&quot;1800000&quot;}'</span><span class='line command'>winrm set winrm/config/service '@{AllowUnencrypted=&quot;true&quot;}'</span><span class='line command'>winrm set winrm/config/service/auth '@{Basic=&quot;true&quot;}'</span><span class='line output'>&nbsp;</span><span class='line command'>netsh advfirewall firewall add rule name=&quot;WinRM 5985&quot; protocol=TCP dir=in localport=5985 action=allow</span><span class='line command'>netsh advfirewall firewall add rule name=&quot;WinRM 5986&quot; protocol=TCP dir=in localport=5986 action=allow</span><span class='line output'>&nbsp;</span><span class='line command'>net stop winrm</span><span class='line command'>sc.exe config winrm start= auto</span><span class='line command'>net start winrm</span></code></pre></td></tr></table></div></div>
    </li>
  </ul>
  <a class="close-reveal-modal" aria-label="Close">&#215;</a>
</div>

<hr>

<% reveal_modal('knife-help-modal', 'Need help troubleshooting?') do %>

<% markdown do %>

## If the operation times out or fails, here are some things to try

* Ensure that you run `knife` commands from your <code class="file-path">learn-chef</code> directory or one of its sub-directories.
* Ensure you have a <code class="file-path">learn-chef/.chef</code> directory and that it contains a <code class="file-path">knife.rb</code> file and your RSA private key file. If you don't, <a href="/manage-a-node/rhel/set-up-your-chef-server#step2" target="_blank">configure your workstation to communicate with Chef server</a>.
* Ensure that your node's IP address is accessible from your network.
* Ensure the user name you provide has root or `sudo` access on the node.
* Ensure your workstation has outbound access (including firewall) on these ports:
  * 22 (SSH)
  * 80 (HTTP)
  * 443 (HTTPS)
* Ensure your node has inbound access (including firewall) on these ports:
  * 22 (SSH)
* Ensure your node has outbound access (including firewall) on these ports:
  * 443 (HTTPS)

<% end %>

<% end %>


[END_BOX]

[START_BOX]

## 2. Confirm the result

Two things just happened.

First, your node was associated with your hosted Chef account. To verify this, navigate to the [Chef management console](https://manage.chef.io/organizations). From the **Nodes** tab, you'll see an entry for the node you just bootstrapped.

![The bootstrapped node](windows/management-console-node.png)

You can also verify that the node successfully bootstrapped by running the `knife node list` command.

```bash
# ~\chef-repo
$ knife node list
node1
```

You can use the `knife node show` command to view data about your node.

```bash
# ~\chef-repo
$ knife node show node1
Node Name:   node1
Environment: _default
FQDN:        WIN-8LVQPQO00I4
IP:          172.32.66.6
Run List:    recipe[learn_chef_iis]
Roles:
Recipes:     learn_chef_iis, learn_chef_iis::default
Platform:    windows 6.2.9200
Tags:
```

The second thing that happened was that your node did an initial check in with the Chef server and ran the IIS cookbook. To verify this, open a web browser from your workstation and navigate to your web server.

![The basic home page](misc/webserver-basic-remote.png)

[WARN] The IP address that's returned by the `knife node show` command is often the node's _internal_ IP address. Make sure you're using your node's public IP address or host name.

[END_BOX]

[START_BOX]

## How to clean up your environment

Perform these steps if you want to clean up your Chef server after you complete tutorial or you want to repeat the tutorial from the beginning.

### Delete the node from the Chef server

As you experiment, it's a good idea to delete information about your node from the Chef server when you no longer need it. That way, your Chef server contains only relevant information. In practice, it's up to you whether to delete node information when you retire a production system from service.

From your workstation, run these commands to delete the data about your node from the Chef server.

```bash
# ~/learn-chef
$ knife node delete node1 --yes
Deleted node[node1]
$ knife client delete node1 --yes
Deleted client[node1]
```

### Tear down your node

Deleting a node from your Chef server removes any data about that node from the server &ndash; it doesn't automatically tear down the instance.

Don't forget to tear down any cloud instances that you used to complete the tutorial.

[END_BOX]

[START_BOX]

## Summary

The `knife bootstrap` command established a WinRM connection to the node, installed `chef-client`, downloaded the Learn Chef IIS cookbook on the node, and ran it. In one command, Chef carried out most of the steps you previously dealt with manually.

A powerful part of the `knife bootstrap` process is that you did not need to connect to or interact with the server directly. This enables you to further automate the process of provisioning and configuring your infrastructure. But if you'd like, you can connect to the server now to verify that everything is set up as you'd expect.

[END_BOX]
